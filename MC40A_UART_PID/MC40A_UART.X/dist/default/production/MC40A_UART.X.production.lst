

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Thu Jul 05 14:56:07 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 108 "../main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 108 "../main.c"
    45  2007  ECF2               	dw 0xFFFA & 0xFFF7 & 0xFFFF & 0xFCFF & 0xFFFF & 0xEFFF ;#
    46                           	FNCALL	_main,_initIO
    47                           	FNCALL	_main,_pwm_init
    48                           	FNCALL	_main,_motor
    49                           	FNCALL	_main,_lcd_init
    50                           	FNCALL	_main,_LSA08_Init
    51                           	FNCALL	_main,_lcd_clr
    52                           	FNCALL	_main,_lcd_goto
    53                           	FNCALL	_main,_lcd_putstr
    54                           	FNCALL	_main,_PID_MENU
    55                           	FNCALL	_main,_junction_follow
    56                           	FNCALL	_main,_line_follow
    57                           	FNCALL	_junction_follow,_lcd_clr
    58                           	FNCALL	_junction_follow,_lcd_goto
    59                           	FNCALL	_junction_follow,_lcd_putstr
    60                           	FNCALL	_junction_follow,_LSA08_ClearJunction
    61                           	FNCALL	_junction_follow,_jfolo
    62                           	FNCALL	_junction_follow,_motor
    63                           	FNCALL	_junction_follow,_LSA08_GetPosition
    64                           	FNCALL	_jfolo,_motor
    65                           	FNCALL	_jfolo,_LSA08_GetJunction
    66                           	FNCALL	_jfolo,_lcd_goto
    67                           	FNCALL	_jfolo,_lcd_putchar
    68                           	FNCALL	_jfolo,_lcd_num
    69                           	FNCALL	_jfolo,_line_follow
    70                           	FNCALL	_PID_MENU,_Calibrate
    71                           	FNCALL	_PID_MENU,_lcd_goto
    72                           	FNCALL	_PID_MENU,_lcd_putstr
    73                           	FNCALL	_Calibrate,_LSA08_Calibrate
    74                           	FNCALL	_Calibrate,_motor
    75                           	FNCALL	_Calibrate,_lcd_clr
    76                           	FNCALL	_lcd_num,___lwmod
    77                           	FNCALL	_lcd_num,___lwdiv
    78                           	FNCALL	_lcd_num,_lcd_putstr
    79                           	FNCALL	_lcd_num,_lcd_putchar
    80                           	FNCALL	_LSA08_Init,_UART_INIT
    81                           	FNCALL	_LSA08_Init,_LSA08_ClearJunction
    82                           	FNCALL	_LSA08_Init,_LSA08_UARTMode
    83                           	FNCALL	_line_follow,_LSA08_GetPosition
    84                           	FNCALL	_line_follow,_PID_UPDATE
    85                           	FNCALL	_line_follow,___awtoft
    86                           	FNCALL	_line_follow,___ftmul
    87                           	FNCALL	_line_follow,___ftadd
    88                           	FNCALL	_line_follow,___fttol
    89                           	FNCALL	_line_follow,_motor
    90                           	FNCALL	_lcd_putstr,_lcd_2ndline
    91                           	FNCALL	_lcd_putstr,_lcd_putchar
    92                           	FNCALL	_lcd_init,_set_lcd_e
    93                           	FNCALL	_lcd_init,_send_lcd_data
    94                           	FNCALL	_lcd_init,_lcd_clr
    95                           	FNCALL	_LSA08_Calibrate,_SEND_PACKET
    96                           	FNCALL	_LSA08_GetJunction,_SEND_PACKET
    97                           	FNCALL	_LSA08_UARTMode,_SEND_PACKET
    98                           	FNCALL	_LSA08_ClearJunction,_SEND_PACKET
    99                           	FNCALL	_lcd_2ndline,_send_lcd_data
   100                           	FNCALL	_lcd_putchar,_send_lcd_data
   101                           	FNCALL	_lcd_goto,_send_lcd_data
   102                           	FNCALL	_lcd_clr,_send_lcd_data
   103                           	FNCALL	_LSA08_GetPosition,_UART_REC
   104                           	FNCALL	_LSA08_GetPosition,_UART_DUMP
   105                           	FNCALL	_SEND_PACKET,_UART_SEND
   106                           	FNCALL	_SEND_PACKET,_UART_RESPONSE
   107                           	FNCALL	___awtoft,___ftpack
   108                           	FNCALL	___ftmul,___ftpack
   109                           	FNCALL	___ftadd,___ftpack
   110                           	FNCALL	_send_lcd_data,_set_lcd_rs
   111                           	FNCALL	_send_lcd_data,_set_lcd_data
   112                           	FNCALL	_send_lcd_data,_set_lcd_e
   113                           	FNCALL	_motor,_set_pwmr
   114                           	FNCALL	_motor,_set_pwml
   115                           	FNCALL	_UART_DUMP,_UART_REC
   116                           	FNCALL	_UART_RESPONSE,_UART_REC
   117                           	FNROOT	_main
   118                           	global	_motor_speed
   119                           	global	_LSA08_ADD
   120                           	global	_Kd
   121                           	global	_Ki
   122                           	global	_Kp
   123                           psect	idataBANK0,class=CODE,space=0,delta=2
   124                           global __pidataBANK0
   125  0004                     __pidataBANK0:
   126                           	file	"../main.c"
   127                           	line	117
   128                           
   129                           ;initializer for _motor_speed
   130  0004  34BE               	retlw	0BEh
   131  0005  3400               	retlw	0
   132                           
   133                           	line	19
   134                           
   135                           ;initializer for _LSA08_ADD
   136  0006  3401               	retlw	01h
   137                           psect	idataBANK1,class=CODE,space=0,delta=2
   138                           global __pidataBANK1
   139  0B47                     __pidataBANK1:
   140                           	line	123
   141                           
   142                           ;initializer for _Kd
   143  0B47  3400               	retlw	0x0
   144  0B48  3420               	retlw	0x20
   145  0B49  3442               	retlw	0x42
   146                           
   147                           
   148                           ;initializer for _Ki
   149  0B4A  34D7               	retlw	0xd7
   150  0B4B  34A3               	retlw	0xa3
   151  0B4C  343B               	retlw	0x3b
   152                           
   153                           
   154                           ;initializer for _Kp
   155  0B4D  3400               	retlw	0x0
   156  0B4E  34A0               	retlw	0xa0
   157  0B4F  3440               	retlw	0x40
   158                           
   159                           	global	_integral
   160                           	global	_m_diff
   161                           	global	_proportional
   162                           	global	_rec
   163                           	global	_ERR_FLAG
   164                           	global	_junction_mode
   165                           	global	_mode
   166                           	global	_pos
   167                           	global	PID_UPDATE@proportional0
   168                           	global	PID_UPDATE@proportional1
   169                           	global	PID_UPDATE@proportional2
   170                           	global	_derivative
   171                           	global	_last_proportional
   172                           	global	_CCPR1L
   173  0015                     _CCPR1L	set	21
   174                           	global	_CCPR2L
   175  001B                     _CCPR2L	set	27
   176                           	global	_PORTB
   177  0006                     _PORTB	set	6
   178                           	global	_PORTC
   179  0007                     _PORTC	set	7
   180                           	global	_PORTCbits
   181  0007                     _PORTCbits	set	7
   182                           	global	_PORTD
   183  0008                     _PORTD	set	8
   184                           	global	_PORTE
   185  0009                     _PORTE	set	9
   186                           	global	_RCREG
   187  001A                     _RCREG	set	26
   188                           	global	_RCSTAbits
   189  0018                     _RCSTAbits	set	24
   190                           	global	_TXREG
   191  0019                     _TXREG	set	25
   192                           	global	_CARRY
   193  0018                     _CARRY	set	24
   194                           	global	_CCP1M0
   195  00B8                     _CCP1M0	set	184
   196                           	global	_CCP1M1
   197  00B9                     _CCP1M1	set	185
   198                           	global	_CCP1M2
   199  00BA                     _CCP1M2	set	186
   200                           	global	_CCP1M3
   201  00BB                     _CCP1M3	set	187
   202                           	global	_CCP2M0
   203  00E8                     _CCP2M0	set	232
   204                           	global	_CCP2M1
   205  00E9                     _CCP2M1	set	233
   206                           	global	_CCP2M2
   207  00EA                     _CCP2M2	set	234
   208                           	global	_CCP2M3
   209  00EB                     _CCP2M3	set	235
   210                           	global	_CCP2X
   211  00ED                     _CCP2X	set	237
   212                           	global	_CCP2Y
   213  00EC                     _CCP2Y	set	236
   214                           	global	_DC1B0
   215  00BC                     _DC1B0	set	188
   216                           	global	_DC1B1
   217  00BD                     _DC1B1	set	189
   218                           	global	_FERR
   219  00C2                     _FERR	set	194
   220                           	global	_GIE
   221  005F                     _GIE	set	95
   222                           	global	_P1M0
   223  00BE                     _P1M0	set	190
   224                           	global	_P1M1
   225  00BF                     _P1M1	set	191
   226                           	global	_RB0
   227  0030                     _RB0	set	48
   228                           	global	_RB1
   229  0031                     _RB1	set	49
   230                           	global	_RB2
   231  0032                     _RB2	set	50
   232                           	global	_RB3
   233  0033                     _RB3	set	51
   234                           	global	_RB4
   235  0034                     _RB4	set	52
   236                           	global	_RB5
   237  0035                     _RB5	set	53
   238                           	global	_RB6
   239  0036                     _RB6	set	54
   240                           	global	_RB7
   241  0037                     _RB7	set	55
   242                           	global	_RCIF
   243  0065                     _RCIF	set	101
   244                           	global	_RE2
   245  004A                     _RE2	set	74
   246                           	global	_T2CKPS0
   247  0090                     _T2CKPS0	set	144
   248                           	global	_T2CKPS1
   249  0091                     _T2CKPS1	set	145
   250                           	global	_TMR2ON
   251  0092                     _TMR2ON	set	146
   252                           	global	_PR2
   253  0092                     _PR2	set	146
   254                           	global	_SPBRG
   255  0099                     _SPBRG	set	153
   256                           	global	_SPBRGH
   257  009A                     _SPBRGH	set	154
   258                           	global	_TRISA
   259  0085                     _TRISA	set	133
   260                           	global	_TRISB
   261  0086                     _TRISB	set	134
   262                           	global	_TRISC
   263  0087                     _TRISC	set	135
   264                           	global	_TRISCbits
   265  0087                     _TRISCbits	set	135
   266                           	global	_TRISD
   267  0088                     _TRISD	set	136
   268                           	global	_TRISE
   269  0089                     _TRISE	set	137
   270                           	global	_TXSTAbits
   271  0098                     _TXSTAbits	set	152
   272                           	global	_TRMT
   273  04C1                     _TRMT	set	1217
   274                           	global	_EEADR
   275  010D                     _EEADR	set	269
   276                           	global	_EEDATA
   277  010C                     _EEDATA	set	268
   278                           	global	_ANSEL
   279  0188                     _ANSEL	set	392
   280                           	global	_ANSELH
   281  0189                     _ANSELH	set	393
   282                           	global	_BAUDCTLbits
   283  0187                     _BAUDCTLbits	set	391
   284                           	global	_EECON1
   285  018C                     _EECON1	set	396
   286                           	global	_EECON2
   287  018D                     _EECON2	set	397
   288                           	global	_RD
   289  0C60                     _RD	set	3168
   290                           	global	_WR
   291  0C61                     _WR	set	3169
   292                           	global	_WREN
   293  0C62                     _WREN	set	3170
   294                           psect	strings,class=STRING,delta=2
   295                           global __pstrings
   296  0800                     __pstrings:
   297                           ;	global	stringdir,stringtab,__stringbase
   298  0800                     stringtab:
   299                           ;	String table - string pointers are 1 byte each
   300  0800  1BFF               	btfsc	(btemp+1),7
   301  0801  280A               	ljmp	stringcode
   302  0802  1383               	bcf	status,7
   303  0803  187F               	btfsc	(btemp+1),0
   304  0804  1783               	bsf	status,7
   305  0805  0800               	movf	indf,w
   306  0806  0A84               	incf fsr
   307  0807  1903               skipnz
   308  0808  0AFF               incf btemp+1
   309  0809  0008               	return
   310  080A                     stringcode:stringdir:
      + 080A                     stringdir:	
   311  080A  3008               movlw high(stringdir)
   312  080B  008A               movwf pclath
   313  080C  0804               movf fsr,w
   314  080D  0A84               incf fsr
   315  080E  0782               	addwf pc
   316  080F                     __stringbase:
   317  080F  3400               	retlw	0
   318                           psect	strings
   319                           	
   320  0810                     STR_4:	
   321  0810  344A               	retlw	74	;'J'
   322  0811  3475               	retlw	117	;'u'
   323  0812  346E               	retlw	110	;'n'
   324  0813  3463               	retlw	99	;'c'
   325  0814  3474               	retlw	116	;'t'
   326  0815  3469               	retlw	105	;'i'
   327  0816  346F               	retlw	111	;'o'
   328  0817  346E               	retlw	110	;'n'
   329  0818  340A               	retlw	10
   330  0819  3443               	retlw	67	;'C'
   331  081A  346F               	retlw	111	;'o'
   332  081B  3475               	retlw	117	;'u'
   333  081C  346E               	retlw	110	;'n'
   334  081D  3474               	retlw	116	;'t'
   335  081E  3400               	retlw	0
   336                           psect	strings
   337                           	
   338  081F                     STR_3:	
   339  081F  346C               	retlw	108	;'l'
   340  0820  3469               	retlw	105	;'i'
   341  0821  346E               	retlw	110	;'n'
   342  0822  3465               	retlw	101	;'e'
   343  0823  340A               	retlw	10
   344  0824  3466               	retlw	102	;'f'
   345  0825  346F               	retlw	111	;'o'
   346  0826  346C               	retlw	108	;'l'
   347  0827  346C               	retlw	108	;'l'
   348  0828  346F               	retlw	111	;'o'
   349  0829  3477               	retlw	119	;'w'
   350  082A  3400               	retlw	0
   351                           psect	strings
   352                           	
   353  082B                     STR_6:	
   354  082B  3450               	retlw	80	;'P'
   355  082C  3472               	retlw	114	;'r'
   356  082D  3465               	retlw	101	;'e'
   357  082E  3473               	retlw	115	;'s'
   358  082F  3473               	retlw	115	;'s'
   359  0830  3453               	retlw	83	;'S'
   360  0831  3457               	retlw	87	;'W'
   361  0832  3432               	retlw	50	;'2'
   362  0833  3400               	retlw	0
   363                           psect	strings
   364                           	
   365  0834                     STR_8:	
   366  0834  344A               	retlw	74	;'J'
   367  0835  3475               	retlw	117	;'u'
   368  0836  346E               	retlw	110	;'n'
   369  0837  3463               	retlw	99	;'c'
   370  0838  3474               	retlw	116	;'t'
   371  0839  3469               	retlw	105	;'i'
   372  083A  346F               	retlw	111	;'o'
   373  083B  346E               	retlw	110	;'n'
   374  083C  3400               	retlw	0
   375                           psect	strings
   376                           	
   377  083D                     STR_9:	
   378  083D  344C               	retlw	76	;'L'
   379  083E  3469               	retlw	105	;'i'
   380  083F  346E               	retlw	110	;'n'
   381  0840  3465               	retlw	101	;'e'
   382  0841  3420               	retlw	32	;' '
   383  0842  3446               	retlw	70	;'F'
   384  0843  346C               	retlw	108	;'l'
   385  0844  3477               	retlw	119	;'w'
   386  0845  3400               	retlw	0
   387                           psect	strings
   388                           	
   389  0846                     STR_10:	
   390  0846  3443               	retlw	67	;'C'
   391  0847  3461               	retlw	97	;'a'
   392  0848  346C               	retlw	108	;'l'
   393  0849  3462               	retlw	98	;'b'
   394  084A  3420               	retlw	32	;' '
   395  084B  340A               	retlw	10
   396  084C  3400               	retlw	0
   397                           psect	strings
   398                           	
   399  084D                     STR_7:	
   400  084D  344D               	retlw	77	;'M'
   401  084E  346F               	retlw	111	;'o'
   402  084F  3464               	retlw	100	;'d'
   403  0850  3465               	retlw	101	;'e'
   404  0851  3420               	retlw	32	;' '
   405  0852  340A               	retlw	10
   406  0853  3400               	retlw	0
   407                           psect	strings
   408                           	
   409  0854                     STR_5:	
   410  0854  3453               	retlw	83	;'S'
   411  0855  3474               	retlw	116	;'t'
   412  0856  3461               	retlw	97	;'a'
   413  0857  3472               	retlw	114	;'r'
   414  0858  3474               	retlw	116	;'t'
   415  0859  340A               	retlw	10
   416  085A  3400               	retlw	0
   417                           psect	strings
   418                           	
   419  085B                     STR_1:	
   420  085B  344C               	retlw	76	;'L'
   421  085C  3453               	retlw	83	;'S'
   422  085D  3441               	retlw	65	;'A'
   423  085E  3430               	retlw	48	;'0'
   424  085F  3438               	retlw	56	;'8'
   425  0860  3400               	retlw	0
   426                           psect	strings
   427                           	
   428  0861                     STR_2:	
   429  0861  3444               	retlw	68	;'D'
   430  0862  3465               	retlw	101	;'e'
   431  0863  346D               	retlw	109	;'m'
   432  0864  346F               	retlw	111	;'o'
   433  0865  3400               	retlw	0
   434                           psect	strings
   435  082B                     STR_11	equ	STR_6+0
   436                           	file	"C:\DOCUME~1\inghui\LOCALS~1\Temp\s5e4."
   437                           	line	#
   438                           psect cinit,class=CODE,delta=2
   439                           global start_initialization
   440  0D92                     start_initialization:
   441                           
   442                           psect	bssBANK0,class=BANK0,space=1
   443                           global __pbssBANK0
   444  0060                     __pbssBANK0:
   445  0060                     _integral:
   446  0060                            ds      2
   447                           
   448  0062                     _m_diff:
   449  0062                            ds      2
   450                           
   451  0064                     _proportional:
   452  0064                            ds      2
   453                           
   454  0066                     _rec:
   455  0066                            ds      2
   456                           
   457  0068                     _ERR_FLAG:
   458  0068                            ds      1
   459                           
   460  0069                     _junction_mode:
   461  0069                            ds      1
   462                           
   463  006A                     _mode:
   464  006A                            ds      1
   465                           
   466  006B                     _pos:
   467  006B                            ds      1
   468                           
   469                           psect	dataBANK0,class=BANK0,space=1
   470                           global __pdataBANK0
   471  006C                     __pdataBANK0:
   472                           	file	"../main.c"
   473                           	line	117
   474  006C                     _motor_speed:
   475  006C                            ds      2
   476                           
   477                           psect	dataBANK0
   478                           	file	"../main.c"
   479                           	line	19
   480  006E                     _LSA08_ADD:
   481  006E                            ds      1
   482                           
   483                           psect	bssBANK1,class=BANK1,space=1
   484                           global __pbssBANK1
   485  00A0                     __pbssBANK1:
   486  00A0                     PID_UPDATE@proportional0:
   487  00A0                            ds      2
   488                           
   489  00A2                     PID_UPDATE@proportional1:
   490  00A2                            ds      2
   491                           
   492  00A4                     PID_UPDATE@proportional2:
   493  00A4                            ds      2
   494                           
   495  00A6                     _derivative:
   496  00A6                            ds      2
   497                           
   498  00A8                     _last_proportional:
   499  00A8                            ds      2
   500                           
   501                           psect	dataBANK1,class=BANK1,space=1
   502                           global __pdataBANK1
   503  00AA                     __pdataBANK1:
   504                           	file	"../main.c"
   505                           	line	123
   506  00AA                     _Kd:
   507  00AA                            ds      3
   508                           
   509                           psect	dataBANK1
   510                           	file	"../main.c"
   511  00AD                     _Ki:
   512  00AD                            ds      3
   513                           
   514                           psect	dataBANK1
   515                           	file	"../main.c"
   516  00B0                     _Kp:
   517  00B0                            ds      3
   518                           
   519                           ; Clear objects allocated to BANK0
   520                           psect cinit,class=CODE,delta=2
   521  0D92  01E0               	clrf	((__pbssBANK0)+0)&07Fh
   522  0D93  01E1               	clrf	((__pbssBANK0)+1)&07Fh
   523  0D94  01E2               	clrf	((__pbssBANK0)+2)&07Fh
   524  0D95  01E3               	clrf	((__pbssBANK0)+3)&07Fh
   525  0D96  01E4               	clrf	((__pbssBANK0)+4)&07Fh
   526  0D97  01E5               	clrf	((__pbssBANK0)+5)&07Fh
   527  0D98  01E6               	clrf	((__pbssBANK0)+6)&07Fh
   528  0D99  01E7               	clrf	((__pbssBANK0)+7)&07Fh
   529  0D9A  01E8               	clrf	((__pbssBANK0)+8)&07Fh
   530  0D9B  01E9               	clrf	((__pbssBANK0)+9)&07Fh
   531  0D9C  01EA               	clrf	((__pbssBANK0)+10)&07Fh
   532  0D9D  01EB               	clrf	((__pbssBANK0)+11)&07Fh
   533                           ; Clear objects allocated to BANK1
   534                           psect cinit,class=CODE,delta=2
   535  0D9E  1683               	bsf	status, 5	;RP0=1, select bank1
   536  0D9F  1303               	bcf	status, 6	;RP1=0, select bank1
   537  0DA0  01A0               	clrf	((__pbssBANK1)+0)&07Fh
   538  0DA1  01A1               	clrf	((__pbssBANK1)+1)&07Fh
   539  0DA2  01A2               	clrf	((__pbssBANK1)+2)&07Fh
   540  0DA3  01A3               	clrf	((__pbssBANK1)+3)&07Fh
   541  0DA4  01A4               	clrf	((__pbssBANK1)+4)&07Fh
   542  0DA5  01A5               	clrf	((__pbssBANK1)+5)&07Fh
   543  0DA6  01A6               	clrf	((__pbssBANK1)+6)&07Fh
   544  0DA7  01A7               	clrf	((__pbssBANK1)+7)&07Fh
   545  0DA8  01A8               	clrf	((__pbssBANK1)+8)&07Fh
   546  0DA9  01A9               	clrf	((__pbssBANK1)+9)&07Fh
   547                           global btemp
   548                           psect inittext,class=CODE,delta=2
   549                           global init_fetch,btemp
   550                           ;	Called with low address in FSR and high address in W
   551  0BDD                     init_fetch:
   552  0BDD  087E               	movf btemp,w
   553  0BDE  008A               	movwf pclath
   554  0BDF  087F               	movf btemp+1,w
   555  0BE0  0082               	movwf pc
   556                           global init_ram
   557                           ;Called with:
   558                           ;	high address of idata address in btemp 
   559                           ;	low address of idata address in btemp+1 
   560                           ;	low address of data in FSR
   561                           ;	high address + 1 of data in btemp-1
   562  0BE1                     init_ram:
   563  0BE1  120A  158A  23DD   	fcall init_fetch
              120A  158A         
   564  0BE6  0080               	movwf indf,f
   565  0BE7  0A84               	incf fsr,f
   566  0BE8  0804               	movf fsr,w
   567  0BE9  067D               	xorwf btemp-1,w
   568  0BEA  1903               	btfsc status,2
   569  0BEB  3400               	retlw 0
   570  0BEC  0AFF               	incf btemp+1,f
   571  0BED  1903               	btfsc status,2
   572  0BEE  0AFE               	incf btemp,f
   573  0BEF  2BE1               	goto init_ram
   574                           ; Initialize objects allocated to BANK1
   575                           psect cinit,class=CODE,delta=2
   576                           global init_ram, __pidataBANK1
   577  0DAA  1383               	bcf	status, 7	;select IRP bank0
   578  0DAB  30B3               	movlw low(__pdataBANK1+9)
   579  0DAC  00FD               	movwf btemp-1,f
   580  0DAD  300B               	movlw high(__pidataBANK1)
   581  0DAE  00FE               	movwf btemp,f
   582  0DAF  3047               	movlw low(__pidataBANK1)
   583  0DB0  00FF               	movwf btemp+1,f
   584  0DB1  30AA               	movlw low(__pdataBANK1)
   585  0DB2  0084               	movwf fsr,f
   586  0DB3  120A  158A  23E1   	fcall init_ram
              120A  158A         
   587                           ; Initialize objects allocated to BANK0
   588                           psect cinit,class=CODE,delta=2
   589                           global init_ram, __pidataBANK0
   590  0DB8  306F               	movlw low(__pdataBANK0+3)
   591  0DB9  00FD               	movwf btemp-1,f
   592  0DBA  3000               	movlw high(__pidataBANK0)
   593  0DBB  00FE               	movwf btemp,f
   594  0DBC  3004               	movlw low(__pidataBANK0)
   595  0DBD  00FF               	movwf btemp+1,f
   596  0DBE  306C               	movlw low(__pdataBANK0)
   597  0DBF  0084               	movwf fsr,f
   598  0DC0  120A  158A  23E1   	fcall init_ram
              120A  158A         
   599                           psect cinit,class=CODE,delta=2
   600                           global end_of_initialization
   601                           
   602                           ;End of C runtime variable initialization code
   603                           
   604  0DC5                     end_of_initialization:
   605  0DC5  0183               clrf status
   606  0DC6  120A  118A  29C7   ljmp _main	;jump to C main() function
   607                           psect	cstackCOMMON,class=COMMON,space=1
   608                           global __pcstackCOMMON
   609  0070                     __pcstackCOMMON:
   610                           	global	??_UART_REC
   611  0070                     ??_UART_REC:	; 0 bytes @ 0x0
   612                           	global	?_UART_SEND
   613  0070                     ?_UART_SEND:	; 0 bytes @ 0x0
   614                           	global	??_UART_SEND
   615  0070                     ??_UART_SEND:	; 0 bytes @ 0x0
   616                           	global	?_UART_INIT
   617  0070                     ?_UART_INIT:	; 0 bytes @ 0x0
   618                           	global	??_UART_INIT
   619  0070                     ??_UART_INIT:	; 0 bytes @ 0x0
   620                           	global	?_UART_DUMP
   621  0070                     ?_UART_DUMP:	; 0 bytes @ 0x0
   622                           	global	?_initIO
   623  0070                     ?_initIO:	; 0 bytes @ 0x0
   624                           	global	??_initIO
   625  0070                     ??_initIO:	; 0 bytes @ 0x0
   626                           	global	?_pwm_init
   627  0070                     ?_pwm_init:	; 0 bytes @ 0x0
   628                           	global	??_pwm_init
   629  0070                     ??_pwm_init:	; 0 bytes @ 0x0
   630                           	global	?_lcd_init
   631  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   632                           	global	?_lcd_clr
   633  0070                     ?_lcd_clr:	; 0 bytes @ 0x0
   634                           	global	?_lcd_goto
   635  0070                     ?_lcd_goto:	; 0 bytes @ 0x0
   636                           	global	?_PID_MENU
   637  0070                     ?_PID_MENU:	; 0 bytes @ 0x0
   638                           	global	?_junction_follow
   639  0070                     ?_junction_follow:	; 0 bytes @ 0x0
   640                           	global	?_line_follow
   641  0070                     ?_line_follow:	; 0 bytes @ 0x0
   642                           	global	?_lcd_putchar
   643  0070                     ?_lcd_putchar:	; 0 bytes @ 0x0
   644                           	global	?_PID_UPDATE
   645  0070                     ?_PID_UPDATE:	; 0 bytes @ 0x0
   646                           	global	??_PID_UPDATE
   647  0070                     ??_PID_UPDATE:	; 0 bytes @ 0x0
   648                           	global	?_set_lcd_e
   649  0070                     ?_set_lcd_e:	; 0 bytes @ 0x0
   650                           	global	??_set_lcd_e
   651  0070                     ??_set_lcd_e:	; 0 bytes @ 0x0
   652                           	global	?_set_lcd_rs
   653  0070                     ?_set_lcd_rs:	; 0 bytes @ 0x0
   654                           	global	??_set_lcd_rs
   655  0070                     ??_set_lcd_rs:	; 0 bytes @ 0x0
   656                           	global	?_set_lcd_data
   657  0070                     ?_set_lcd_data:	; 0 bytes @ 0x0
   658                           	global	??_set_lcd_data
   659  0070                     ??_set_lcd_data:	; 0 bytes @ 0x0
   660                           	global	?_main
   661  0070                     ?_main:	; 0 bytes @ 0x0
   662                           	global	?_jfolo
   663  0070                     ?_jfolo:	; 0 bytes @ 0x0
   664                           	global	?_Calibrate
   665  0070                     ?_Calibrate:	; 0 bytes @ 0x0
   666                           	global	?_set_pwmr
   667  0070                     ?_set_pwmr:	; 0 bytes @ 0x0
   668                           	global	??_set_pwmr
   669  0070                     ??_set_pwmr:	; 0 bytes @ 0x0
   670                           	global	?_set_pwml
   671  0070                     ?_set_pwml:	; 0 bytes @ 0x0
   672                           	global	??_set_pwml
   673  0070                     ??_set_pwml:	; 0 bytes @ 0x0
   674                           	global	?_lcd_2ndline
   675  0070                     ?_lcd_2ndline:	; 0 bytes @ 0x0
   676                           	global	?_UART_REC
   677  0070                     ?_UART_REC:	; 1 bytes @ 0x0
   678                           	global	?_LSA08_ClearJunction
   679  0070                     ?_LSA08_ClearJunction:	; 1 bytes @ 0x0
   680                           	global	?_LSA08_UARTMode
   681  0070                     ?_LSA08_UARTMode:	; 1 bytes @ 0x0
   682                           	global	?_UART_RESPONSE
   683  0070                     ?_UART_RESPONSE:	; 1 bytes @ 0x0
   684                           	global	?_LSA08_Init
   685  0070                     ?_LSA08_Init:	; 1 bytes @ 0x0
   686                           	global	?_LSA08_GetPosition
   687  0070                     ?_LSA08_GetPosition:	; 1 bytes @ 0x0
   688                           	global	?_LSA08_GetJunction
   689  0070                     ?_LSA08_GetJunction:	; 1 bytes @ 0x0
   690                           	global	?_LSA08_Calibrate
   691  0070                     ?_LSA08_Calibrate:	; 1 bytes @ 0x0
   692                           	global	?___lwdiv
   693  0070                     ?___lwdiv:	; 2 bytes @ 0x0
   694                           	global	?___lwmod
   695  0070                     ?___lwmod:	; 2 bytes @ 0x0
   696                           	global	?___ftpack
   697  0070                     ?___ftpack:	; 3 bytes @ 0x0
   698                           	global	set_pwmr@uc_duty_cycle
   699  0070                     set_pwmr@uc_duty_cycle:	; 1 bytes @ 0x0
   700                           	global	set_pwml@uc_duty_cycle
   701  0070                     set_pwml@uc_duty_cycle:	; 1 bytes @ 0x0
   702                           	global	set_lcd_e@b_output
   703  0070                     set_lcd_e@b_output:	; 1 bytes @ 0x0
   704                           	global	set_lcd_rs@b_output
   705  0070                     set_lcd_rs@b_output:	; 1 bytes @ 0x0
   706                           	global	set_lcd_data@uc_data
   707  0070                     set_lcd_data@uc_data:	; 1 bytes @ 0x0
   708                           	global	UART_SEND@data
   709  0070                     UART_SEND@data:	; 1 bytes @ 0x0
   710                           	global	___lwdiv@divisor
   711  0070                     ___lwdiv@divisor:	; 2 bytes @ 0x0
   712                           	global	___lwmod@divisor
   713  0070                     ___lwmod@divisor:	; 2 bytes @ 0x0
   714                           	global	___ftpack@arg
   715  0070                     ___ftpack@arg:	; 3 bytes @ 0x0
   716  0070                     	ds	1
   717                           	global	?_motor
   718  0071                     ?_motor:	; 0 bytes @ 0x1
   719                           	global	?_send_lcd_data
   720  0071                     ?_send_lcd_data:	; 0 bytes @ 0x1
   721                           	global	motor@uc_right_motor_speed
   722  0071                     motor@uc_right_motor_speed:	; 1 bytes @ 0x1
   723                           	global	send_lcd_data@uc_data
   724  0071                     send_lcd_data@uc_data:	; 1 bytes @ 0x1
   725                           	global	UART_REC@waitcount
   726  0071                     UART_REC@waitcount:	; 4 bytes @ 0x1
   727  0071                     	ds	1
   728                           	global	??_motor
   729  0072                     ??_motor:	; 0 bytes @ 0x2
   730                           	global	??_send_lcd_data
   731  0072                     ??_send_lcd_data:	; 0 bytes @ 0x2
   732                           	global	PID_UPDATE@position
   733  0072                     PID_UPDATE@position:	; 1 bytes @ 0x2
   734                           	global	motor@uc_left_motor_speed
   735  0072                     motor@uc_left_motor_speed:	; 1 bytes @ 0x2
   736                           	global	___lwdiv@dividend
   737  0072                     ___lwdiv@dividend:	; 2 bytes @ 0x2
   738                           	global	___lwmod@dividend
   739  0072                     ___lwmod@dividend:	; 2 bytes @ 0x2
   740  0072                     	ds	1
   741                           	global	___ftpack@exp
   742  0073                     ___ftpack@exp:	; 1 bytes @ 0x3
   743  0073                     	ds	1
   744                           	global	??___lwdiv
   745  0074                     ??___lwdiv:	; 0 bytes @ 0x4
   746                           	global	??___lwmod
   747  0074                     ??___lwmod:	; 0 bytes @ 0x4
   748                           	global	send_lcd_data@b_rs
   749  0074                     send_lcd_data@b_rs:	; 1 bytes @ 0x4
   750                           	global	___ftpack@sign
   751  0074                     ___ftpack@sign:	; 1 bytes @ 0x4
   752  0074                     	ds	1
   753                           	global	??_lcd_init
   754  0075                     ??_lcd_init:	; 0 bytes @ 0x5
   755                           	global	??_lcd_clr
   756  0075                     ??_lcd_clr:	; 0 bytes @ 0x5
   757                           	global	??_lcd_goto
   758  0075                     ??_lcd_goto:	; 0 bytes @ 0x5
   759                           	global	??_lcd_putchar
   760  0075                     ??_lcd_putchar:	; 0 bytes @ 0x5
   761                           	global	??___ftpack
   762  0075                     ??___ftpack:	; 0 bytes @ 0x5
   763                           	global	??_lcd_2ndline
   764  0075                     ??_lcd_2ndline:	; 0 bytes @ 0x5
   765                           	global	UART_REC@rec_data
   766  0075                     UART_REC@rec_data:	; 1 bytes @ 0x5
   767                           	global	___lwmod@counter
   768  0075                     ___lwmod@counter:	; 1 bytes @ 0x5
   769                           	global	___lwdiv@quotient
   770  0075                     ___lwdiv@quotient:	; 2 bytes @ 0x5
   771  0075                     	ds	1
   772                           	global	??_UART_DUMP
   773  0076                     ??_UART_DUMP:	; 0 bytes @ 0x6
   774                           	global	??_UART_RESPONSE
   775  0076                     ??_UART_RESPONSE:	; 0 bytes @ 0x6
   776                           	global	lcd_goto@uc_position
   777  0076                     lcd_goto@uc_position:	; 1 bytes @ 0x6
   778                           	global	lcd_putchar@c_data
   779  0076                     lcd_putchar@c_data:	; 1 bytes @ 0x6
   780  0076                     	ds	1
   781                           	global	?_lcd_putstr
   782  0077                     ?_lcd_putstr:	; 0 bytes @ 0x7
   783                           	global	UART_RESPONSE@rec_bytes
   784  0077                     UART_RESPONSE@rec_bytes:	; 1 bytes @ 0x7
   785                           	global	UART_DUMP@dump
   786  0077                     UART_DUMP@dump:	; 1 bytes @ 0x7
   787                           	global	___lwdiv@counter
   788  0077                     ___lwdiv@counter:	; 1 bytes @ 0x7
   789                           	global	lcd_putstr@csz_string
   790  0077                     lcd_putstr@csz_string:	; 2 bytes @ 0x7
   791  0077                     	ds	1
   792                           	global	??_LSA08_GetPosition
   793  0078                     ??_LSA08_GetPosition:	; 0 bytes @ 0x8
   794                           	global	?_SEND_PACKET
   795  0078                     ?_SEND_PACKET:	; 1 bytes @ 0x8
   796                           	global	?___fttol
   797  0078                     ?___fttol:	; 4 bytes @ 0x8
   798                           	global	SEND_PACKET@command
   799  0078                     SEND_PACKET@command:	; 1 bytes @ 0x8
   800                           	global	___fttol@f1
   801  0078                     ___fttol@f1:	; 3 bytes @ 0x8
   802  0078                     	ds	1
   803                           	global	??_lcd_putstr
   804  0079                     ??_lcd_putstr:	; 0 bytes @ 0x9
   805                           	global	?_lcd_num
   806  0079                     ?_lcd_num:	; 1 bytes @ 0x9
   807                           	global	SEND_PACKET@value
   808  0079                     SEND_PACKET@value:	; 1 bytes @ 0x9
   809                           	global	LSA08_GetPosition@post
   810  0079                     LSA08_GetPosition@post:	; 1 bytes @ 0x9
   811                           	global	lcd_num@number
   812  0079                     lcd_num@number:	; 2 bytes @ 0x9
   813  0079                     	ds	1
   814                           	global	SEND_PACKET@com_dat
   815  007A                     SEND_PACKET@com_dat:	; 1 bytes @ 0xA
   816                           	global	LSA08_GetPosition@linepost
   817  007A                     LSA08_GetPosition@linepost:	; 1 bytes @ 0xA
   818  007A                     	ds	1
   819                           	global	??_SEND_PACKET
   820  007B                     ??_SEND_PACKET:	; 0 bytes @ 0xB
   821                           	global	lcd_num@digit
   822  007B                     lcd_num@digit:	; 1 bytes @ 0xB
   823  007B                     	ds	1
   824                           	global	??___awtoft
   825  007C                     ??___awtoft:	; 0 bytes @ 0xC
   826                           	global	SEND_PACKET@add
   827  007C                     SEND_PACKET@add:	; 1 bytes @ 0xC
   828  007C                     	ds	1
   829                           	global	??_PID_MENU
   830  007D                     ??_PID_MENU:	; 0 bytes @ 0xD
   831                           	global	??_LSA08_GetJunction
   832  007D                     ??_LSA08_GetJunction:	; 0 bytes @ 0xD
   833                           	global	LSA08_UARTMode@mode
   834  007D                     LSA08_UARTMode@mode:	; 1 bytes @ 0xD
   835  007D                     	ds	1
   836                           	global	??_LSA08_Init
   837  007E                     ??_LSA08_Init:	; 0 bytes @ 0xE
   838                           psect	cstackBANK0,class=BANK0,space=1
   839                           global __pcstackBANK0
   840  0020                     __pcstackBANK0:
   841                           	global	??_LSA08_ClearJunction
   842  0020                     ??_LSA08_ClearJunction:	; 0 bytes @ 0x0
   843                           	global	??_LSA08_UARTMode
   844  0020                     ??_LSA08_UARTMode:	; 0 bytes @ 0x0
   845                           	global	??_lcd_num
   846  0020                     ??_lcd_num:	; 0 bytes @ 0x0
   847                           	global	??_LSA08_Calibrate
   848  0020                     ??_LSA08_Calibrate:	; 0 bytes @ 0x0
   849                           	global	??___fttol
   850  0020                     ??___fttol:	; 0 bytes @ 0x0
   851  0020                     	ds	2
   852                           	global	??_Calibrate
   853  0022                     ??_Calibrate:	; 0 bytes @ 0x2
   854  0022                     	ds	2
   855                           	global	___fttol@sign1
   856  0024                     ___fttol@sign1:	; 1 bytes @ 0x4
   857                           	global	lcd_num@num
   858  0024                     lcd_num@num:	; 16 bytes @ 0x4
   859  0024                     	ds	1
   860                           	global	PID_MENU@count
   861  0025                     PID_MENU@count:	; 4 bytes @ 0x5
   862                           	global	___fttol@lval
   863  0025                     ___fttol@lval:	; 4 bytes @ 0x5
   864  0025                     	ds	4
   865                           	global	PID_MENU@mode
   866  0029                     PID_MENU@mode:	; 1 bytes @ 0x9
   867                           	global	___fttol@exp1
   868  0029                     ___fttol@exp1:	; 1 bytes @ 0x9
   869  0029                     	ds	1
   870                           	global	?___awtoft
   871  002A                     ?___awtoft:	; 3 bytes @ 0xA
   872                           	global	___awtoft@c
   873  002A                     ___awtoft@c:	; 2 bytes @ 0xA
   874  002A                     	ds	3
   875                           	global	___awtoft@sign
   876  002D                     ___awtoft@sign:	; 1 bytes @ 0xD
   877  002D                     	ds	1
   878                           	global	?___ftmul
   879  002E                     ?___ftmul:	; 3 bytes @ 0xE
   880                           	global	___ftmul@f1
   881  002E                     ___ftmul@f1:	; 3 bytes @ 0xE
   882  002E                     	ds	3
   883                           	global	___ftmul@f2
   884  0031                     ___ftmul@f2:	; 3 bytes @ 0x11
   885  0031                     	ds	3
   886                           	global	??___ftmul
   887  0034                     ??___ftmul:	; 0 bytes @ 0x14
   888                           	global	lcd_num@j
   889  0034                     lcd_num@j:	; 1 bytes @ 0x14
   890  0034                     	ds	1
   891                           	global	lcd_num@k
   892  0035                     lcd_num@k:	; 1 bytes @ 0x15
   893  0035                     	ds	1
   894                           	global	lcd_num@i
   895  0036                     lcd_num@i:	; 1 bytes @ 0x16
   896  0036                     	ds	2
   897                           	global	___ftmul@exp
   898  0038                     ___ftmul@exp:	; 1 bytes @ 0x18
   899  0038                     	ds	1
   900                           	global	___ftmul@f3_as_product
   901  0039                     ___ftmul@f3_as_product:	; 3 bytes @ 0x19
   902  0039                     	ds	3
   903                           	global	___ftmul@cntr
   904  003C                     ___ftmul@cntr:	; 1 bytes @ 0x1C
   905  003C                     	ds	1
   906                           	global	___ftmul@sign
   907  003D                     ___ftmul@sign:	; 1 bytes @ 0x1D
   908  003D                     	ds	1
   909                           	global	?___ftadd
   910  003E                     ?___ftadd:	; 3 bytes @ 0x1E
   911                           	global	___ftadd@f1
   912  003E                     ___ftadd@f1:	; 3 bytes @ 0x1E
   913  003E                     	ds	3
   914                           	global	___ftadd@f2
   915  0041                     ___ftadd@f2:	; 3 bytes @ 0x21
   916  0041                     	ds	3
   917                           	global	??___ftadd
   918  0044                     ??___ftadd:	; 0 bytes @ 0x24
   919  0044                     	ds	4
   920                           	global	___ftadd@sign
   921  0048                     ___ftadd@sign:	; 1 bytes @ 0x28
   922  0048                     	ds	1
   923                           	global	___ftadd@exp2
   924  0049                     ___ftadd@exp2:	; 1 bytes @ 0x29
   925  0049                     	ds	1
   926                           	global	___ftadd@exp1
   927  004A                     ___ftadd@exp1:	; 1 bytes @ 0x2A
   928  004A                     	ds	1
   929                           	global	??_line_follow
   930  004B                     ??_line_follow:	; 0 bytes @ 0x2B
   931  004B                     	ds	2
   932                           	global	line_follow@leftspeed
   933  004D                     line_follow@leftspeed:	; 2 bytes @ 0x2D
   934  004D                     	ds	2
   935                           	global	line_follow@rightspeed
   936  004F                     line_follow@rightspeed:	; 2 bytes @ 0x2F
   937  004F                     	ds	2
   938                           	global	??_jfolo
   939  0051                     ??_jfolo:	; 0 bytes @ 0x31
   940  0051                     	ds	3
   941                           	global	jfolo@count
   942  0054                     jfolo@count:	; 1 bytes @ 0x34
   943  0054                     	ds	1
   944                           	global	jfolo@timer
   945  0055                     jfolo@timer:	; 1 bytes @ 0x35
   946  0055                     	ds	1
   947                           	global	jfolo@junction_count
   948  0056                     jfolo@junction_count:	; 1 bytes @ 0x36
   949  0056                     	ds	1
   950                           	global	??_junction_follow
   951  0057                     ??_junction_follow:	; 0 bytes @ 0x37
   952  0057                     	ds	3
   953                           	global	junction_follow@i
   954  005A                     junction_follow@i:	; 1 bytes @ 0x3A
   955  005A                     	ds	1
   956                           	global	junction_follow@status
   957  005B                     junction_follow@status:	; 1 bytes @ 0x3B
   958  005B                     	ds	1
   959                           	global	junction_follow@lineposition
   960  005C                     junction_follow@lineposition:	; 1 bytes @ 0x3C
   961  005C                     	ds	1
   962                           	global	??_main
   963  005D                     ??_main:	; 0 bytes @ 0x3D
   964  005D                     	ds	3
   965 ;;Data sizes: Strings 86, constant 0, data 12, bss 22, persistent 0 stack 0
   966 ;;Auto spaces:   Size  Autos    Used
   967 ;; COMMON          14     14      14
   968 ;; BANK0           80     64      79
   969 ;; BANK1           80      0      19
   970 ;; BANK3           96      0       0
   971 ;; BANK2           96      0       0
   972                           
   973 ;;
   974 ;; Pointer list with targets:
   975                           
   976 ;; ?___ftpack	float  size(1) Largest target is 0
   977 ;;
   978 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   979 ;;
   980 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   981 ;;
   982 ;; ?___fttol	long  size(1) Largest target is 0
   983 ;;
   984 ;; ?___ftmul	float  size(1) Largest target is 0
   985 ;;
   986 ;; ?___awtoft	float  size(1) Largest target is 0
   987 ;;
   988 ;; ?___ftadd	float  size(1) Largest target is 0
   989 ;;
   990 ;; lcd_putstr@csz_string	PTR const unsigned char  size(2) Largest target is 16
   991 ;;		 -> lcd_num@num(BANK0[16]), STR_11(CODE[9]), STR_10(CODE[7]), STR_9(CODE[9]), 
   992 ;;		 -> STR_8(CODE[9]), STR_7(CODE[7]), STR_6(CODE[9]), STR_5(CODE[7]), 
   993 ;;		 -> STR_4(CODE[15]), STR_3(CODE[12]), STR_2(CODE[5]), STR_1(CODE[6]), 
   994 ;;
   995                           
   996                           
   997 ;;
   998 ;; Critical Paths under _main in COMMON
   999 ;;
  1000 ;;   _main->_PID_MENU
  1001 ;;   _jfolo->_LSA08_GetJunction
  1002 ;;   _lcd_num->_lcd_putstr
  1003 ;;   _LSA08_Init->_LSA08_UARTMode
  1004 ;;   _line_follow->___awtoft
  1005 ;;   _lcd_putstr->_lcd_putchar
  1006 ;;   _lcd_init->_send_lcd_data
  1007 ;;   _LSA08_Calibrate->_SEND_PACKET
  1008 ;;   _LSA08_GetJunction->_SEND_PACKET
  1009 ;;   _LSA08_UARTMode->_SEND_PACKET
  1010 ;;   _LSA08_ClearJunction->_SEND_PACKET
  1011 ;;   _lcd_2ndline->_send_lcd_data
  1012 ;;   _lcd_putchar->_send_lcd_data
  1013 ;;   _lcd_goto->_send_lcd_data
  1014 ;;   _lcd_clr->_send_lcd_data
  1015 ;;   _LSA08_GetPosition->_UART_DUMP
  1016 ;;   _SEND_PACKET->_UART_RESPONSE
  1017 ;;   ___awtoft->___fttol
  1018 ;;   ___ftmul->___awtoft
  1019 ;;   ___ftadd->___awtoft
  1020 ;;   _send_lcd_data->_set_lcd_rs
  1021 ;;   _send_lcd_data->_set_lcd_data
  1022 ;;   _send_lcd_data->_set_lcd_e
  1023 ;;   _motor->_set_pwmr
  1024 ;;   _motor->_set_pwml
  1025 ;;   _UART_DUMP->_UART_REC
  1026 ;;   _UART_RESPONSE->_UART_REC
  1027 ;;   ___fttol->___ftpack
  1028 ;;
  1029 ;; Critical Paths under _main in BANK0
  1030 ;;
  1031 ;;   _main->_junction_follow
  1032 ;;   _junction_follow->_jfolo
  1033 ;;   _jfolo->_line_follow
  1034 ;;   _PID_MENU->_Calibrate
  1035 ;;   _Calibrate->_LSA08_Calibrate
  1036 ;;   _LSA08_Init->_LSA08_UARTMode
  1037 ;;   _line_follow->___ftadd
  1038 ;;   ___awtoft->___fttol
  1039 ;;   ___ftmul->___awtoft
  1040 ;;   ___ftadd->___ftmul
  1041 ;;
  1042 ;; Critical Paths under _main in BANK1
  1043 ;;
  1044 ;;   None.
  1045 ;;
  1046 ;; Critical Paths under _main in BANK3
  1047 ;;
  1048 ;;   None.
  1049 ;;
  1050 ;; Critical Paths under _main in BANK2
  1051 ;;
  1052 ;;   None.
  1053                           
  1054 ;;
  1055 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1056 ;;
  1057                           
  1058 ;;
  1059 ;;Call Graph Tables:
  1060 ;;
  1061 ;; ---------------------------------------------------------------------------------
  1062 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1063 ;; ---------------------------------------------------------------------------------
  1064 ;; (0) _main                                                 3     3      0   10862
  1065 ;;                                             61 BANK0      3     3      0
  1066 ;;                             _initIO
  1067 ;;                           _pwm_init
  1068 ;;                              _motor
  1069 ;;                           _lcd_init
  1070 ;;                         _LSA08_Init
  1071 ;;                            _lcd_clr
  1072 ;;                           _lcd_goto
  1073 ;;                         _lcd_putstr
  1074 ;;                           _PID_MENU
  1075 ;;                    _junction_follow
  1076 ;;                        _line_follow
  1077 ;; ---------------------------------------------------------------------------------
  1078 ;; (1) _junction_follow                                      6     6      0    5740
  1079 ;;                                             55 BANK0      6     6      0
  1080 ;;                            _lcd_clr
  1081 ;;                           _lcd_goto
  1082 ;;                         _lcd_putstr
  1083 ;;                _LSA08_ClearJunction
  1084 ;;                              _jfolo
  1085 ;;                              _motor
  1086 ;;                  _LSA08_GetPosition
  1087 ;; ---------------------------------------------------------------------------------
  1088 ;; (2) _jfolo                                                6     6      0    4529
  1089 ;;                                             49 BANK0      6     6      0
  1090 ;;                              _motor
  1091 ;;                  _LSA08_GetJunction
  1092 ;;                           _lcd_goto
  1093 ;;                        _lcd_putchar
  1094 ;;                            _lcd_num
  1095 ;;                        _line_follow
  1096 ;; ---------------------------------------------------------------------------------
  1097 ;; (1) _PID_MENU                                             7     7      0    1044
  1098 ;;                                             13 COMMON     1     1      0
  1099 ;;                                              5 BANK0      5     5      0
  1100 ;;                          _Calibrate
  1101 ;;                           _lcd_goto
  1102 ;;                         _lcd_putstr
  1103 ;; ---------------------------------------------------------------------------------
  1104 ;; (2) _Calibrate                                            3     3      0     444
  1105 ;;                                              2 BANK0      3     3      0
  1106 ;;                    _LSA08_Calibrate
  1107 ;;                              _motor
  1108 ;;                            _lcd_clr
  1109 ;; ---------------------------------------------------------------------------------
  1110 ;; (3) _lcd_num                                             26    23      3    1178
  1111 ;;                                              9 COMMON     3     0      3
  1112 ;;                                              0 BANK0     23    23      0
  1113 ;;                            ___lwmod
  1114 ;;                            ___lwdiv
  1115 ;;                         _lcd_putstr
  1116 ;;                        _lcd_putchar
  1117 ;; ---------------------------------------------------------------------------------
  1118 ;; (1) _LSA08_Init                                           0     0      0     537
  1119 ;;                          _UART_INIT
  1120 ;;                _LSA08_ClearJunction
  1121 ;;                     _LSA08_UARTMode
  1122 ;; ---------------------------------------------------------------------------------
  1123 ;; (1) _line_follow                                          6     6      0    2571
  1124 ;;                                             43 BANK0      6     6      0
  1125 ;;                  _LSA08_GetPosition
  1126 ;;                         _PID_UPDATE
  1127 ;;                           ___awtoft
  1128 ;;                            ___ftmul
  1129 ;;                            ___ftadd
  1130 ;;                            ___fttol
  1131 ;;                              _motor
  1132 ;; ---------------------------------------------------------------------------------
  1133 ;; (4) _lcd_putstr                                           2     0      2     331
  1134 ;;                                              7 COMMON     2     0      2
  1135 ;;                        _lcd_2ndline
  1136 ;;                        _lcd_putchar
  1137 ;; ---------------------------------------------------------------------------------
  1138 ;; (1) _lcd_init                                             2     2      0     242
  1139 ;;                                              5 COMMON     2     2      0
  1140 ;;                          _set_lcd_e
  1141 ;;                      _send_lcd_data
  1142 ;;                            _lcd_clr
  1143 ;; ---------------------------------------------------------------------------------
  1144 ;; (3) _LSA08_Calibrate                                      2     2      0     246
  1145 ;;                                              0 BANK0      2     2      0
  1146 ;;                        _SEND_PACKET
  1147 ;; ---------------------------------------------------------------------------------
  1148 ;; (3) _LSA08_GetJunction                                    1     1      0     246
  1149 ;;                                             13 COMMON     1     1      0
  1150 ;;                        _SEND_PACKET
  1151 ;; ---------------------------------------------------------------------------------
  1152 ;; (2) _LSA08_UARTMode                                       4     4      0     291
  1153 ;;                                             13 COMMON     1     1      0
  1154 ;;                                              0 BANK0      3     3      0
  1155 ;;                        _SEND_PACKET
  1156 ;; ---------------------------------------------------------------------------------
  1157 ;; (2) _LSA08_ClearJunction                                  2     2      0     246
  1158 ;;                                              0 BANK0      2     2      0
  1159 ;;                        _SEND_PACKET
  1160 ;; ---------------------------------------------------------------------------------
  1161 ;; (5) _lcd_2ndline                                          1     1      0     110
  1162 ;;                                              5 COMMON     1     1      0
  1163 ;;                      _send_lcd_data
  1164 ;; ---------------------------------------------------------------------------------
  1165 ;; (4) _lcd_putchar                                          2     2      0     132
  1166 ;;                                              5 COMMON     2     2      0
  1167 ;;                      _send_lcd_data
  1168 ;; ---------------------------------------------------------------------------------
  1169 ;; (3) _lcd_goto                                             2     2      0     199
  1170 ;;                                              5 COMMON     2     2      0
  1171 ;;                      _send_lcd_data
  1172 ;; ---------------------------------------------------------------------------------
  1173 ;; (2) _lcd_clr                                              0     0      0     110
  1174 ;;                      _send_lcd_data
  1175 ;; ---------------------------------------------------------------------------------
  1176 ;; (2) _LSA08_GetPosition                                    3     3      0     165
  1177 ;;                                              8 COMMON     3     3      0
  1178 ;;                           _UART_REC
  1179 ;;                          _UART_DUMP
  1180 ;; ---------------------------------------------------------------------------------
  1181 ;; (4) _SEND_PACKET                                          5     2      3     246
  1182 ;;                                              8 COMMON     5     2      3
  1183 ;;                          _UART_SEND
  1184 ;;                      _UART_RESPONSE
  1185 ;; ---------------------------------------------------------------------------------
  1186 ;; (2) ___awtoft                                             6     3      3     300
  1187 ;;                                             12 COMMON     2     2      0
  1188 ;;                                             10 BANK0      4     1      3
  1189 ;;                           ___ftpack
  1190 ;;                            ___fttol (ARG)
  1191 ;; ---------------------------------------------------------------------------------
  1192 ;; (2) ___ftmul                                             16    10      6     535
  1193 ;;                                             14 BANK0     16    10      6
  1194 ;;                           ___ftpack
  1195 ;;                           ___awtoft (ARG)
  1196 ;;                            ___fttol (ARG)
  1197 ;; ---------------------------------------------------------------------------------
  1198 ;; (2) ___ftadd                                             13     7      6    1049
  1199 ;;                                             30 BANK0     13     7      6
  1200 ;;                           ___ftpack
  1201 ;;                            ___ftmul (ARG)
  1202 ;;                           ___awtoft (ARG)
  1203 ;;                            ___fttol (ARG)
  1204 ;; ---------------------------------------------------------------------------------
  1205 ;; (5) _send_lcd_data                                        4     3      1     110
  1206 ;;                                              1 COMMON     4     3      1
  1207 ;;                         _set_lcd_rs
  1208 ;;                       _set_lcd_data
  1209 ;;                          _set_lcd_e
  1210 ;; ---------------------------------------------------------------------------------
  1211 ;; (2) _motor                                                2     1      1      88
  1212 ;;                                              1 COMMON     2     1      1
  1213 ;;                           _set_pwmr
  1214 ;;                           _set_pwml
  1215 ;; ---------------------------------------------------------------------------------
  1216 ;; (3) _UART_DUMP                                            2     2      0      49
  1217 ;;                                              6 COMMON     2     2      0
  1218 ;;                           _UART_REC
  1219 ;; ---------------------------------------------------------------------------------
  1220 ;; (5) _UART_RESPONSE                                        2     2      0      70
  1221 ;;                                              6 COMMON     2     2      0
  1222 ;;                           _UART_REC
  1223 ;; ---------------------------------------------------------------------------------
  1224 ;; (2) ___fttol                                             14    10      4     252
  1225 ;;                                              8 COMMON     4     0      4
  1226 ;;                                              0 BANK0     10    10      0
  1227 ;;                           ___ftpack (ARG)
  1228 ;; ---------------------------------------------------------------------------------
  1229 ;; (3) ___ftpack                                             8     3      5     209
  1230 ;;                                              0 COMMON     8     3      5
  1231 ;; ---------------------------------------------------------------------------------
  1232 ;; (4) ___lwmod                                              6     2      4     159
  1233 ;;                                              0 COMMON     6     2      4
  1234 ;; ---------------------------------------------------------------------------------
  1235 ;; (4) ___lwdiv                                              8     4      4     162
  1236 ;;                                              0 COMMON     8     4      4
  1237 ;; ---------------------------------------------------------------------------------
  1238 ;; (6) _set_lcd_data                                         1     1      0      22
  1239 ;;                                              0 COMMON     1     1      0
  1240 ;; ---------------------------------------------------------------------------------
  1241 ;; (6) _set_lcd_rs                                           1     1      0      22
  1242 ;;                                              0 COMMON     1     1      0
  1243 ;; ---------------------------------------------------------------------------------
  1244 ;; (6) _set_lcd_e                                            1     1      0      22
  1245 ;;                                              0 COMMON     1     1      0
  1246 ;; ---------------------------------------------------------------------------------
  1247 ;; (3) _set_pwml                                             1     1      0      22
  1248 ;;                                              0 COMMON     1     1      0
  1249 ;; ---------------------------------------------------------------------------------
  1250 ;; (3) _set_pwmr                                             1     1      0      22
  1251 ;;                                              0 COMMON     1     1      0
  1252 ;; ---------------------------------------------------------------------------------
  1253 ;; (2) _PID_UPDATE                                           3     3      0      44
  1254 ;;                                              0 COMMON     3     3      0
  1255 ;; ---------------------------------------------------------------------------------
  1256 ;; (1) _pwm_init                                             0     0      0       0
  1257 ;; ---------------------------------------------------------------------------------
  1258 ;; (1) _initIO                                               0     0      0       0
  1259 ;; ---------------------------------------------------------------------------------
  1260 ;; (2) _UART_INIT                                            0     0      0       0
  1261 ;; ---------------------------------------------------------------------------------
  1262 ;; (5) _UART_SEND                                            1     1      0      22
  1263 ;;                                              0 COMMON     1     1      0
  1264 ;; ---------------------------------------------------------------------------------
  1265 ;; (4) _UART_REC                                             6     6      0      48
  1266 ;;                                              0 COMMON     6     6      0
  1267 ;; ---------------------------------------------------------------------------------
  1268 ;; Estimated maximum stack depth 6
  1269 ;; ---------------------------------------------------------------------------------
  1270                           
  1271 ;; Call Graph Graphs:
  1272                           
  1273 ;; _main (ROOT)
  1274 ;;   _initIO
  1275 ;;   _pwm_init
  1276 ;;   _motor
  1277 ;;     _set_pwmr
  1278 ;;     _set_pwml
  1279 ;;   _lcd_init
  1280 ;;     _set_lcd_e
  1281 ;;     _send_lcd_data
  1282 ;;       _set_lcd_rs
  1283 ;;       _set_lcd_data
  1284 ;;       _set_lcd_e
  1285 ;;     _lcd_clr
  1286 ;;       _send_lcd_data
  1287 ;;         _set_lcd_rs
  1288 ;;         _set_lcd_data
  1289 ;;         _set_lcd_e
  1290 ;;   _LSA08_Init
  1291 ;;     _UART_INIT
  1292 ;;     _LSA08_ClearJunction
  1293 ;;       _SEND_PACKET
  1294 ;;         _UART_SEND
  1295 ;;         _UART_RESPONSE
  1296 ;;           _UART_REC
  1297 ;;     _LSA08_UARTMode
  1298 ;;       _SEND_PACKET
  1299 ;;         _UART_SEND
  1300 ;;         _UART_RESPONSE
  1301 ;;           _UART_REC
  1302 ;;   _lcd_clr
  1303 ;;     _send_lcd_data
  1304 ;;       _set_lcd_rs
  1305 ;;       _set_lcd_data
  1306 ;;       _set_lcd_e
  1307 ;;   _lcd_goto
  1308 ;;     _send_lcd_data
  1309 ;;       _set_lcd_rs
  1310 ;;       _set_lcd_data
  1311 ;;       _set_lcd_e
  1312 ;;   _lcd_putstr
  1313 ;;     _lcd_2ndline
  1314 ;;       _send_lcd_data
  1315 ;;         _set_lcd_rs
  1316 ;;         _set_lcd_data
  1317 ;;         _set_lcd_e
  1318 ;;     _lcd_putchar
  1319 ;;       _send_lcd_data
  1320 ;;         _set_lcd_rs
  1321 ;;         _set_lcd_data
  1322 ;;         _set_lcd_e
  1323 ;;   _PID_MENU
  1324 ;;     _Calibrate
  1325 ;;       _LSA08_Calibrate
  1326 ;;         _SEND_PACKET
  1327 ;;           _UART_SEND
  1328 ;;           _UART_RESPONSE
  1329 ;;             _UART_REC
  1330 ;;       _motor
  1331 ;;         _set_pwmr
  1332 ;;         _set_pwml
  1333 ;;       _lcd_clr
  1334 ;;         _send_lcd_data
  1335 ;;           _set_lcd_rs
  1336 ;;           _set_lcd_data
  1337 ;;           _set_lcd_e
  1338 ;;     _lcd_goto
  1339 ;;       _send_lcd_data
  1340 ;;         _set_lcd_rs
  1341 ;;         _set_lcd_data
  1342 ;;         _set_lcd_e
  1343 ;;     _lcd_putstr
  1344 ;;       _lcd_2ndline
  1345 ;;         _send_lcd_data
  1346 ;;           _set_lcd_rs
  1347 ;;           _set_lcd_data
  1348 ;;           _set_lcd_e
  1349 ;;       _lcd_putchar
  1350 ;;         _send_lcd_data
  1351 ;;           _set_lcd_rs
  1352 ;;           _set_lcd_data
  1353 ;;           _set_lcd_e
  1354 ;;   _junction_follow
  1355 ;;     _lcd_clr
  1356 ;;       _send_lcd_data
  1357 ;;         _set_lcd_rs
  1358 ;;         _set_lcd_data
  1359 ;;         _set_lcd_e
  1360 ;;     _lcd_goto
  1361 ;;       _send_lcd_data
  1362 ;;         _set_lcd_rs
  1363 ;;         _set_lcd_data
  1364 ;;         _set_lcd_e
  1365 ;;     _lcd_putstr
  1366 ;;       _lcd_2ndline
  1367 ;;         _send_lcd_data
  1368 ;;           _set_lcd_rs
  1369 ;;           _set_lcd_data
  1370 ;;           _set_lcd_e
  1371 ;;       _lcd_putchar
  1372 ;;         _send_lcd_data
  1373 ;;           _set_lcd_rs
  1374 ;;           _set_lcd_data
  1375 ;;           _set_lcd_e
  1376 ;;     _LSA08_ClearJunction
  1377 ;;       _SEND_PACKET
  1378 ;;         _UART_SEND
  1379 ;;         _UART_RESPONSE
  1380 ;;           _UART_REC
  1381 ;;     _jfolo
  1382 ;;       _motor
  1383 ;;         _set_pwmr
  1384 ;;         _set_pwml
  1385 ;;       _LSA08_GetJunction
  1386 ;;         _SEND_PACKET
  1387 ;;           _UART_SEND
  1388 ;;           _UART_RESPONSE
  1389 ;;             _UART_REC
  1390 ;;       _lcd_goto
  1391 ;;         _send_lcd_data
  1392 ;;           _set_lcd_rs
  1393 ;;           _set_lcd_data
  1394 ;;           _set_lcd_e
  1395 ;;       _lcd_putchar
  1396 ;;         _send_lcd_data
  1397 ;;           _set_lcd_rs
  1398 ;;           _set_lcd_data
  1399 ;;           _set_lcd_e
  1400 ;;       _lcd_num
  1401 ;;         ___lwmod
  1402 ;;         ___lwdiv
  1403 ;;         _lcd_putstr
  1404 ;;           _lcd_2ndline
  1405 ;;             _send_lcd_data
  1406 ;;               _set_lcd_rs
  1407 ;;               _set_lcd_data
  1408 ;;               _set_lcd_e
  1409 ;;           _lcd_putchar
  1410 ;;             _send_lcd_data
  1411 ;;               _set_lcd_rs
  1412 ;;               _set_lcd_data
  1413 ;;               _set_lcd_e
  1414 ;;         _lcd_putchar
  1415 ;;           _send_lcd_data
  1416 ;;             _set_lcd_rs
  1417 ;;             _set_lcd_data
  1418 ;;             _set_lcd_e
  1419 ;;       _line_follow
  1420 ;;         _LSA08_GetPosition
  1421 ;;           _UART_REC
  1422 ;;           _UART_DUMP
  1423 ;;             _UART_REC
  1424 ;;         _PID_UPDATE
  1425 ;;         ___awtoft
  1426 ;;           ___ftpack
  1427 ;;           ___fttol (ARG)
  1428 ;;             ___ftpack (ARG)
  1429 ;;         ___ftmul
  1430 ;;           ___ftpack
  1431 ;;           ___awtoft (ARG)
  1432 ;;             ___ftpack
  1433 ;;             ___fttol (ARG)
  1434 ;;               ___ftpack (ARG)
  1435 ;;           ___fttol (ARG)
  1436 ;;             ___ftpack (ARG)
  1437 ;;         ___ftadd
  1438 ;;           ___ftpack
  1439 ;;           ___ftmul (ARG)
  1440 ;;             ___ftpack
  1441 ;;             ___awtoft (ARG)
  1442 ;;               ___ftpack
  1443 ;;               ___fttol (ARG)
  1444 ;;                 ___ftpack (ARG)
  1445 ;;             ___fttol (ARG)
  1446 ;;               ___ftpack (ARG)
  1447 ;;           ___awtoft (ARG)
  1448 ;;             ___ftpack
  1449 ;;             ___fttol (ARG)
  1450 ;;               ___ftpack (ARG)
  1451 ;;           ___fttol (ARG)
  1452 ;;             ___ftpack (ARG)
  1453 ;;         ___fttol
  1454 ;;           ___ftpack (ARG)
  1455 ;;         _motor
  1456 ;;           _set_pwmr
  1457 ;;           _set_pwml
  1458 ;;     _motor
  1459 ;;       _set_pwmr
  1460 ;;       _set_pwml
  1461 ;;     _LSA08_GetPosition
  1462 ;;       _UART_REC
  1463 ;;       _UART_DUMP
  1464 ;;         _UART_REC
  1465 ;;   _line_follow
  1466 ;;     _LSA08_GetPosition
  1467 ;;       _UART_REC
  1468 ;;       _UART_DUMP
  1469 ;;         _UART_REC
  1470 ;;     _PID_UPDATE
  1471 ;;     ___awtoft
  1472 ;;       ___ftpack
  1473 ;;       ___fttol (ARG)
  1474 ;;         ___ftpack (ARG)
  1475 ;;     ___ftmul
  1476 ;;       ___ftpack
  1477 ;;       ___awtoft (ARG)
  1478 ;;         ___ftpack
  1479 ;;         ___fttol (ARG)
  1480 ;;           ___ftpack (ARG)
  1481 ;;       ___fttol (ARG)
  1482 ;;         ___ftpack (ARG)
  1483 ;;     ___ftadd
  1484 ;;       ___ftpack
  1485 ;;       ___ftmul (ARG)
  1486 ;;         ___ftpack
  1487 ;;         ___awtoft (ARG)
  1488 ;;           ___ftpack
  1489 ;;           ___fttol (ARG)
  1490 ;;             ___ftpack (ARG)
  1491 ;;         ___fttol (ARG)
  1492 ;;           ___ftpack (ARG)
  1493 ;;       ___awtoft (ARG)
  1494 ;;         ___ftpack
  1495 ;;         ___fttol (ARG)
  1496 ;;           ___ftpack (ARG)
  1497 ;;       ___fttol (ARG)
  1498 ;;         ___ftpack (ARG)
  1499 ;;     ___fttol
  1500 ;;       ___ftpack (ARG)
  1501 ;;     _motor
  1502 ;;       _set_pwmr
  1503 ;;       _set_pwml
  1504 ;;
  1505                           
  1506 ;; Address spaces:
  1507                           
  1508 ;;Name               Size   Autos  Total    Cost      Usage
  1509 ;;BANK3               60      0       0       9        0.0%
  1510 ;;BITBANK3            60      0       0       8        0.0%
  1511 ;;SFR3                 0      0       0       4        0.0%
  1512 ;;BITSFR3              0      0       0       4        0.0%
  1513 ;;BANK2               60      0       0      11        0.0%
  1514 ;;BITBANK2            60      0       0      10        0.0%
  1515 ;;SFR2                 0      0       0       5        0.0%
  1516 ;;BITSFR2              0      0       0       5        0.0%
  1517 ;;SFR1                 0      0       0       2        0.0%
  1518 ;;BITSFR1              0      0       0       2        0.0%
  1519 ;;BANK1               50      0      13       7       23.8%
  1520 ;;BITBANK1            50      0       0       6        0.0%
  1521 ;;CODE                 0      0       0       0        0.0%
  1522 ;;DATA                 0      0      77      12        0.0%
  1523 ;;ABS                  0      0      70       3        0.0%
  1524 ;;NULL                 0      0       0       0        0.0%
  1525 ;;STACK                0      0       7       2        0.0%
  1526 ;;BANK0               50     40      4F       5       98.8%
  1527 ;;BITBANK0            50      0       0       4        0.0%
  1528 ;;SFR0                 0      0       0       1        0.0%
  1529 ;;BITSFR0              0      0       0       1        0.0%
  1530 ;;COMMON               E      E       E       1      100.0%
  1531 ;;BITCOMMON            E      0       0       0        0.0%
  1532 ;;EEDATA             100      0       0       0        0.0%
  1533                           
  1534                           	global	_main
  1535                           psect	maintext,global,class=CODE,delta=2
  1536                           global __pmaintext
  1537  01C7                     __pmaintext:
  1538                           
  1539 ;; *************** function _main *****************
  1540 ;; Defined at:
  1541 ;;		line 131 in file "../main.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;		None
  1546 ;; Return value:  Size  Location     Type
  1547 ;;		None               void
  1548 ;; Registers used:
  1549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 17F/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1555 ;;      Params:         0       0       0       0       0
  1556 ;;      Locals:         0       0       0       0       0
  1557 ;;      Temps:          0       3       0       0       0
  1558 ;;      Totals:         0       3       0       0       0
  1559 ;;Total ram usage:        3 bytes
  1560 ;; Hardware stack levels required when called:    7
  1561 ;; This function calls:
  1562 ;;		_initIO
  1563 ;;		_pwm_init
  1564 ;;		_motor
  1565 ;;		_lcd_init
  1566 ;;		_LSA08_Init
  1567 ;;		_lcd_clr
  1568 ;;		_lcd_goto
  1569 ;;		_lcd_putstr
  1570 ;;		_PID_MENU
  1571 ;;		_junction_follow
  1572 ;;		_line_follow
  1573 ;; This function is called by:
  1574 ;;		Startup code after reset
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           psect	maintext
  1578                           	file	"../main.c"
  1579                           	line	131
  1580                           	global	__size_of_main
  1581  0091                     	__size_of_main	equ	__end_of_main-_main
  1582                           	
  1583  01C7                     _main:	
  1584                           	opt	stack 1
  1585                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1586                           	line	134
  1587                           	
  1588  01C7                     l5227:	
  1589                           ;main.c: 134: initIO();
  1590  01C7  120A  158A  2434   	fcall	_initIO
              120A  118A         
  1591                           	line	135
  1592                           ;main.c: 135: pwm_init();
  1593  01CC  120A  158A  244E   	fcall	_pwm_init
              120A  118A         
  1594                           	line	136
  1595                           ;main.c: 136: motor(0,0);
  1596  01D1  01F1               	clrf	(?_motor)
  1597  01D2  3000               	movlw	(0)
  1598  01D3  120A  158A  2397   	fcall	_motor
              120A  118A         
  1599                           	line	137
  1600                           ;main.c: 137: lcd_init();
  1601  01D8  120A  158A  252A   	fcall	_lcd_init
              120A  118A         
  1602                           	line	138
  1603                           ;main.c: 138: LSA08_Init();
  1604  01DD  120A  158A  23F0   	fcall	_LSA08_Init
              120A  118A         
  1605                           	line	139
  1606                           	
  1607  01E2                     l5229:	
  1608                           ;main.c: 139: _delay((unsigned long)((100)*(20000000/4000.0)));
  1609                           	opt asmopt_off
  1610  01E2  3003               movlw  3
  1611  01E3  1283               	bcf	status, 5	;RP0=0, select bank0
  1612  01E4  1303               	bcf	status, 6	;RP1=0, select bank0
  1613  01E5  00DF               movwf	((??_main+0)+0+2),f
  1614  01E6  308A               movlw	138
  1615  01E7  00DE               movwf	((??_main+0)+0+1),f
  1616  01E8  3056               	movlw	86
  1617  01E9  00DD               movwf	((??_main+0)+0),f
  1618  01EA                     u4127:
  1619  01EA  0BDD               	decfsz	((??_main+0)+0),f
  1620  01EB  29EA               	goto	u4127
  1621  01EC  0BDE               	decfsz	((??_main+0)+0+1),f
  1622  01ED  29EA               	goto	u4127
  1623  01EE  0BDF               	decfsz	((??_main+0)+0+2),f
  1624  01EF  29EA               	goto	u4127
  1625  01F0  29F1               	nop2
  1626                           opt asmopt_on
  1627                           
  1628                           	line	141
  1629                           	
  1630  01F1                     l5231:	
  1631                           ;main.c: 141: lcd_clr();
  1632  01F1  120A  158A  2350   	fcall	_lcd_clr
              120A  118A         
  1633                           	line	142
  1634                           	
  1635  01F6                     l5233:	
  1636                           ;main.c: 142: lcd_goto(0);
  1637  01F6  3000               	movlw	(0)
  1638  01F7  120A  158A  24B0   	fcall	_lcd_goto
              120A  118A         
  1639                           	line	143
  1640                           	
  1641  01FC                     l5235:	
  1642                           ;main.c: 143: lcd_putstr("LSA08");
  1643  01FC  304C               	movlw	low((STR_1-__stringbase))
  1644  01FD  00F7               	movwf	(?_lcd_putstr)
  1645  01FE  3080               	movlw	80h
  1646  01FF  00F8               	movwf	(?_lcd_putstr+1)
  1647  0200  120A  158A  265B   	fcall	_lcd_putstr
              120A  118A         
  1648                           	line	144
  1649                           	
  1650  0205                     l5237:	
  1651                           ;main.c: 144: lcd_goto(20);
  1652  0205  3014               	movlw	(014h)
  1653  0206  120A  158A  24B0   	fcall	_lcd_goto
              120A  118A         
  1654                           	line	145
  1655                           	
  1656  020B                     l5239:	
  1657                           ;main.c: 145: lcd_putstr("Demo");
  1658  020B  3052               	movlw	low((STR_2-__stringbase))
  1659  020C  00F7               	movwf	(?_lcd_putstr)
  1660  020D  3080               	movlw	80h
  1661  020E  00F8               	movwf	(?_lcd_putstr+1)
  1662  020F  120A  158A  265B   	fcall	_lcd_putstr
              120A  118A         
  1663                           	line	148
  1664                           ;main.c: 148: while(RB0);
  1665  0214  2A15               	goto	l1155
  1666                           	
  1667  0215                     l1156:	
  1668                           	
  1669  0215                     l1155:	
  1670  0215  1283               	bcf	status, 5	;RP0=0, select bank0
  1671  0216  1303               	bcf	status, 6	;RP1=0, select bank0
  1672  0217  1806               	btfsc	(48/8),(48)&7
  1673  0218  2A1A               	goto	u4091
  1674  0219  2A1B               	goto	u4090
  1675  021A                     u4091:
  1676  021A  2A15               	goto	l1155
  1677  021B                     u4090:
  1678  021B  2A1D               	goto	l1158
  1679                           	
  1680  021C                     l1157:	
  1681                           	line	149
  1682                           ;main.c: 149: while(RB0==0);
  1683  021C  2A1D               	goto	l1158
  1684                           	
  1685  021D                     l1159:	
  1686                           	
  1687  021D                     l1158:	
  1688  021D  1C06               	btfss	(48/8),(48)&7
  1689  021E  2A20               	goto	u4101
  1690  021F  2A21               	goto	u4100
  1691  0220                     u4101:
  1692  0220  2A1D               	goto	l1158
  1693  0221                     u4100:
  1694  0221  2A22               	goto	l5241
  1695                           	
  1696  0222                     l1160:	
  1697                           	line	150
  1698                           	
  1699  0222                     l5241:	
  1700                           ;main.c: 150: lcd_clr();
  1701  0222  120A  158A  2350   	fcall	_lcd_clr
              120A  118A         
  1702                           	line	152
  1703                           	
  1704  0227                     l5243:	
  1705                           ;main.c: 152: PID_MENU();
  1706  0227  120A  118A  22FE   	fcall	_PID_MENU
              120A  118A         
  1707                           	line	154
  1708                           	
  1709  022C                     l5245:	
  1710                           ;main.c: 154: lcd_clr();
  1711  022C  120A  158A  2350   	fcall	_lcd_clr
              120A  118A         
  1712                           	line	155
  1713                           	
  1714  0231                     l5247:	
  1715                           ;main.c: 155: lcd_goto(0);
  1716  0231  3000               	movlw	(0)
  1717  0232  120A  158A  24B0   	fcall	_lcd_goto
              120A  118A         
  1718                           	line	156
  1719                           	
  1720  0237                     l5249:	
  1721                           ;main.c: 156: lcd_putstr("line\nfollow");
  1722  0237  3010               	movlw	low((STR_3-__stringbase))
  1723  0238  00F7               	movwf	(?_lcd_putstr)
  1724  0239  3080               	movlw	80h
  1725  023A  00F8               	movwf	(?_lcd_putstr+1)
  1726  023B  120A  158A  265B   	fcall	_lcd_putstr
              120A  118A         
  1727                           	line	158
  1728                           	
  1729  0240                     l5251:	
  1730                           ;main.c: 158: if (junction_mode){
  1731  0240  1283               	bcf	status, 5	;RP0=0, select bank0
  1732  0241  1303               	bcf	status, 6	;RP1=0, select bank0
  1733  0242  0869               	movf	(_junction_mode),w
  1734  0243  1D03               	skipz
  1735  0244  2A46               	goto	u4110
  1736  0245  2A4D               	goto	l5255
  1737  0246                     u4110:
  1738                           	line	160
  1739                           	
  1740  0246                     l5253:	
  1741                           ;main.c: 160: junction_follow();
  1742  0246  120A  118A  23AE   	fcall	_junction_follow
              120A  118A         
  1743                           	line	161
  1744                           ;main.c: 161: }
  1745  024B  2A55               	goto	l1166
  1746                           	line	163
  1747                           	
  1748  024C                     l1161:	
  1749  024C  2A4D               	goto	l5255
  1750                           	line	165
  1751                           ;main.c: 163: else {
  1752                           ;main.c: 165: while(1){
  1753                           	
  1754  024D                     l1163:	
  1755                           	line	166
  1756                           	
  1757  024D                     l5255:	
  1758                           ;main.c: 166: line_follow();
  1759  024D  120A  118A  2585   	fcall	_line_follow
              120A  118A         
  1760  0252  2A4D               	goto	l5255
  1761                           	line	167
  1762                           	
  1763  0253                     l1164:	
  1764                           	line	165
  1765  0253  2A4D               	goto	l5255
  1766                           	
  1767  0254                     l1165:	
  1768  0254  2A55               	goto	l1166
  1769                           	line	168
  1770                           	
  1771  0255                     l1162:	
  1772                           	line	174
  1773                           	
  1774  0255                     l1166:	
  1775                           	global	start
  1776  0255  120A  118A  2800   	ljmp	start
  1777                           	opt stack 0
  1778                           GLOBAL	__end_of_main
  1779  0258                     	__end_of_main:
  1780 ;; =============== function _main ends ============
  1781                           
  1782                           	signat	_main,88
  1783                           	global	_junction_follow
  1784                           psect	text883,local,class=CODE,delta=2
  1785                           global __ptext883
  1786  03AE                     __ptext883:
  1787                           
  1788 ;; *************** function _junction_follow *****************
  1789 ;; Defined at:
  1790 ;;		line 210 in file "../main.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;		None
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;  lineposition    1   60[BANK0 ] char 
  1795 ;;  status          1   59[BANK0 ] unsigned char 
  1796 ;;  i               1   58[BANK0 ] unsigned char 
  1797 ;; Return value:  Size  Location     Type
  1798 ;;		None               void
  1799 ;; Registers used:
  1800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1806 ;;      Params:         0       0       0       0       0
  1807 ;;      Locals:         0       3       0       0       0
  1808 ;;      Temps:          0       3       0       0       0
  1809 ;;      Totals:         0       6       0       0       0
  1810 ;;Total ram usage:        6 bytes
  1811 ;; Hardware stack levels used:    1
  1812 ;; Hardware stack levels required when called:    6
  1813 ;; This function calls:
  1814 ;;		_lcd_clr
  1815 ;;		_lcd_goto
  1816 ;;		_lcd_putstr
  1817 ;;		_LSA08_ClearJunction
  1818 ;;		_jfolo
  1819 ;;		_motor
  1820 ;;		_LSA08_GetPosition
  1821 ;; This function is called by:
  1822 ;;		_main
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           psect	text883
  1826                           	file	"../main.c"
  1827                           	line	210
  1828                           	global	__size_of_junction_follow
  1829  00E9                     	__size_of_junction_follow	equ	__end_of_junction_follow-_junction_follow
  1830                           	
  1831  03AE                     _junction_follow:	
  1832                           	opt	stack 1
  1833                           ; Regs used in _junction_follow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1834                           	line	211
  1835                           	
  1836  03AE                     l5165:	
  1837                           ;main.c: 211: signed char lineposition=0;
  1838  03AE  1283               	bcf	status, 5	;RP0=0, select bank0
  1839  03AF  1303               	bcf	status, 6	;RP1=0, select bank0
  1840  03B0  01DC               	clrf	(junction_follow@lineposition)
  1841                           	line	212
  1842                           ;main.c: 212: unsigned char i=0;
  1843  03B1  01DA               	clrf	(junction_follow@i)
  1844                           	line	213
  1845                           ;main.c: 213: unsigned char status=0;
  1846  03B2  01DB               	clrf	(junction_follow@status)
  1847                           	line	215
  1848                           	
  1849  03B3                     l5167:	
  1850                           ;main.c: 215: lcd_clr();
  1851  03B3  120A  158A  2350   	fcall	_lcd_clr
              120A  118A         
  1852                           	line	216
  1853                           ;main.c: 216: lcd_goto(0);
  1854  03B8  3000               	movlw	(0)
  1855  03B9  120A  158A  24B0   	fcall	_lcd_goto
              120A  118A         
  1856                           	line	217
  1857                           	
  1858  03BE                     l5169:	
  1859                           ;main.c: 217: lcd_putstr("Junction\nCount");
  1860  03BE  3001               	movlw	low((STR_4-__stringbase))
  1861  03BF  00F7               	movwf	(?_lcd_putstr)
  1862  03C0  3080               	movlw	80h
  1863  03C1  00F8               	movwf	(?_lcd_putstr+1)
  1864  03C2  120A  158A  265B   	fcall	_lcd_putstr
              120A  118A         
  1865                           	line	219
  1866                           	
  1867  03C7                     l5171:	
  1868                           ;main.c: 219: _delay((unsigned long)((500)*(20000000/4000.0)));
  1869                           	opt asmopt_off
  1870  03C7  300D               movlw  13
  1871  03C8  1283               	bcf	status, 5	;RP0=0, select bank0
  1872  03C9  1303               	bcf	status, 6	;RP1=0, select bank0
  1873  03CA  00D9               movwf	((??_junction_follow+0)+0+2),f
  1874  03CB  30AF               movlw	175
  1875  03CC  00D8               movwf	((??_junction_follow+0)+0+1),f
  1876  03CD  30C1               	movlw	193
  1877  03CE  00D7               movwf	((??_junction_follow+0)+0),f
  1878  03CF                     u4137:
  1879  03CF  0BD7               	decfsz	((??_junction_follow+0)+0),f
  1880  03D0  2BCF               	goto	u4137
  1881  03D1  0BD8               	decfsz	((??_junction_follow+0)+0+1),f
  1882  03D2  2BCF               	goto	u4137
  1883  03D3  0BD9               	decfsz	((??_junction_follow+0)+0+2),f
  1884  03D4  2BCF               	goto	u4137
  1885  03D5  0064               	clrwdt
  1886                           opt asmopt_on
  1887                           
  1888                           	line	220
  1889                           	
  1890  03D6                     l5173:	
  1891                           ;main.c: 220: lcd_clr();
  1892  03D6  120A  158A  2350   	fcall	_lcd_clr
              120A  118A         
  1893  03DB  2BDD               	goto	l5175
  1894                           	line	222
  1895                           ;main.c: 222: while(1){
  1896                           	
  1897  03DC                     l1178:	
  1898  03DC  2BDD               	goto	l5175
  1899                           	line	224
  1900                           ;main.c: 224: do{
  1901                           	
  1902  03DD                     l1179:	
  1903                           	line	225
  1904                           	
  1905  03DD                     l5175:	
  1906                           ;main.c: 225: status=LSA08_ClearJunction();
  1907  03DD  120A  158A  23B7   	fcall	_LSA08_ClearJunction
              120A  118A         
  1908  03E2  1283               	bcf	status, 5	;RP0=0, select bank0
  1909  03E3  1303               	bcf	status, 6	;RP1=0, select bank0
  1910  03E4  00D7               	movwf	(??_junction_follow+0)+0
  1911  03E5  0857               	movf	(??_junction_follow+0)+0,w
  1912  03E6  00DB               	movwf	(junction_follow@status)
  1913                           	line	226
  1914                           	
  1915  03E7                     l5177:	
  1916                           ;main.c: 226: }while(status==0);
  1917  03E7  085B               	movf	(junction_follow@status),w
  1918  03E8  1D03               	skipz
  1919  03E9  2BEB               	goto	u4060
  1920  03EA  2BDD               	goto	l5175
  1921  03EB                     u4060:
  1922  03EB  2BEC               	goto	l5179
  1923                           	
  1924  03EC                     l1180:	
  1925                           	line	228
  1926                           	
  1927  03EC                     l5179:	
  1928                           ;main.c: 228: jfolo(2);
  1929  03EC  3002               	movlw	(02h)
  1930  03ED  120A  118A  2033   	fcall	_jfolo
              120A  118A         
  1931                           	line	230
  1932                           	
  1933  03F2                     l5181:	
  1934                           ;main.c: 230: RB2 = 0; RB3 = 1; RB4 = 0; RB5 = 1;;
  1935  03F2  1283               	bcf	status, 5	;RP0=0, select bank0
  1936  03F3  1303               	bcf	status, 6	;RP1=0, select bank0
  1937  03F4  1106               	bcf	(50/8),(50)&7
  1938                           	
  1939  03F5                     l5183:	
  1940  03F5  1586               	bsf	(51/8),(51)&7
  1941                           	
  1942  03F6                     l5185:	
  1943  03F6  1206               	bcf	(52/8),(52)&7
  1944                           	
  1945  03F7                     l5187:	
  1946  03F7  1686               	bsf	(53/8),(53)&7
  1947                           	line	231
  1948                           	
  1949  03F8                     l5189:	
  1950                           ;main.c: 231: motor(180,180);
  1951  03F8  30B4               	movlw	(0B4h)
  1952  03F9  00D7               	movwf	(??_junction_follow+0)+0
  1953  03FA  0857               	movf	(??_junction_follow+0)+0,w
  1954  03FB  00F1               	movwf	(?_motor)
  1955  03FC  30B4               	movlw	(0B4h)
  1956  03FD  120A  158A  2397   	fcall	_motor
              120A  118A         
  1957                           	line	232
  1958                           	
  1959  0402                     l5191:	
  1960                           ;main.c: 232: _delay((unsigned long)((500)*(20000000/4000.0)));
  1961                           	opt asmopt_off
  1962  0402  300D               movlw  13
  1963  0403  1283               	bcf	status, 5	;RP0=0, select bank0
  1964  0404  1303               	bcf	status, 6	;RP1=0, select bank0
  1965  0405  00D9               movwf	((??_junction_follow+0)+0+2),f
  1966  0406  30AF               movlw	175
  1967  0407  00D8               movwf	((??_junction_follow+0)+0+1),f
  1968  0408  30C1               	movlw	193
  1969  0409  00D7               movwf	((??_junction_follow+0)+0),f
  1970  040A                     u4147:
  1971  040A  0BD7               	decfsz	((??_junction_follow+0)+0),f
  1972  040B  2C0A               	goto	u4147
  1973  040C  0BD8               	decfsz	((??_junction_follow+0)+0+1),f
  1974  040D  2C0A               	goto	u4147
  1975  040E  0BD9               	decfsz	((??_junction_follow+0)+0+2),f
  1976  040F  2C0A               	goto	u4147
  1977  0410  0064               	clrwdt
  1978                           opt asmopt_on
  1979                           
  1980  0411  2C12               	goto	l5193
  1981                           	line	234
  1982                           ;main.c: 234: do{
  1983                           	
  1984  0412                     l1181:	
  1985                           	line	235
  1986                           	
  1987  0412                     l5193:	
  1988                           ;main.c: 235: lineposition=LSA08_GetPosition();
  1989  0412  120A  158A  24D5   	fcall	_LSA08_GetPosition
              120A  118A         
  1990  0417  1283               	bcf	status, 5	;RP0=0, select bank0
  1991  0418  1303               	bcf	status, 6	;RP1=0, select bank0
  1992  0419  00D7               	movwf	(??_junction_follow+0)+0
  1993  041A  0857               	movf	(??_junction_follow+0)+0,w
  1994  041B  00DC               	movwf	(junction_follow@lineposition)
  1995                           	line	236
  1996                           	
  1997  041C                     l5195:	
  1998                           ;main.c: 236: RB7=1;
  1999  041C  1786               	bsf	(55/8),(55)&7
  2000                           	line	237
  2001                           	
  2002  041D                     l5197:	
  2003                           ;main.c: 237: }while(lineposition>20);
  2004  041D  085C               	movf	(junction_follow@lineposition),w
  2005  041E  3A80               	xorlw	80h
  2006  041F  3E6B               	addlw	-((015h)^80h)
  2007  0420  1803               	skipnc
  2008  0421  2C23               	goto	u4071
  2009  0422  2C24               	goto	u4070
  2010  0423                     u4071:
  2011  0423  2C12               	goto	l5193
  2012  0424                     u4070:
  2013                           	
  2014  0424                     l1182:	
  2015                           	line	238
  2016                           ;main.c: 238: RB2=1; RB3=1; RB4=1; RB5=1; motor(255,255);;
  2017  0424  1506               	bsf	(50/8),(50)&7
  2018  0425  1586               	bsf	(51/8),(51)&7
  2019  0426  1606               	bsf	(52/8),(52)&7
  2020  0427  1686               	bsf	(53/8),(53)&7
  2021                           	
  2022  0428                     l5199:	
  2023  0428  30FF               	movlw	(0FFh)
  2024  0429  00D7               	movwf	(??_junction_follow+0)+0
  2025  042A  0857               	movf	(??_junction_follow+0)+0,w
  2026  042B  00F1               	movwf	(?_motor)
  2027  042C  30FF               	movlw	(0FFh)
  2028  042D  120A  158A  2397   	fcall	_motor
              120A  118A         
  2029                           	line	239
  2030                           	
  2031  0432                     l5201:	
  2032                           ;main.c: 239: RB7=0;
  2033  0432  1283               	bcf	status, 5	;RP0=0, select bank0
  2034  0433  1303               	bcf	status, 6	;RP1=0, select bank0
  2035  0434  1386               	bcf	(55/8),(55)&7
  2036                           	line	240
  2037                           	
  2038  0435                     l5203:	
  2039                           ;main.c: 240: _delay((unsigned long)((100)*(20000000/4000.0)));
  2040                           	opt asmopt_off
  2041  0435  3003               movlw  3
  2042  0436  00D9               movwf	((??_junction_follow+0)+0+2),f
  2043  0437  308A               movlw	138
  2044  0438  00D8               movwf	((??_junction_follow+0)+0+1),f
  2045  0439  3056               	movlw	86
  2046  043A  00D7               movwf	((??_junction_follow+0)+0),f
  2047  043B                     u4157:
  2048  043B  0BD7               	decfsz	((??_junction_follow+0)+0),f
  2049  043C  2C3B               	goto	u4157
  2050  043D  0BD8               	decfsz	((??_junction_follow+0)+0+1),f
  2051  043E  2C3B               	goto	u4157
  2052  043F  0BD9               	decfsz	((??_junction_follow+0)+0+2),f
  2053  0440  2C3B               	goto	u4157
  2054  0441  2C42               	nop2
  2055                           opt asmopt_on
  2056                           
  2057                           	line	242
  2058                           	
  2059  0442                     l5205:	
  2060                           ;main.c: 242: RB2 = 0; RB3 = 1; RB4 = 0; RB5 = 1;;
  2061  0442  1283               	bcf	status, 5	;RP0=0, select bank0
  2062  0443  1303               	bcf	status, 6	;RP1=0, select bank0
  2063  0444  1106               	bcf	(50/8),(50)&7
  2064                           	
  2065  0445                     l5207:	
  2066  0445  1586               	bsf	(51/8),(51)&7
  2067                           	
  2068  0446                     l5209:	
  2069  0446  1206               	bcf	(52/8),(52)&7
  2070                           	
  2071  0447                     l5211:	
  2072  0447  1686               	bsf	(53/8),(53)&7
  2073                           	line	243
  2074                           	
  2075  0448                     l5213:	
  2076                           ;main.c: 243: motor(180,180);
  2077  0448  30B4               	movlw	(0B4h)
  2078  0449  00D7               	movwf	(??_junction_follow+0)+0
  2079  044A  0857               	movf	(??_junction_follow+0)+0,w
  2080  044B  00F1               	movwf	(?_motor)
  2081  044C  30B4               	movlw	(0B4h)
  2082  044D  120A  158A  2397   	fcall	_motor
              120A  118A         
  2083                           	line	244
  2084                           ;main.c: 244: _delay((unsigned long)((500)*(20000000/4000.0)));
  2085                           	opt asmopt_off
  2086  0452  300D               movlw  13
  2087  0453  1283               	bcf	status, 5	;RP0=0, select bank0
  2088  0454  1303               	bcf	status, 6	;RP1=0, select bank0
  2089  0455  00D9               movwf	((??_junction_follow+0)+0+2),f
  2090  0456  30AF               movlw	175
  2091  0457  00D8               movwf	((??_junction_follow+0)+0+1),f
  2092  0458  30C1               	movlw	193
  2093  0459  00D7               movwf	((??_junction_follow+0)+0),f
  2094  045A                     u4167:
  2095  045A  0BD7               	decfsz	((??_junction_follow+0)+0),f
  2096  045B  2C5A               	goto	u4167
  2097  045C  0BD8               	decfsz	((??_junction_follow+0)+0+1),f
  2098  045D  2C5A               	goto	u4167
  2099  045E  0BD9               	decfsz	((??_junction_follow+0)+0+2),f
  2100  045F  2C5A               	goto	u4167
  2101  0460  0064               	clrwdt
  2102                           opt asmopt_on
  2103                           
  2104  0461  2C62               	goto	l5215
  2105                           	line	246
  2106                           ;main.c: 246: do{
  2107                           	
  2108  0462                     l1183:	
  2109                           	line	247
  2110                           	
  2111  0462                     l5215:	
  2112                           ;main.c: 247: RB7=1;
  2113  0462  1283               	bcf	status, 5	;RP0=0, select bank0
  2114  0463  1303               	bcf	status, 6	;RP1=0, select bank0
  2115  0464  1786               	bsf	(55/8),(55)&7
  2116                           	line	248
  2117                           	
  2118  0465                     l5217:	
  2119                           ;main.c: 248: lineposition=LSA08_GetPosition();
  2120  0465  120A  158A  24D5   	fcall	_LSA08_GetPosition
              120A  118A         
  2121  046A  1283               	bcf	status, 5	;RP0=0, select bank0
  2122  046B  1303               	bcf	status, 6	;RP1=0, select bank0
  2123  046C  00D7               	movwf	(??_junction_follow+0)+0
  2124  046D  0857               	movf	(??_junction_follow+0)+0,w
  2125  046E  00DC               	movwf	(junction_follow@lineposition)
  2126                           	line	249
  2127                           	
  2128  046F                     l5219:	
  2129                           ;main.c: 249: }while(lineposition>20);
  2130  046F  085C               	movf	(junction_follow@lineposition),w
  2131  0470  3A80               	xorlw	80h
  2132  0471  3E6B               	addlw	-((015h)^80h)
  2133  0472  1803               	skipnc
  2134  0473  2C75               	goto	u4081
  2135  0474  2C76               	goto	u4080
  2136  0475                     u4081:
  2137  0475  2C62               	goto	l5215
  2138  0476                     u4080:
  2139                           	
  2140  0476                     l1184:	
  2141                           	line	250
  2142                           ;main.c: 250: RB2=1; RB3=1; RB4=1; RB5=1; motor(255,255);;
  2143  0476  1506               	bsf	(50/8),(50)&7
  2144  0477  1586               	bsf	(51/8),(51)&7
  2145  0478  1606               	bsf	(52/8),(52)&7
  2146  0479  1686               	bsf	(53/8),(53)&7
  2147                           	
  2148  047A                     l5221:	
  2149  047A  30FF               	movlw	(0FFh)
  2150  047B  00D7               	movwf	(??_junction_follow+0)+0
  2151  047C  0857               	movf	(??_junction_follow+0)+0,w
  2152  047D  00F1               	movwf	(?_motor)
  2153  047E  30FF               	movlw	(0FFh)
  2154  047F  120A  158A  2397   	fcall	_motor
              120A  118A         
  2155                           	line	251
  2156                           	
  2157  0484                     l5223:	
  2158                           ;main.c: 251: RB7=0;
  2159  0484  1283               	bcf	status, 5	;RP0=0, select bank0
  2160  0485  1303               	bcf	status, 6	;RP1=0, select bank0
  2161  0486  1386               	bcf	(55/8),(55)&7
  2162                           	line	252
  2163                           	
  2164  0487                     l5225:	
  2165                           ;main.c: 252: _delay((unsigned long)((100)*(20000000/4000.0)));
  2166                           	opt asmopt_off
  2167  0487  3003               movlw  3
  2168  0488  00D9               movwf	((??_junction_follow+0)+0+2),f
  2169  0489  308A               movlw	138
  2170  048A  00D8               movwf	((??_junction_follow+0)+0+1),f
  2171  048B  3056               	movlw	86
  2172  048C  00D7               movwf	((??_junction_follow+0)+0),f
  2173  048D                     u4177:
  2174  048D  0BD7               	decfsz	((??_junction_follow+0)+0),f
  2175  048E  2C8D               	goto	u4177
  2176  048F  0BD8               	decfsz	((??_junction_follow+0)+0+1),f
  2177  0490  2C8D               	goto	u4177
  2178  0491  0BD9               	decfsz	((??_junction_follow+0)+0+2),f
  2179  0492  2C8D               	goto	u4177
  2180  0493  2C94               	nop2
  2181                           opt asmopt_on
  2182                           
  2183  0494  2BDD               	goto	l5175
  2184                           	line	255
  2185                           	
  2186  0495                     l1185:	
  2187                           	line	222
  2188  0495  2BDD               	goto	l5175
  2189                           	
  2190  0496                     l1186:	
  2191                           	line	256
  2192                           	
  2193  0496                     l1187:	
  2194  0496  0008               	return
  2195                           	opt stack 0
  2196                           GLOBAL	__end_of_junction_follow
  2197  0497                     	__end_of_junction_follow:
  2198 ;; =============== function _junction_follow ends ============
  2199                           
  2200                           	signat	_junction_follow,88
  2201                           	global	_jfolo
  2202                           psect	text884,local,class=CODE,delta=2
  2203                           global __ptext884
  2204  0033                     __ptext884:
  2205                           
  2206 ;; *************** function _jfolo *****************
  2207 ;; Defined at:
  2208 ;;		line 177 in file "../main.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;  count           1    wreg     unsigned char 
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;  count           1   52[BANK0 ] unsigned char 
  2213 ;;  junction_cou    1   54[BANK0 ] unsigned char 
  2214 ;;  timer           1   53[BANK0 ] unsigned char 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;		None               void
  2217 ;; Registers used:
  2218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2224 ;;      Params:         0       0       0       0       0
  2225 ;;      Locals:         0       3       0       0       0
  2226 ;;      Temps:          0       3       0       0       0
  2227 ;;      Totals:         0       6       0       0       0
  2228 ;;Total ram usage:        6 bytes
  2229 ;; Hardware stack levels used:    1
  2230 ;; Hardware stack levels required when called:    5
  2231 ;; This function calls:
  2232 ;;		_motor
  2233 ;;		_LSA08_GetJunction
  2234 ;;		_lcd_goto
  2235 ;;		_lcd_putchar
  2236 ;;		_lcd_num
  2237 ;;		_line_follow
  2238 ;; This function is called by:
  2239 ;;		_junction_follow
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           psect	text884
  2243                           	file	"../main.c"
  2244                           	line	177
  2245                           	global	__size_of_jfolo
  2246  007D                     	__size_of_jfolo	equ	__end_of_jfolo-_jfolo
  2247                           	
  2248  0033                     _jfolo:	
  2249                           	opt	stack 1
  2250                           ; Regs used in _jfolo: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2251                           ;jfolo@count stored from wreg
  2252                           	line	179
  2253  0033  1283               	bcf	status, 5	;RP0=0, select bank0
  2254  0034  1303               	bcf	status, 6	;RP1=0, select bank0
  2255  0035  00D4               	movwf	(jfolo@count)
  2256                           	
  2257  0036                     l5139:	
  2258                           ;main.c: 179: unsigned char junction_count=0;
  2259  0036  01D6               	clrf	(jfolo@junction_count)
  2260                           	line	180
  2261                           ;main.c: 180: unsigned char timer=0;
  2262  0037  01D5               	clrf	(jfolo@timer)
  2263                           	line	182
  2264                           ;main.c: 182: RB2 = 1; RB3 = 0; RB4 = 0; RB5 = 1;;
  2265  0038  1506               	bsf	(50/8),(50)&7
  2266  0039  1186               	bcf	(51/8),(51)&7
  2267  003A  1206               	bcf	(52/8),(52)&7
  2268  003B  1686               	bsf	(53/8),(53)&7
  2269                           	line	188
  2270                           ;main.c: 188: while(junction_count<count){
  2271  003C  288A               	goto	l5159
  2272                           	
  2273  003D                     l1170:	
  2274                           	line	189
  2275                           	
  2276  003D                     l5141:	
  2277                           ;main.c: 189: timer++;
  2278  003D  3001               	movlw	(01h)
  2279  003E  00D1               	movwf	(??_jfolo+0)+0
  2280  003F  0851               	movf	(??_jfolo+0)+0,w
  2281  0040  07D5               	addwf	(jfolo@timer),f
  2282                           	line	190
  2283                           	
  2284  0041                     l5143:	
  2285                           ;main.c: 190: if(timer>50){
  2286  0041  3033               	movlw	(033h)
  2287  0042  0255               	subwf	(jfolo@timer),w
  2288  0043  1C03               	skipc
  2289  0044  2846               	goto	u4021
  2290  0045  2847               	goto	u4020
  2291  0046                     u4021:
  2292  0046  2884               	goto	l5157
  2293  0047                     u4020:
  2294                           	line	191
  2295                           	
  2296  0047                     l5145:	
  2297                           ;main.c: 191: timer=0;
  2298  0047  01D5               	clrf	(jfolo@timer)
  2299                           	line	192
  2300                           	
  2301  0048                     l5147:	
  2302                           ;main.c: 192: motor(0,0);
  2303  0048  01F1               	clrf	(?_motor)
  2304  0049  3000               	movlw	(0)
  2305  004A  120A  158A  2397   	fcall	_motor
              120A  118A         
  2306                           	line	193
  2307                           ;main.c: 193: do{
  2308                           	
  2309  004F                     l1172:	
  2310                           	line	194
  2311                           ;main.c: 194: junction_count=LSA08_GetJunction();
  2312  004F  120A  158A  2405   	fcall	_LSA08_GetJunction
              120A  118A         
  2313  0054  1283               	bcf	status, 5	;RP0=0, select bank0
  2314  0055  1303               	bcf	status, 6	;RP1=0, select bank0
  2315  0056  00D1               	movwf	(??_jfolo+0)+0
  2316  0057  0851               	movf	(??_jfolo+0)+0,w
  2317  0058  00D6               	movwf	(jfolo@junction_count)
  2318                           	line	195
  2319                           	
  2320  0059                     l5149:	
  2321                           ;main.c: 195: }while(ERR_FLAG||(junction_count>10));
  2322  0059  08E8               	movf	(_ERR_FLAG),f
  2323  005A  1D03               	skipz
  2324  005B  285D               	goto	u4031
  2325  005C  285E               	goto	u4030
  2326  005D                     u4031:
  2327  005D  284F               	goto	l1172
  2328  005E                     u4030:
  2329                           	
  2330  005E                     l5151:	
  2331  005E  300B               	movlw	(0Bh)
  2332  005F  0256               	subwf	(jfolo@junction_count),w
  2333  0060  1803               	skipnc
  2334  0061  2863               	goto	u4041
  2335  0062  2864               	goto	u4040
  2336  0063                     u4041:
  2337  0063  284F               	goto	l1172
  2338  0064                     u4040:
  2339  0064  2865               	goto	l5153
  2340                           	
  2341  0065                     l1173:	
  2342                           	line	197
  2343                           	
  2344  0065                     l5153:	
  2345                           ;main.c: 197: lcd_goto(0);
  2346  0065  3000               	movlw	(0)
  2347  0066  120A  158A  24B0   	fcall	_lcd_goto
              120A  118A         
  2348                           	line	198
  2349                           ;main.c: 198: lcd_putchar('J');
  2350  006B  304A               	movlw	(04Ah)
  2351  006C  120A  158A  237D   	fcall	_lcd_putchar
              120A  118A         
  2352                           	line	199
  2353                           	
  2354  0071                     l5155:	
  2355                           ;main.c: 199: lcd_num(junction_count,3);
  2356  0071  1283               	bcf	status, 5	;RP0=0, select bank0
  2357  0072  1303               	bcf	status, 6	;RP1=0, select bank0
  2358  0073  0856               	movf	(jfolo@junction_count),w
  2359  0074  00D1               	movwf	(??_jfolo+0)+0
  2360  0075  01D2               	clrf	(??_jfolo+0)+0+1
  2361  0076  0851               	movf	0+(??_jfolo+0)+0,w
  2362  0077  00F9               	movwf	(?_lcd_num)
  2363  0078  0852               	movf	1+(??_jfolo+0)+0,w
  2364  0079  00FA               	movwf	(?_lcd_num+1)
  2365  007A  3003               	movlw	(03h)
  2366  007B  00D3               	movwf	(??_jfolo+2)+0
  2367  007C  0853               	movf	(??_jfolo+2)+0,w
  2368  007D  00FB               	movwf	0+(?_lcd_num)+02h
  2369  007E  120A  118A  2137   	fcall	_lcd_num
              120A  118A         
  2370  0083  2884               	goto	l5157
  2371                           	line	200
  2372                           	
  2373  0084                     l1171:	
  2374                           	line	202
  2375                           	
  2376  0084                     l5157:	
  2377                           ;main.c: 200: }
  2378                           ;main.c: 202: line_follow();
  2379  0084  120A  118A  2585   	fcall	_line_follow
              120A  118A         
  2380  0089  288A               	goto	l5159
  2381                           	line	203
  2382                           	
  2383  008A                     l1169:	
  2384                           	line	188
  2385                           	
  2386  008A                     l5159:	
  2387  008A  1283               	bcf	status, 5	;RP0=0, select bank0
  2388  008B  1303               	bcf	status, 6	;RP1=0, select bank0
  2389  008C  0854               	movf	(jfolo@count),w
  2390  008D  0256               	subwf	(jfolo@junction_count),w
  2391  008E  1C03               	skipc
  2392  008F  2891               	goto	u4051
  2393  0090  2892               	goto	u4050
  2394  0091                     u4051:
  2395  0091  283D               	goto	l5141
  2396  0092                     u4050:
  2397                           	
  2398  0092                     l1174:	
  2399                           	line	204
  2400                           ;main.c: 203: }
  2401                           ;main.c: 204: RB2=1; RB3=1; RB4=1; RB5=1; motor(255,255);;
  2402  0092  1506               	bsf	(50/8),(50)&7
  2403  0093  1586               	bsf	(51/8),(51)&7
  2404  0094  1606               	bsf	(52/8),(52)&7
  2405  0095  1686               	bsf	(53/8),(53)&7
  2406                           	
  2407  0096                     l5161:	
  2408  0096  30FF               	movlw	(0FFh)
  2409  0097  00D1               	movwf	(??_jfolo+0)+0
  2410  0098  0851               	movf	(??_jfolo+0)+0,w
  2411  0099  00F1               	movwf	(?_motor)
  2412  009A  30FF               	movlw	(0FFh)
  2413  009B  120A  158A  2397   	fcall	_motor
              120A  118A         
  2414                           	line	206
  2415                           	
  2416  00A0                     l5163:	
  2417                           ;main.c: 206: _delay((unsigned long)((200)*(20000000/4000.0)));
  2418                           	opt asmopt_off
  2419  00A0  3006               movlw  6
  2420  00A1  1283               	bcf	status, 5	;RP0=0, select bank0
  2421  00A2  1303               	bcf	status, 6	;RP1=0, select bank0
  2422  00A3  00D3               movwf	((??_jfolo+0)+0+2),f
  2423  00A4  3013               movlw	19
  2424  00A5  00D2               movwf	((??_jfolo+0)+0+1),f
  2425  00A6  30B1               	movlw	177
  2426  00A7  00D1               movwf	((??_jfolo+0)+0),f
  2427  00A8                     u4187:
  2428  00A8  0BD1               	decfsz	((??_jfolo+0)+0),f
  2429  00A9  28A8               	goto	u4187
  2430  00AA  0BD2               	decfsz	((??_jfolo+0)+0+1),f
  2431  00AB  28A8               	goto	u4187
  2432  00AC  0BD3               	decfsz	((??_jfolo+0)+0+2),f
  2433  00AD  28A8               	goto	u4187
  2434  00AE  28AF               	nop2
  2435                           opt asmopt_on
  2436                           
  2437                           	line	209
  2438                           	
  2439  00AF                     l1175:	
  2440  00AF  0008               	return
  2441                           	opt stack 0
  2442                           GLOBAL	__end_of_jfolo
  2443  00B0                     	__end_of_jfolo:
  2444 ;; =============== function _jfolo ends ============
  2445                           
  2446                           	signat	_jfolo,4216
  2447                           	global	_PID_MENU
  2448                           psect	text885,local,class=CODE,delta=2
  2449                           global __ptext885
  2450  02FE                     __ptext885:
  2451                           
  2452 ;; *************** function _PID_MENU *****************
  2453 ;; Defined at:
  2454 ;;		line 294 in file "../main.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;		None
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  count           4    5[BANK0 ] unsigned long 
  2459 ;;  mode            1    9[BANK0 ] unsigned char 
  2460 ;;  kval            1    0        unsigned char 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;		None               void
  2463 ;; Registers used:
  2464 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2470 ;;      Params:         0       0       0       0       0
  2471 ;;      Locals:         0       5       0       0       0
  2472 ;;      Temps:          1       0       0       0       0
  2473 ;;      Totals:         1       5       0       0       0
  2474 ;;Total ram usage:        6 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    5
  2477 ;; This function calls:
  2478 ;;		_Calibrate
  2479 ;;		_lcd_goto
  2480 ;;		_lcd_putstr
  2481 ;; This function is called by:
  2482 ;;		_main
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           psect	text885
  2486                           	file	"../main.c"
  2487                           	line	294
  2488                           	global	__size_of_PID_MENU
  2489  00B0                     	__size_of_PID_MENU	equ	__end_of_PID_MENU-_PID_MENU
  2490                           	
  2491  02FE                     _PID_MENU:	
  2492                           	opt	stack 2
  2493                           ; Regs used in _PID_MENU: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2494                           	line	295
  2495                           	
  2496  02FE                     l5097:	
  2497                           ;main.c: 295: unsigned char mode=0;
  2498  02FE  1283               	bcf	status, 5	;RP0=0, select bank0
  2499  02FF  1303               	bcf	status, 6	;RP1=0, select bank0
  2500  0300  01A9               	clrf	(PID_MENU@mode)
  2501                           	line	296
  2502                           	
  2503  0301                     l5099:	
  2504                           ;main.c: 296: unsigned long count=0;
  2505  0301  3000               	movlw	0
  2506  0302  00A8               	movwf	(PID_MENU@count+3)
  2507  0303  3000               	movlw	0
  2508  0304  00A7               	movwf	(PID_MENU@count+2)
  2509  0305  3000               	movlw	0
  2510  0306  00A6               	movwf	(PID_MENU@count+1)
  2511  0307  3000               	movlw	0
  2512  0308  00A5               	movwf	(PID_MENU@count)
  2513                           
  2514  0309  2B0A               	goto	l5101
  2515                           	line	299
  2516                           ;main.c: 297: unsigned char kval;
  2517                           ;main.c: 299: while(1){
  2518                           	
  2519  030A                     l1202:	
  2520                           	line	301
  2521                           	
  2522  030A                     l5101:	
  2523                           ;main.c: 301: if(RB0==0){
  2524  030A  1283               	bcf	status, 5	;RP0=0, select bank0
  2525  030B  1303               	bcf	status, 6	;RP1=0, select bank0
  2526  030C  1806               	btfsc	(48/8),(48)&7
  2527  030D  2B0F               	goto	u3961
  2528  030E  2B10               	goto	u3960
  2529  030F                     u3961:
  2530  030F  2B24               	goto	l1203
  2531  0310                     u3960:
  2532  0310  2B12               	goto	l1204
  2533                           	line	302
  2534                           	
  2535  0311                     l5103:	
  2536                           ;main.c: 302: while(RB0==0);
  2537  0311  2B12               	goto	l1204
  2538                           	
  2539  0312                     l1205:	
  2540                           	
  2541  0312                     l1204:	
  2542  0312  1C06               	btfss	(48/8),(48)&7
  2543  0313  2B15               	goto	u3971
  2544  0314  2B16               	goto	u3970
  2545  0315                     u3971:
  2546  0315  2B12               	goto	l1204
  2547  0316                     u3970:
  2548  0316  2B17               	goto	l5105
  2549                           	
  2550  0317                     l1206:	
  2551                           	line	303
  2552                           	
  2553  0317                     l5105:	
  2554                           ;main.c: 303: mode++;
  2555  0317  3001               	movlw	(01h)
  2556  0318  00FD               	movwf	(??_PID_MENU+0)+0
  2557  0319  087D               	movf	(??_PID_MENU+0)+0,w
  2558  031A  07A9               	addwf	(PID_MENU@mode),f
  2559                           	line	304
  2560                           	
  2561  031B                     l5107:	
  2562                           ;main.c: 304: if (mode>2) mode=0;
  2563  031B  3003               	movlw	(03h)
  2564  031C  0229               	subwf	(PID_MENU@mode),w
  2565  031D  1C03               	skipc
  2566  031E  2B20               	goto	u3981
  2567  031F  2B21               	goto	u3980
  2568  0320                     u3981:
  2569  0320  2B4C               	goto	l5121
  2570  0321                     u3980:
  2571                           	
  2572  0321                     l5109:	
  2573  0321  01A9               	clrf	(PID_MENU@mode)
  2574  0322  2B4C               	goto	l5121
  2575                           	
  2576  0323                     l1207:	
  2577                           	line	306
  2578                           ;main.c: 306: }
  2579  0323  2B4C               	goto	l5121
  2580                           	line	307
  2581                           	
  2582  0324                     l1203:	
  2583                           ;main.c: 307: else if(RB1==0 ){
  2584  0324  1886               	btfsc	(49/8),(49)&7
  2585  0325  2B27               	goto	u3991
  2586  0326  2B28               	goto	u3990
  2587  0327                     u3991:
  2588  0327  2B4C               	goto	l5121
  2589  0328                     u3990:
  2590  0328  2B2A               	goto	l1210
  2591                           	line	308
  2592                           	
  2593  0329                     l5111:	
  2594                           ;main.c: 308: while(RB1==0);
  2595  0329  2B2A               	goto	l1210
  2596                           	
  2597  032A                     l1211:	
  2598                           	
  2599  032A                     l1210:	
  2600  032A  1C86               	btfss	(49/8),(49)&7
  2601  032B  2B2D               	goto	u4001
  2602  032C  2B2E               	goto	u4000
  2603  032D                     u4001:
  2604  032D  2B2A               	goto	l1210
  2605  032E                     u4000:
  2606  032E  2B3D               	goto	l5119
  2607                           	
  2608  032F                     l1212:	
  2609                           	line	310
  2610                           ;main.c: 310: switch (mode){
  2611  032F  2B3D               	goto	l5119
  2612                           	line	311
  2613                           ;main.c: 311: case 0: return;
  2614                           	
  2615  0330                     l1214:	
  2616  0330  2BAD               	goto	l1215
  2617                           	line	312
  2618                           ;main.c: 312: case 1: junction_mode^=1; break;
  2619                           	
  2620  0331                     l1216:	
  2621                           	
  2622  0331                     l5113:	
  2623  0331  3001               	movlw	(01h)
  2624  0332  00FD               	movwf	(??_PID_MENU+0)+0
  2625  0333  087D               	movf	(??_PID_MENU+0)+0,w
  2626  0334  06E9               	xorwf	(_junction_mode),f
  2627  0335  2B4C               	goto	l5121
  2628                           	line	313
  2629                           ;main.c: 313: case 2: Calibrate(); break;
  2630                           	
  2631  0336                     l1218:	
  2632                           	
  2633  0336                     l5115:	
  2634  0336  120A  158A  270D   	fcall	_Calibrate
              120A  118A         
  2635  033B  2B4C               	goto	l5121
  2636                           	line	314
  2637                           	
  2638  033C                     l5117:	
  2639                           ;main.c: 314: }
  2640  033C  2B4C               	goto	l5121
  2641                           	line	310
  2642                           	
  2643  033D                     l1213:	
  2644                           	
  2645  033D                     l5119:	
  2646  033D  1283               	bcf	status, 5	;RP0=0, select bank0
  2647  033E  1303               	bcf	status, 6	;RP1=0, select bank0
  2648  033F  0829               	movf	(PID_MENU@mode),w
  2649                           	; Switch size 1, requested type "space"
  2650                           ; Number of cases is 3, Range of values is 0 to 2
  2651                           ; switch strategies available:
  2652                           ; Name         Instructions Cycles
  2653                           ; simple_byte           10     6 (average)
  2654                           ; direct_byte           17     8 (fixed)
  2655                           ; jumptable            260     6 (fixed)
  2656                           ; rangetable             7     6 (fixed)
  2657                           ; spacedrange           12     9 (fixed)
  2658                           ; locatedrange           3     3 (fixed)
  2659                           ;	Chosen strategy is simple_byte
  2660                           
  2661                           	opt asmopt_off
  2662  0340  3A00               	xorlw	0^0	; case 0
  2663  0341  1903               	skipnz
  2664  0342  2BAD               	goto	l1215
  2665  0343  3A01               	xorlw	1^0	; case 1
  2666  0344  1903               	skipnz
  2667  0345  2B31               	goto	l5113
  2668  0346  3A03               	xorlw	2^1	; case 2
  2669  0347  1903               	skipnz
  2670  0348  2B36               	goto	l5115
  2671  0349  2B4C               	goto	l5121
  2672                           	opt asmopt_on
  2673                           
  2674                           	line	314
  2675                           	
  2676  034A                     l1217:	
  2677  034A  2B4C               	goto	l5121
  2678                           	line	315
  2679                           	
  2680  034B                     l1209:	
  2681  034B  2B4C               	goto	l5121
  2682                           	line	317
  2683                           	
  2684  034C                     l1208:	
  2685                           	
  2686  034C                     l5121:	
  2687                           ;main.c: 315: }
  2688                           ;main.c: 317: lcd_goto(0);
  2689  034C  3000               	movlw	(0)
  2690  034D  120A  158A  24B0   	fcall	_lcd_goto
              120A  118A         
  2691                           	line	318
  2692                           ;main.c: 318: switch (mode){
  2693  0352  2B9E               	goto	l5137
  2694                           	line	320
  2695                           ;main.c: 320: case 0: lcd_putstr("Start\n");
  2696                           	
  2697  0353                     l1220:	
  2698                           	
  2699  0353                     l5123:	
  2700  0353  3045               	movlw	low((STR_5-__stringbase))
  2701  0354  00F7               	movwf	(?_lcd_putstr)
  2702  0355  3080               	movlw	80h
  2703  0356  00F8               	movwf	(?_lcd_putstr+1)
  2704  0357  120A  158A  265B   	fcall	_lcd_putstr
              120A  118A         
  2705                           	line	321
  2706                           ;main.c: 321: lcd_putstr("PressSW2");
  2707  035C  301C               	movlw	low((STR_6-__stringbase))
  2708  035D  00F7               	movwf	(?_lcd_putstr)
  2709  035E  3080               	movlw	80h
  2710  035F  00F8               	movwf	(?_lcd_putstr+1)
  2711  0360  120A  158A  265B   	fcall	_lcd_putstr
              120A  118A         
  2712                           	line	322
  2713                           ;main.c: 322: break;
  2714  0365  2B0A               	goto	l5101
  2715                           	line	323
  2716                           ;main.c: 323: case 1: lcd_putstr("Mode \n");
  2717                           	
  2718  0366                     l1222:	
  2719                           	
  2720  0366                     l5125:	
  2721  0366  303E               	movlw	low((STR_7-__stringbase))
  2722  0367  00F7               	movwf	(?_lcd_putstr)
  2723  0368  3080               	movlw	80h
  2724  0369  00F8               	movwf	(?_lcd_putstr+1)
  2725  036A  120A  158A  265B   	fcall	_lcd_putstr
              120A  118A         
  2726                           	line	324
  2727                           	
  2728  036F                     l5127:	
  2729                           ;main.c: 324: if(junction_mode) lcd_putstr("Junction");
  2730  036F  1283               	bcf	status, 5	;RP0=0, select bank0
  2731  0370  1303               	bcf	status, 6	;RP1=0, select bank0
  2732  0371  0869               	movf	(_junction_mode),w
  2733  0372  1D03               	skipz
  2734  0373  2B75               	goto	u4010
  2735  0374  2B7F               	goto	l5131
  2736  0375                     u4010:
  2737                           	
  2738  0375                     l5129:	
  2739  0375  3025               	movlw	low((STR_8-__stringbase))
  2740  0376  00F7               	movwf	(?_lcd_putstr)
  2741  0377  3080               	movlw	80h
  2742  0378  00F8               	movwf	(?_lcd_putstr+1)
  2743  0379  120A  158A  265B   	fcall	_lcd_putstr
              120A  118A         
  2744  037E  2B0A               	goto	l5101
  2745                           	line	325
  2746                           	
  2747  037F                     l1223:	
  2748                           	
  2749  037F                     l5131:	
  2750                           ;main.c: 325: else lcd_putstr("Line Flw");
  2751  037F  302E               	movlw	low((STR_9-__stringbase))
  2752  0380  00F7               	movwf	(?_lcd_putstr)
  2753  0381  3080               	movlw	80h
  2754  0382  00F8               	movwf	(?_lcd_putstr+1)
  2755  0383  120A  158A  265B   	fcall	_lcd_putstr
              120A  118A         
  2756  0388  2B0A               	goto	l5101
  2757                           	
  2758  0389                     l1224:	
  2759                           	line	326
  2760                           ;main.c: 326: break;
  2761  0389  2B0A               	goto	l5101
  2762                           	line	327
  2763                           ;main.c: 327: case 2: lcd_putstr("Calb \n");
  2764                           	
  2765  038A                     l1225:	
  2766                           	
  2767  038A                     l5133:	
  2768  038A  3037               	movlw	low((STR_10-__stringbase))
  2769  038B  00F7               	movwf	(?_lcd_putstr)
  2770  038C  3080               	movlw	80h
  2771  038D  00F8               	movwf	(?_lcd_putstr+1)
  2772  038E  120A  158A  265B   	fcall	_lcd_putstr
              120A  118A         
  2773                           	line	328
  2774                           ;main.c: 328: lcd_putstr("PressSW2");
  2775  0393  301C               	movlw	low((STR_11-__stringbase))
  2776  0394  00F7               	movwf	(?_lcd_putstr)
  2777  0395  3080               	movlw	80h
  2778  0396  00F8               	movwf	(?_lcd_putstr+1)
  2779  0397  120A  158A  265B   	fcall	_lcd_putstr
              120A  118A         
  2780                           	line	329
  2781                           ;main.c: 329: break;
  2782  039C  2B0A               	goto	l5101
  2783                           	line	330
  2784                           	
  2785  039D                     l5135:	
  2786                           ;main.c: 330: }
  2787  039D  2B0A               	goto	l5101
  2788                           	line	318
  2789                           	
  2790  039E                     l1219:	
  2791                           	
  2792  039E                     l5137:	
  2793  039E  1283               	bcf	status, 5	;RP0=0, select bank0
  2794  039F  1303               	bcf	status, 6	;RP1=0, select bank0
  2795  03A0  0829               	movf	(PID_MENU@mode),w
  2796                           	; Switch size 1, requested type "space"
  2797                           ; Number of cases is 3, Range of values is 0 to 2
  2798                           ; switch strategies available:
  2799                           ; Name         Instructions Cycles
  2800                           ; simple_byte           10     6 (average)
  2801                           ; direct_byte           17     8 (fixed)
  2802                           ; jumptable            260     6 (fixed)
  2803                           ; rangetable             7     6 (fixed)
  2804                           ; spacedrange           12     9 (fixed)
  2805                           ; locatedrange           3     3 (fixed)
  2806                           ;	Chosen strategy is simple_byte
  2807                           
  2808                           	opt asmopt_off
  2809  03A1  3A00               	xorlw	0^0	; case 0
  2810  03A2  1903               	skipnz
  2811  03A3  2B53               	goto	l5123
  2812  03A4  3A01               	xorlw	1^0	; case 1
  2813  03A5  1903               	skipnz
  2814  03A6  2B66               	goto	l5125
  2815  03A7  3A03               	xorlw	2^1	; case 2
  2816  03A8  1903               	skipnz
  2817  03A9  2B8A               	goto	l5133
  2818  03AA  2B0A               	goto	l5101
  2819                           	opt asmopt_on
  2820                           
  2821                           	line	330
  2822                           	
  2823  03AB                     l1221:	
  2824  03AB  2B0A               	goto	l5101
  2825                           	line	332
  2826                           	
  2827  03AC                     l1226:	
  2828                           	line	299
  2829  03AC  2B0A               	goto	l5101
  2830                           	
  2831  03AD                     l1227:	
  2832                           	line	426
  2833                           	
  2834  03AD                     l1215:	
  2835  03AD  0008               	return
  2836                           	opt stack 0
  2837                           GLOBAL	__end_of_PID_MENU
  2838  03AE                     	__end_of_PID_MENU:
  2839 ;; =============== function _PID_MENU ends ============
  2840                           
  2841                           	signat	_PID_MENU,88
  2842                           	global	_Calibrate
  2843                           psect	text886,local,class=CODE,delta=2
  2844                           global __ptext886
  2845  0F0D                     __ptext886:
  2846                           
  2847 ;; *************** function _Calibrate *****************
  2848 ;; Defined at:
  2849 ;;		line 277 in file "../main.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;		None
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;		None
  2854 ;; Return value:  Size  Location     Type
  2855 ;;		None               void
  2856 ;; Registers used:
  2857 ;;		wreg, status,2, status,0, pclath, cstack
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2863 ;;      Params:         0       0       0       0       0
  2864 ;;      Locals:         0       0       0       0       0
  2865 ;;      Temps:          0       3       0       0       0
  2866 ;;      Totals:         0       3       0       0       0
  2867 ;;Total ram usage:        3 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; Hardware stack levels required when called:    4
  2870 ;; This function calls:
  2871 ;;		_LSA08_Calibrate
  2872 ;;		_motor
  2873 ;;		_lcd_clr
  2874 ;; This function is called by:
  2875 ;;		_PID_MENU
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           psect	text886
  2879                           	file	"../main.c"
  2880                           	line	277
  2881                           	global	__size_of_Calibrate
  2882  0078                     	__size_of_Calibrate	equ	__end_of_Calibrate-_Calibrate
  2883                           	
  2884  0F0D                     _Calibrate:	
  2885                           	opt	stack 2
  2886                           ; Regs used in _Calibrate: [wreg+status,2+status,0+pclath+cstack]
  2887                           	line	279
  2888                           	
  2889  0F0D                     l5051:	
  2890                           ;main.c: 279: LSA08_Calibrate();
  2891  0F0D  120A  158A  23CA   	fcall	_LSA08_Calibrate
              120A  158A         
  2892                           	line	281
  2893                           	
  2894  0F12                     l5053:	
  2895                           ;main.c: 281: RB2 = 0; RB3 = 1; RB4 = 0; RB5 = 1;; motor(180,180);
  2896  0F12  1283               	bcf	status, 5	;RP0=0, select bank0
  2897  0F13  1303               	bcf	status, 6	;RP1=0, select bank0
  2898  0F14  1106               	bcf	(50/8),(50)&7
  2899                           	
  2900  0F15                     l5055:	
  2901  0F15  1586               	bsf	(51/8),(51)&7
  2902                           	
  2903  0F16                     l5057:	
  2904  0F16  1206               	bcf	(52/8),(52)&7
  2905                           	
  2906  0F17                     l5059:	
  2907  0F17  1686               	bsf	(53/8),(53)&7
  2908  0F18  30B4               	movlw	(0B4h)
  2909  0F19  00A2               	movwf	(??_Calibrate+0)+0
  2910  0F1A  0822               	movf	(??_Calibrate+0)+0,w
  2911  0F1B  00F1               	movwf	(?_motor)
  2912  0F1C  30B4               	movlw	(0B4h)
  2913  0F1D  120A  158A  2397   	fcall	_motor
              120A  158A         
  2914                           	line	282
  2915                           	
  2916  0F22                     l5061:	
  2917                           ;main.c: 282: _delay((unsigned long)((600)*(20000000/4000.0)));
  2918                           	opt asmopt_off
  2919  0F22  3010               movlw  16
  2920  0F23  1283               	bcf	status, 5	;RP0=0, select bank0
  2921  0F24  1303               	bcf	status, 6	;RP1=0, select bank0
  2922  0F25  00A4               movwf	((??_Calibrate+0)+0+2),f
  2923  0F26  3039               movlw	57
  2924  0F27  00A3               movwf	((??_Calibrate+0)+0+1),f
  2925  0F28  301B               	movlw	27
  2926  0F29  00A2               movwf	((??_Calibrate+0)+0),f
  2927  0F2A                     u4197:
  2928  0F2A  0BA2               	decfsz	((??_Calibrate+0)+0),f
  2929  0F2B  2F2A               	goto	u4197
  2930  0F2C  0BA3               	decfsz	((??_Calibrate+0)+0+1),f
  2931  0F2D  2F2A               	goto	u4197
  2932  0F2E  0BA4               	decfsz	((??_Calibrate+0)+0+2),f
  2933  0F2F  2F2A               	goto	u4197
  2934  0F30  2F31               	nop2
  2935                           opt asmopt_on
  2936                           
  2937                           	line	284
  2938                           	
  2939  0F31                     l5063:	
  2940                           ;main.c: 284: RB2 = 1; RB3 = 0; RB4 = 1; RB5 = 0;;
  2941  0F31  1283               	bcf	status, 5	;RP0=0, select bank0
  2942  0F32  1303               	bcf	status, 6	;RP1=0, select bank0
  2943  0F33  1506               	bsf	(50/8),(50)&7
  2944                           	
  2945  0F34                     l5065:	
  2946  0F34  1186               	bcf	(51/8),(51)&7
  2947                           	
  2948  0F35                     l5067:	
  2949  0F35  1606               	bsf	(52/8),(52)&7
  2950                           	
  2951  0F36                     l5069:	
  2952  0F36  1286               	bcf	(53/8),(53)&7
  2953                           	line	285
  2954                           	
  2955  0F37                     l5071:	
  2956                           ;main.c: 285: _delay((unsigned long)((600)*(20000000/4000.0)));_delay((unsigned long)((6
                                 00)*(20000000/4000.0)));
  2957                           	opt asmopt_off
  2958  0F37  3010               movlw  16
  2959  0F38  00A4               movwf	((??_Calibrate+0)+0+2),f
  2960  0F39  3039               movlw	57
  2961  0F3A  00A3               movwf	((??_Calibrate+0)+0+1),f
  2962  0F3B  301B               	movlw	27
  2963  0F3C  00A2               movwf	((??_Calibrate+0)+0),f
  2964  0F3D                     u4207:
  2965  0F3D  0BA2               	decfsz	((??_Calibrate+0)+0),f
  2966  0F3E  2F3D               	goto	u4207
  2967  0F3F  0BA3               	decfsz	((??_Calibrate+0)+0+1),f
  2968  0F40  2F3D               	goto	u4207
  2969  0F41  0BA4               	decfsz	((??_Calibrate+0)+0+2),f
  2970  0F42  2F3D               	goto	u4207
  2971  0F43  2F44               	nop2
  2972                           opt asmopt_on
  2973                           
  2974                           	
  2975  0F44                     l5073:	
  2976                           	opt asmopt_off
  2977  0F44  3010               movlw  16
  2978  0F45  1283               	bcf	status, 5	;RP0=0, select bank0
  2979  0F46  1303               	bcf	status, 6	;RP1=0, select bank0
  2980  0F47  00A4               movwf	((??_Calibrate+0)+0+2),f
  2981  0F48  3039               movlw	57
  2982  0F49  00A3               movwf	((??_Calibrate+0)+0+1),f
  2983  0F4A  301B               	movlw	27
  2984  0F4B  00A2               movwf	((??_Calibrate+0)+0),f
  2985  0F4C                     u4217:
  2986  0F4C  0BA2               	decfsz	((??_Calibrate+0)+0),f
  2987  0F4D  2F4C               	goto	u4217
  2988  0F4E  0BA3               	decfsz	((??_Calibrate+0)+0+1),f
  2989  0F4F  2F4C               	goto	u4217
  2990  0F50  0BA4               	decfsz	((??_Calibrate+0)+0+2),f
  2991  0F51  2F4C               	goto	u4217
  2992  0F52  2F53               	nop2
  2993                           opt asmopt_on
  2994                           
  2995                           	line	287
  2996                           	
  2997  0F53                     l5075:	
  2998                           ;main.c: 287: RB2 = 0; RB3 = 1; RB4 = 0; RB5 = 1;; motor(180,180);
  2999  0F53  1283               	bcf	status, 5	;RP0=0, select bank0
  3000  0F54  1303               	bcf	status, 6	;RP1=0, select bank0
  3001  0F55  1106               	bcf	(50/8),(50)&7
  3002                           	
  3003  0F56                     l5077:	
  3004  0F56  1586               	bsf	(51/8),(51)&7
  3005                           	
  3006  0F57                     l5079:	
  3007  0F57  1206               	bcf	(52/8),(52)&7
  3008                           	
  3009  0F58                     l5081:	
  3010  0F58  1686               	bsf	(53/8),(53)&7
  3011                           	
  3012  0F59                     l5083:	
  3013  0F59  30B4               	movlw	(0B4h)
  3014  0F5A  00A2               	movwf	(??_Calibrate+0)+0
  3015  0F5B  0822               	movf	(??_Calibrate+0)+0,w
  3016  0F5C  00F1               	movwf	(?_motor)
  3017  0F5D  30B4               	movlw	(0B4h)
  3018  0F5E  120A  158A  2397   	fcall	_motor
              120A  158A         
  3019                           	line	288
  3020                           ;main.c: 288: _delay((unsigned long)((600)*(20000000/4000.0)));
  3021                           	opt asmopt_off
  3022  0F63  3010               movlw  16
  3023  0F64  1283               	bcf	status, 5	;RP0=0, select bank0
  3024  0F65  1303               	bcf	status, 6	;RP1=0, select bank0
  3025  0F66  00A4               movwf	((??_Calibrate+0)+0+2),f
  3026  0F67  3039               movlw	57
  3027  0F68  00A3               movwf	((??_Calibrate+0)+0+1),f
  3028  0F69  301B               	movlw	27
  3029  0F6A  00A2               movwf	((??_Calibrate+0)+0),f
  3030  0F6B                     u4227:
  3031  0F6B  0BA2               	decfsz	((??_Calibrate+0)+0),f
  3032  0F6C  2F6B               	goto	u4227
  3033  0F6D  0BA3               	decfsz	((??_Calibrate+0)+0+1),f
  3034  0F6E  2F6B               	goto	u4227
  3035  0F6F  0BA4               	decfsz	((??_Calibrate+0)+0+2),f
  3036  0F70  2F6B               	goto	u4227
  3037  0F71  2F72               	nop2
  3038                           opt asmopt_on
  3039                           
  3040                           	line	290
  3041                           	
  3042  0F72                     l5085:	
  3043                           ;main.c: 290: motor(0,0);RB2 = 1; RB3 = 0; RB4 = 0; RB5 = 1;;
  3044  0F72  01F1               	clrf	(?_motor)
  3045  0F73  3000               	movlw	(0)
  3046  0F74  120A  158A  2397   	fcall	_motor
              120A  158A         
  3047                           	
  3048  0F79                     l5087:	
  3049  0F79  1283               	bcf	status, 5	;RP0=0, select bank0
  3050  0F7A  1303               	bcf	status, 6	;RP1=0, select bank0
  3051  0F7B  1506               	bsf	(50/8),(50)&7
  3052                           	
  3053  0F7C                     l5089:	
  3054  0F7C  1186               	bcf	(51/8),(51)&7
  3055                           	
  3056  0F7D                     l5091:	
  3057  0F7D  1206               	bcf	(52/8),(52)&7
  3058                           	
  3059  0F7E                     l5093:	
  3060  0F7E  1686               	bsf	(53/8),(53)&7
  3061                           	line	291
  3062                           	
  3063  0F7F                     l5095:	
  3064                           ;main.c: 291: lcd_clr();
  3065  0F7F  120A  158A  2350   	fcall	_lcd_clr
              120A  158A         
  3066                           	line	293
  3067                           	
  3068  0F84                     l1199:	
  3069  0F84  0008               	return
  3070                           	opt stack 0
  3071                           GLOBAL	__end_of_Calibrate
  3072  0F85                     	__end_of_Calibrate:
  3073 ;; =============== function _Calibrate ends ============
  3074                           
  3075                           	signat	_Calibrate,88
  3076                           	global	_lcd_num
  3077                           psect	text887,local,class=CODE,delta=2
  3078                           global __ptext887
  3079  0137                     __ptext887:
  3080                           
  3081 ;; *************** function _lcd_num *****************
  3082 ;; Defined at:
  3083 ;;		line 626 in file "../main.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  number          2    9[COMMON] unsigned short 
  3086 ;;  digit           1   11[COMMON] unsigned char 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  num            16    4[BANK0 ] unsigned char [16]
  3089 ;;  i               1   22[BANK0 ] unsigned char 
  3090 ;;  k               1   21[BANK0 ] unsigned char 
  3091 ;;  j               1   20[BANK0 ] unsigned char 
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  1    wreg      unsigned char 
  3094 ;; Registers used:
  3095 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3101 ;;      Params:         3       0       0       0       0
  3102 ;;      Locals:         0      19       0       0       0
  3103 ;;      Temps:          0       4       0       0       0
  3104 ;;      Totals:         3      23       0       0       0
  3105 ;;Total ram usage:       26 bytes
  3106 ;; Hardware stack levels used:    1
  3107 ;; Hardware stack levels required when called:    4
  3108 ;; This function calls:
  3109 ;;		___lwmod
  3110 ;;		___lwdiv
  3111 ;;		_lcd_putstr
  3112 ;;		_lcd_putchar
  3113 ;; This function is called by:
  3114 ;;		_jfolo
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           psect	text887
  3118                           	file	"../main.c"
  3119                           	line	626
  3120                           	global	__size_of_lcd_num
  3121  0090                     	__size_of_lcd_num	equ	__end_of_lcd_num-_lcd_num
  3122                           	
  3123  0137                     _lcd_num:	
  3124                           	opt	stack 1
  3125                           ; Regs used in _lcd_num: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3126                           	line	629
  3127                           	
  3128  0137                     l5023:	
  3129                           ;main.c: 628: unsigned char num[16];
  3130                           ;main.c: 629: unsigned char k=digit-1;
  3131  0137  087B               	movf	(lcd_num@digit),w
  3132  0138  3EFF               	addlw	0FFh
  3133  0139  1283               	bcf	status, 5	;RP0=0, select bank0
  3134  013A  1303               	bcf	status, 6	;RP1=0, select bank0
  3135  013B  00A0               	movwf	(??_lcd_num+0)+0
  3136  013C  0820               	movf	(??_lcd_num+0)+0,w
  3137  013D  00B5               	movwf	(lcd_num@k)
  3138                           	line	632
  3139                           	
  3140  013E                     l5025:	
  3141                           ;main.c: 630: unsigned char i,j;
  3142                           ;main.c: 632: num[digit]=0;
  3143  013E  087B               	movf	(lcd_num@digit),w
  3144  013F  3E24               	addlw	lcd_num@num&0ffh
  3145  0140  0084               	movwf	fsr0
  3146  0141  1383               	bcf	status, 7	;select IRP bank0
  3147  0142  0180               	clrf	indf
  3148                           	line	634
  3149                           	
  3150  0143                     l5027:	
  3151                           ;main.c: 634: for(i=0;i<digit;i++){
  3152  0143  01B6               	clrf	(lcd_num@i)
  3153  0144  2985               	goto	l5039
  3154                           	
  3155  0145                     l1302:	
  3156                           	line	635
  3157                           	
  3158  0145                     l5029:	
  3159                           ;main.c: 635: num[k-i]=number%10+'0';
  3160  0145  300A               	movlw	low(0Ah)
  3161  0146  00F0               	movwf	(?___lwmod)
  3162  0147  3000               	movlw	high(0Ah)
  3163  0148  00F1               	movwf	((?___lwmod))+1
  3164  0149  087A               	movf	(lcd_num@number+1),w
  3165  014A  01F3               	clrf	1+(?___lwmod)+02h
  3166  014B  07F3               	addwf	1+(?___lwmod)+02h
  3167  014C  0879               	movf	(lcd_num@number),w
  3168  014D  01F2               	clrf	0+(?___lwmod)+02h
  3169  014E  07F2               	addwf	0+(?___lwmod)+02h
  3170                           
  3171  014F  120A  158A  25C9   	fcall	___lwmod
              120A  118A         
  3172  0154  0870               	movf	(0+(?___lwmod)),w
  3173  0155  3E30               	addlw	030h
  3174  0156  1283               	bcf	status, 5	;RP0=0, select bank0
  3175  0157  1303               	bcf	status, 6	;RP1=0, select bank0
  3176  0158  00A0               	movwf	(??_lcd_num+0)+0
  3177  0159  0336               	decf	(lcd_num@i),w
  3178  015A  3AFF               	xorlw	0ffh
  3179  015B  0735               	addwf	(lcd_num@k),w
  3180  015C  3E24               	addlw	lcd_num@num&0ffh
  3181  015D  0084               	movwf	fsr0
  3182  015E  0820               	movf	(??_lcd_num+0)+0,w
  3183  015F  1383               	bcf	status, 7	;select IRP bank0
  3184  0160  0080               	movwf	indf
  3185                           	line	636
  3186                           	
  3187  0161                     l5031:	
  3188                           ;main.c: 636: number=number/10;
  3189  0161  300A               	movlw	low(0Ah)
  3190  0162  00F0               	movwf	(?___lwdiv)
  3191  0163  3000               	movlw	high(0Ah)
  3192  0164  00F1               	movwf	((?___lwdiv))+1
  3193  0165  087A               	movf	(lcd_num@number+1),w
  3194  0166  01F3               	clrf	1+(?___lwdiv)+02h
  3195  0167  07F3               	addwf	1+(?___lwdiv)+02h
  3196  0168  0879               	movf	(lcd_num@number),w
  3197  0169  01F2               	clrf	0+(?___lwdiv)+02h
  3198  016A  07F2               	addwf	0+(?___lwdiv)+02h
  3199                           
  3200  016B  120A  158A  260D   	fcall	___lwdiv
              120A  118A         
  3201  0170  0871               	movf	(1+(?___lwdiv)),w
  3202  0171  01FA               	clrf	(lcd_num@number+1)
  3203  0172  07FA               	addwf	(lcd_num@number+1)
  3204  0173  0870               	movf	(0+(?___lwdiv)),w
  3205  0174  01F9               	clrf	(lcd_num@number)
  3206  0175  07F9               	addwf	(lcd_num@number)
  3207                           
  3208                           	line	637
  3209                           	
  3210  0176                     l5033:	
  3211                           ;main.c: 637: if(number==0) break;
  3212  0176  087A               	movf	((lcd_num@number+1)),w
  3213  0177  0479               	iorwf	((lcd_num@number)),w
  3214  0178  1D03               	skipz
  3215  0179  297B               	goto	u3931
  3216  017A  297C               	goto	u3930
  3217  017B                     u3931:
  3218  017B  297E               	goto	l5037
  3219  017C                     u3930:
  3220  017C  298C               	goto	l5041
  3221                           	
  3222  017D                     l5035:	
  3223  017D  298C               	goto	l5041
  3224                           	
  3225  017E                     l1303:	
  3226                           	line	634
  3227                           	
  3228  017E                     l5037:	
  3229  017E  3001               	movlw	(01h)
  3230  017F  1283               	bcf	status, 5	;RP0=0, select bank0
  3231  0180  1303               	bcf	status, 6	;RP1=0, select bank0
  3232  0181  00A0               	movwf	(??_lcd_num+0)+0
  3233  0182  0820               	movf	(??_lcd_num+0)+0,w
  3234  0183  07B6               	addwf	(lcd_num@i),f
  3235  0184  2985               	goto	l5039
  3236                           	
  3237  0185                     l1301:	
  3238                           	
  3239  0185                     l5039:	
  3240  0185  087B               	movf	(lcd_num@digit),w
  3241  0186  0236               	subwf	(lcd_num@i),w
  3242  0187  1C03               	skipc
  3243  0188  298A               	goto	u3941
  3244  0189  298B               	goto	u3940
  3245  018A                     u3941:
  3246  018A  2945               	goto	l5029
  3247  018B                     u3940:
  3248  018B  298C               	goto	l5041
  3249                           	
  3250  018C                     l1304:	
  3251                           	line	640
  3252                           	
  3253  018C                     l5041:	
  3254                           ;main.c: 638: }
  3255                           ;main.c: 640: lcd_putstr(&num[k-i]);
  3256  018C  1283               	bcf	status, 5	;RP0=0, select bank0
  3257  018D  1303               	bcf	status, 6	;RP1=0, select bank0
  3258  018E  0336               	decf	(lcd_num@i),w
  3259  018F  3AFF               	xorlw	0ffh
  3260  0190  0735               	addwf	(lcd_num@k),w
  3261  0191  3E24               	addlw	lcd_num@num&0ffh
  3262  0192  00F7               	movwf	(?_lcd_putstr)
  3263  0193  3000               	movlw	(0x0/2)
  3264  0194  00F8               	movwf	(?_lcd_putstr+1)
  3265  0195  120A  158A  265B   	fcall	_lcd_putstr
              120A  118A         
  3266                           	line	642
  3267                           	
  3268  019A                     l5043:	
  3269                           ;main.c: 642: for(j=0;j<k-i;j++)
  3270  019A  1283               	bcf	status, 5	;RP0=0, select bank0
  3271  019B  1303               	bcf	status, 6	;RP1=0, select bank0
  3272  019C  01B4               	clrf	(lcd_num@j)
  3273  019D  29AB               	goto	l5049
  3274                           	line	643
  3275                           	
  3276  019E                     l1306:	
  3277                           	
  3278  019E                     l5045:	
  3279                           ;main.c: 643: lcd_putchar(' ');
  3280  019E  3020               	movlw	(020h)
  3281  019F  120A  158A  237D   	fcall	_lcd_putchar
              120A  118A         
  3282                           	line	642
  3283                           	
  3284  01A4                     l5047:	
  3285  01A4  3001               	movlw	(01h)
  3286  01A5  1283               	bcf	status, 5	;RP0=0, select bank0
  3287  01A6  1303               	bcf	status, 6	;RP1=0, select bank0
  3288  01A7  00A0               	movwf	(??_lcd_num+0)+0
  3289  01A8  0820               	movf	(??_lcd_num+0)+0,w
  3290  01A9  07B4               	addwf	(lcd_num@j),f
  3291  01AA  29AB               	goto	l5049
  3292                           	
  3293  01AB                     l1305:	
  3294                           	
  3295  01AB                     l5049:	
  3296  01AB  0836               	movf	(lcd_num@i),w
  3297  01AC  00A0               	movwf	(??_lcd_num+0)+0
  3298  01AD  01A1               	clrf	(??_lcd_num+0)+0+1
  3299  01AE  09A0               	comf	(??_lcd_num+0)+0,f
  3300  01AF  09A1               	comf	(??_lcd_num+0)+1,f
  3301  01B0  0AA0               	incf	(??_lcd_num+0)+0,f
  3302  01B1  1903               	skipnz
  3303  01B2  0AA1               	incf	(??_lcd_num+0)+1,f
  3304  01B3  0835               	movf	(lcd_num@k),w
  3305  01B4  0720               	addwf	0+(??_lcd_num+0)+0,w
  3306  01B5  00A2               	movwf	(??_lcd_num+2)+0
  3307  01B6  0821               	movf	1+(??_lcd_num+0)+0,w
  3308  01B7  1803               	skipnc
  3309  01B8  0A21               	incf	1+(??_lcd_num+0)+0,w
  3310  01B9  00A3               	movwf	((??_lcd_num+2)+0)+1
  3311  01BA  0823               	movf	1+(??_lcd_num+2)+0,w
  3312  01BB  3A80               	xorlw	80h
  3313  01BC  3C80               	sublw	080h
  3314  01BD  1D03               	skipz
  3315  01BE  29C1               	goto	u3955
  3316  01BF  0822               	movf	0+(??_lcd_num+2)+0,w
  3317  01C0  0234               	subwf	(lcd_num@j),w
  3318  01C1                     u3955:
  3319                           
  3320  01C1  1C03               	skipc
  3321  01C2  29C4               	goto	u3951
  3322  01C3  29C5               	goto	u3950
  3323  01C4                     u3951:
  3324  01C4  299E               	goto	l5045
  3325  01C5                     u3950:
  3326  01C5  29C6               	goto	l1308
  3327                           	
  3328  01C6                     l1307:	
  3329                           	line	647
  3330                           ;main.c: 645: return(i);
  3331                           ;	Return value of _lcd_num is never used
  3332                           	
  3333  01C6                     l1308:	
  3334  01C6  0008               	return
  3335                           	opt stack 0
  3336                           GLOBAL	__end_of_lcd_num
  3337  01C7                     	__end_of_lcd_num:
  3338 ;; =============== function _lcd_num ends ============
  3339                           
  3340                           	signat	_lcd_num,8313
  3341                           	global	_LSA08_Init
  3342                           psect	text888,local,class=CODE,delta=2
  3343                           global __ptext888
  3344  0BF0                     __ptext888:
  3345                           
  3346 ;; *************** function _LSA08_Init *****************
  3347 ;; Defined at:
  3348 ;;		line 255 in file "../LSA08.h"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;		None
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;		None
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  1    wreg      unsigned char 
  3355 ;; Registers used:
  3356 ;;		wreg, status,2, status,0, pclath, cstack
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3362 ;;      Params:         0       0       0       0       0
  3363 ;;      Locals:         0       0       0       0       0
  3364 ;;      Temps:          0       0       0       0       0
  3365 ;;      Totals:         0       0       0       0       0
  3366 ;;Total ram usage:        0 bytes
  3367 ;; Hardware stack levels used:    1
  3368 ;; Hardware stack levels required when called:    4
  3369 ;; This function calls:
  3370 ;;		_UART_INIT
  3371 ;;		_LSA08_ClearJunction
  3372 ;;		_LSA08_UARTMode
  3373 ;; This function is called by:
  3374 ;;		_main
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           psect	text888
  3378                           	file	"../LSA08.h"
  3379                           	line	255
  3380                           	global	__size_of_LSA08_Init
  3381  0015                     	__size_of_LSA08_Init	equ	__end_of_LSA08_Init-_LSA08_Init
  3382                           	
  3383  0BF0                     _LSA08_Init:	
  3384                           	opt	stack 3
  3385                           ; Regs used in _LSA08_Init: [wreg+status,2+status,0+pclath+cstack]
  3386                           	line	257
  3387                           	
  3388  0BF0                     l5017:	
  3389                           ;LSA08.h: 257: UART_INIT();
  3390  0BF0  120A  158A  241C   	fcall	_UART_INIT
              120A  158A         
  3391                           	line	259
  3392                           	
  3393  0BF5                     l5019:	
  3394                           ;LSA08.h: 259: PORTCbits.RC0=1;
  3395  0BF5  1283               	bcf	status, 5	;RP0=0, select bank0
  3396  0BF6  1303               	bcf	status, 6	;RP1=0, select bank0
  3397  0BF7  1407               	bsf	(7),0	;volatile
  3398                           	line	261
  3399                           ;LSA08.h: 261: LSA08_ClearJunction();
  3400  0BF8  120A  158A  23B7   	fcall	_LSA08_ClearJunction
              120A  158A         
  3401                           	line	262
  3402                           ;LSA08.h: 262: return(LSA08_UARTMode(2));
  3403                           ;	Return value of _LSA08_Init is never used
  3404  0BFD  3002               	movlw	(02h)
  3405  0BFE  120A  158A  246C   	fcall	_LSA08_UARTMode
              120A  158A         
  3406  0C03  2C04               	goto	l1114
  3407                           	
  3408  0C04                     l5021:	
  3409                           	line	264
  3410                           	
  3411  0C04                     l1114:	
  3412  0C04  0008               	return
  3413                           	opt stack 0
  3414                           GLOBAL	__end_of_LSA08_Init
  3415  0C05                     	__end_of_LSA08_Init:
  3416 ;; =============== function _LSA08_Init ends ============
  3417                           
  3418                           	signat	_LSA08_Init,89
  3419                           	global	_line_follow
  3420                           psect	text889,local,class=CODE,delta=2
  3421                           global __ptext889
  3422  0585                     __ptext889:
  3423                           
  3424 ;; *************** function _line_follow *****************
  3425 ;; Defined at:
  3426 ;;		line 258 in file "../main.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;		None
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;  rightspeed      2   47[BANK0 ] short 
  3431 ;;  leftspeed       2   45[BANK0 ] short 
  3432 ;; Return value:  Size  Location     Type
  3433 ;;		None               void
  3434 ;; Registers used:
  3435 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3441 ;;      Params:         0       0       0       0       0
  3442 ;;      Locals:         0       4       0       0       0
  3443 ;;      Temps:          0       2       0       0       0
  3444 ;;      Totals:         0       6       0       0       0
  3445 ;;Total ram usage:        6 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; Hardware stack levels required when called:    3
  3448 ;; This function calls:
  3449 ;;		_LSA08_GetPosition
  3450 ;;		_PID_UPDATE
  3451 ;;		___awtoft
  3452 ;;		___ftmul
  3453 ;;		___ftadd
  3454 ;;		___fttol
  3455 ;;		_motor
  3456 ;; This function is called by:
  3457 ;;		_main
  3458 ;;		_jfolo
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           psect	text889
  3462                           	file	"../main.c"
  3463                           	line	258
  3464                           	global	__size_of_line_follow
  3465  0135                     	__size_of_line_follow	equ	__end_of_line_follow-_line_follow
  3466                           	
  3467  0585                     _line_follow:	
  3468                           	opt	stack 4
  3469                           ; Regs used in _line_follow: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3470                           	line	261
  3471                           	
  3472  0585                     l4993:	
  3473                           ;main.c: 259: signed short leftspeed, rightspeed;
  3474                           ;main.c: 261: pos=LSA08_GetPosition();
  3475  0585  120A  158A  24D5   	fcall	_LSA08_GetPosition
              120A  118A         
  3476  058A  1283               	bcf	status, 5	;RP0=0, select bank0
  3477  058B  1303               	bcf	status, 6	;RP1=0, select bank0
  3478  058C  00CB               	movwf	(??_line_follow+0)+0
  3479  058D  084B               	movf	(??_line_follow+0)+0,w
  3480  058E  00EB               	movwf	(_pos)
  3481                           	line	262
  3482                           	
  3483  058F                     l4995:	
  3484                           ;main.c: 262: PID_UPDATE(pos);
  3485  058F  086B               	movf	(_pos),w
  3486  0590  120A  118A  20B0   	fcall	_PID_UPDATE
              120A  118A         
  3487                           	line	265
  3488                           	
  3489  0595                     l4997:	
  3490                           ;main.c: 265: m_diff=(signed short) ((Kp*(float)proportional)+(Ki*(float)integral)+(Kd*(
                                 float)derivative));
  3491  0595  1283               	bcf	status, 5	;RP0=0, select bank0
  3492  0596  1303               	bcf	status, 6	;RP1=0, select bank0
  3493  0597  0865               	movf	(_proportional+1),w
  3494  0598  01AB               	clrf	(?___awtoft+1)
  3495  0599  07AB               	addwf	(?___awtoft+1)
  3496  059A  0864               	movf	(_proportional),w
  3497  059B  01AA               	clrf	(?___awtoft)
  3498  059C  07AA               	addwf	(?___awtoft)
  3499                           
  3500  059D  120A  118A  2007   	fcall	___awtoft
              120A  118A         
  3501  05A2  1283               	bcf	status, 5	;RP0=0, select bank0
  3502  05A3  1303               	bcf	status, 6	;RP1=0, select bank0
  3503  05A4  082A               	movf	(0+(?___awtoft)),w
  3504  05A5  00B1               	movwf	0+(?___ftmul)+03h
  3505  05A6  082B               	movf	(1+(?___awtoft)),w
  3506  05A7  00B2               	movwf	1+(?___ftmul)+03h
  3507  05A8  082C               	movf	(2+(?___awtoft)),w
  3508  05A9  00B3               	movwf	2+(?___ftmul)+03h
  3509  05AA  1683               	bsf	status, 5	;RP0=1, select bank1
  3510  05AB  1303               	bcf	status, 6	;RP1=0, select bank1
  3511  05AC  0830               	movf	(_Kp)^080h,w
  3512  05AD  1283               	bcf	status, 5	;RP0=0, select bank0
  3513  05AE  1303               	bcf	status, 6	;RP1=0, select bank0
  3514  05AF  00AE               	movwf	(?___ftmul)
  3515  05B0  1683               	bsf	status, 5	;RP0=1, select bank1
  3516  05B1  1303               	bcf	status, 6	;RP1=0, select bank1
  3517  05B2  0831               	movf	(_Kp+1)^080h,w
  3518  05B3  1283               	bcf	status, 5	;RP0=0, select bank0
  3519  05B4  1303               	bcf	status, 6	;RP1=0, select bank0
  3520  05B5  00AF               	movwf	(?___ftmul+1)
  3521  05B6  1683               	bsf	status, 5	;RP0=1, select bank1
  3522  05B7  1303               	bcf	status, 6	;RP1=0, select bank1
  3523  05B8  0832               	movf	(_Kp+2)^080h,w
  3524  05B9  1283               	bcf	status, 5	;RP0=0, select bank0
  3525  05BA  1303               	bcf	status, 6	;RP1=0, select bank0
  3526  05BB  00B0               	movwf	(?___ftmul+2)
  3527  05BC  120A  118A  2497   	fcall	___ftmul
              120A  118A         
  3528  05C1  1283               	bcf	status, 5	;RP0=0, select bank0
  3529  05C2  1303               	bcf	status, 6	;RP1=0, select bank0
  3530  05C3  082E               	movf	(0+(?___ftmul)),w
  3531  05C4  00C1               	movwf	0+(?___ftadd)+03h
  3532  05C5  082F               	movf	(1+(?___ftmul)),w
  3533  05C6  00C2               	movwf	1+(?___ftadd)+03h
  3534  05C7  0830               	movf	(2+(?___ftmul)),w
  3535  05C8  00C3               	movwf	2+(?___ftadd)+03h
  3536  05C9  0861               	movf	(_integral+1),w
  3537  05CA  01AB               	clrf	(?___awtoft+1)
  3538  05CB  07AB               	addwf	(?___awtoft+1)
  3539  05CC  0860               	movf	(_integral),w
  3540  05CD  01AA               	clrf	(?___awtoft)
  3541  05CE  07AA               	addwf	(?___awtoft)
  3542                           
  3543  05CF  120A  118A  2007   	fcall	___awtoft
              120A  118A         
  3544  05D4  1283               	bcf	status, 5	;RP0=0, select bank0
  3545  05D5  1303               	bcf	status, 6	;RP1=0, select bank0
  3546  05D6  082A               	movf	(0+(?___awtoft)),w
  3547  05D7  00B1               	movwf	0+(?___ftmul)+03h
  3548  05D8  082B               	movf	(1+(?___awtoft)),w
  3549  05D9  00B2               	movwf	1+(?___ftmul)+03h
  3550  05DA  082C               	movf	(2+(?___awtoft)),w
  3551  05DB  00B3               	movwf	2+(?___ftmul)+03h
  3552  05DC  1683               	bsf	status, 5	;RP0=1, select bank1
  3553  05DD  1303               	bcf	status, 6	;RP1=0, select bank1
  3554  05DE  082D               	movf	(_Ki)^080h,w
  3555  05DF  1283               	bcf	status, 5	;RP0=0, select bank0
  3556  05E0  1303               	bcf	status, 6	;RP1=0, select bank0
  3557  05E1  00AE               	movwf	(?___ftmul)
  3558  05E2  1683               	bsf	status, 5	;RP0=1, select bank1
  3559  05E3  1303               	bcf	status, 6	;RP1=0, select bank1
  3560  05E4  082E               	movf	(_Ki+1)^080h,w
  3561  05E5  1283               	bcf	status, 5	;RP0=0, select bank0
  3562  05E6  1303               	bcf	status, 6	;RP1=0, select bank0
  3563  05E7  00AF               	movwf	(?___ftmul+1)
  3564  05E8  1683               	bsf	status, 5	;RP0=1, select bank1
  3565  05E9  1303               	bcf	status, 6	;RP1=0, select bank1
  3566  05EA  082F               	movf	(_Ki+2)^080h,w
  3567  05EB  1283               	bcf	status, 5	;RP0=0, select bank0
  3568  05EC  1303               	bcf	status, 6	;RP1=0, select bank0
  3569  05ED  00B0               	movwf	(?___ftmul+2)
  3570  05EE  120A  118A  2497   	fcall	___ftmul
              120A  118A         
  3571  05F3  1283               	bcf	status, 5	;RP0=0, select bank0
  3572  05F4  1303               	bcf	status, 6	;RP1=0, select bank0
  3573  05F5  082E               	movf	(0+(?___ftmul)),w
  3574  05F6  00BE               	movwf	(?___ftadd)
  3575  05F7  082F               	movf	(1+(?___ftmul)),w
  3576  05F8  00BF               	movwf	(?___ftadd+1)
  3577  05F9  0830               	movf	(2+(?___ftmul)),w
  3578  05FA  00C0               	movwf	(?___ftadd+2)
  3579  05FB  120A  118A  26BA   	fcall	___ftadd
              120A  118A         
  3580  0600  1283               	bcf	status, 5	;RP0=0, select bank0
  3581  0601  1303               	bcf	status, 6	;RP1=0, select bank0
  3582  0602  083E               	movf	(0+(?___ftadd)),w
  3583  0603  00C1               	movwf	0+(?___ftadd)+03h
  3584  0604  083F               	movf	(1+(?___ftadd)),w
  3585  0605  00C2               	movwf	1+(?___ftadd)+03h
  3586  0606  0840               	movf	(2+(?___ftadd)),w
  3587  0607  00C3               	movwf	2+(?___ftadd)+03h
  3588  0608  1683               	bsf	status, 5	;RP0=1, select bank1
  3589  0609  1303               	bcf	status, 6	;RP1=0, select bank1
  3590  060A  0827               	movf	(_derivative+1)^080h,w
  3591  060B  1283               	bcf	status, 5	;RP0=0, select bank0
  3592  060C  1303               	bcf	status, 6	;RP1=0, select bank0
  3593  060D  01AB               	clrf	(?___awtoft+1)
  3594  060E  07AB               	addwf	(?___awtoft+1)
  3595  060F  1683               	bsf	status, 5	;RP0=1, select bank1
  3596  0610  1303               	bcf	status, 6	;RP1=0, select bank1
  3597  0611  0826               	movf	(_derivative)^080h,w
  3598  0612  1283               	bcf	status, 5	;RP0=0, select bank0
  3599  0613  1303               	bcf	status, 6	;RP1=0, select bank0
  3600  0614  01AA               	clrf	(?___awtoft)
  3601  0615  07AA               	addwf	(?___awtoft)
  3602                           
  3603  0616  120A  118A  2007   	fcall	___awtoft
              120A  118A         
  3604  061B  1283               	bcf	status, 5	;RP0=0, select bank0
  3605  061C  1303               	bcf	status, 6	;RP1=0, select bank0
  3606  061D  082A               	movf	(0+(?___awtoft)),w
  3607  061E  00B1               	movwf	0+(?___ftmul)+03h
  3608  061F  082B               	movf	(1+(?___awtoft)),w
  3609  0620  00B2               	movwf	1+(?___ftmul)+03h
  3610  0621  082C               	movf	(2+(?___awtoft)),w
  3611  0622  00B3               	movwf	2+(?___ftmul)+03h
  3612  0623  1683               	bsf	status, 5	;RP0=1, select bank1
  3613  0624  1303               	bcf	status, 6	;RP1=0, select bank1
  3614  0625  082A               	movf	(_Kd)^080h,w
  3615  0626  1283               	bcf	status, 5	;RP0=0, select bank0
  3616  0627  1303               	bcf	status, 6	;RP1=0, select bank0
  3617  0628  00AE               	movwf	(?___ftmul)
  3618  0629  1683               	bsf	status, 5	;RP0=1, select bank1
  3619  062A  1303               	bcf	status, 6	;RP1=0, select bank1
  3620  062B  082B               	movf	(_Kd+1)^080h,w
  3621  062C  1283               	bcf	status, 5	;RP0=0, select bank0
  3622  062D  1303               	bcf	status, 6	;RP1=0, select bank0
  3623  062E  00AF               	movwf	(?___ftmul+1)
  3624  062F  1683               	bsf	status, 5	;RP0=1, select bank1
  3625  0630  1303               	bcf	status, 6	;RP1=0, select bank1
  3626  0631  082C               	movf	(_Kd+2)^080h,w
  3627  0632  1283               	bcf	status, 5	;RP0=0, select bank0
  3628  0633  1303               	bcf	status, 6	;RP1=0, select bank0
  3629  0634  00B0               	movwf	(?___ftmul+2)
  3630  0635  120A  118A  2497   	fcall	___ftmul
              120A  118A         
  3631  063A  1283               	bcf	status, 5	;RP0=0, select bank0
  3632  063B  1303               	bcf	status, 6	;RP1=0, select bank0
  3633  063C  082E               	movf	(0+(?___ftmul)),w
  3634  063D  00BE               	movwf	(?___ftadd)
  3635  063E  082F               	movf	(1+(?___ftmul)),w
  3636  063F  00BF               	movwf	(?___ftadd+1)
  3637  0640  0830               	movf	(2+(?___ftmul)),w
  3638  0641  00C0               	movwf	(?___ftadd+2)
  3639  0642  120A  118A  26BA   	fcall	___ftadd
              120A  118A         
  3640  0647  1283               	bcf	status, 5	;RP0=0, select bank0
  3641  0648  1303               	bcf	status, 6	;RP1=0, select bank0
  3642  0649  083E               	movf	(0+(?___ftadd)),w
  3643  064A  00F8               	movwf	(?___fttol)
  3644  064B  083F               	movf	(1+(?___ftadd)),w
  3645  064C  00F9               	movwf	(?___fttol+1)
  3646  064D  0840               	movf	(2+(?___ftadd)),w
  3647  064E  00FA               	movwf	(?___fttol+2)
  3648  064F  120A  118A  2258   	fcall	___fttol
              120A  118A         
  3649  0654  0879               	movf	1+(((0+(?___fttol)))),w
  3650  0655  1283               	bcf	status, 5	;RP0=0, select bank0
  3651  0656  1303               	bcf	status, 6	;RP1=0, select bank0
  3652  0657  01E3               	clrf	(_m_diff+1)
  3653  0658  07E3               	addwf	(_m_diff+1)
  3654  0659  0878               	movf	0+(((0+(?___fttol)))),w
  3655  065A  01E2               	clrf	(_m_diff)
  3656  065B  07E2               	addwf	(_m_diff)
  3657                           
  3658                           	line	267
  3659                           	
  3660  065C                     l4999:	
  3661                           ;main.c: 267: leftspeed=motor_speed+m_diff;
  3662  065C  0862               	movf	(_m_diff),w
  3663  065D  076C               	addwf	(_motor_speed),w
  3664  065E  00CD               	movwf	(line_follow@leftspeed)
  3665  065F  0863               	movf	(_m_diff+1),w
  3666  0660  1803               	skipnc
  3667  0661  0A63               	incf	(_m_diff+1),w
  3668  0662  076D               	addwf	(_motor_speed+1),w
  3669  0663  00CE               	movwf	1+(line_follow@leftspeed)
  3670                           	line	268
  3671                           	
  3672  0664                     l5001:	
  3673                           ;main.c: 268: if(leftspeed>255) leftspeed=255;
  3674  0664  084E               	movf	(line_follow@leftspeed+1),w
  3675  0665  3A80               	xorlw	80h
  3676  0666  00FF               	movwf	btemp+1
  3677  0667  3081               	movlw	(high(0100h))^80h
  3678  0668  027F               	subwf	btemp+1,w
  3679  0669  1D03               	skipz
  3680  066A  2E6D               	goto	u3895
  3681  066B  3000               	movlw	low(0100h)
  3682  066C  024D               	subwf	(line_follow@leftspeed),w
  3683  066D                     u3895:
  3684                           
  3685  066D  1C03               	skipc
  3686  066E  2E70               	goto	u3891
  3687  066F  2E71               	goto	u3890
  3688  0670                     u3891:
  3689  0670  2E78               	goto	l1190
  3690  0671                     u3890:
  3691                           	
  3692  0671                     l5003:	
  3693  0671  30FF               	movlw	low(0FFh)
  3694  0672  1283               	bcf	status, 5	;RP0=0, select bank0
  3695  0673  1303               	bcf	status, 6	;RP1=0, select bank0
  3696  0674  00CD               	movwf	(line_follow@leftspeed)
  3697  0675  3000               	movlw	high(0FFh)
  3698  0676  00CE               	movwf	((line_follow@leftspeed))+1
  3699  0677  2E82               	goto	l5007
  3700                           	line	269
  3701                           	
  3702  0678                     l1190:	
  3703                           ;main.c: 269: else if(leftspeed<0) leftspeed=0;
  3704  0678  1283               	bcf	status, 5	;RP0=0, select bank0
  3705  0679  1303               	bcf	status, 6	;RP1=0, select bank0
  3706  067A  1FCE               	btfss	(line_follow@leftspeed+1),7
  3707  067B  2E7D               	goto	u3901
  3708  067C  2E7E               	goto	u3900
  3709  067D                     u3901:
  3710  067D  2E82               	goto	l5007
  3711  067E                     u3900:
  3712                           	
  3713  067E                     l5005:	
  3714  067E  01CD               	clrf	(line_follow@leftspeed)
  3715  067F  01CE               	clrf	(line_follow@leftspeed+1)
  3716  0680  2E82               	goto	l5007
  3717                           	
  3718  0681                     l1192:	
  3719  0681  2E82               	goto	l5007
  3720                           	line	271
  3721                           	
  3722  0682                     l1191:	
  3723                           	
  3724  0682                     l5007:	
  3725                           ;main.c: 271: rightspeed=motor_speed-m_diff;
  3726  0682  0962               	comf	(_m_diff),w
  3727  0683  00CB               	movwf	(??_line_follow+0)+0
  3728  0684  0963               	comf	(_m_diff+1),w
  3729  0685  00CC               	movwf	((??_line_follow+0)+0+1)
  3730  0686  0ACB               	incf	(??_line_follow+0)+0,f
  3731  0687  1903               	skipnz
  3732  0688  0ACC               	incf	((??_line_follow+0)+0+1),f
  3733  0689  086C               	movf	(_motor_speed),w
  3734  068A  074B               	addwf	0+(??_line_follow+0)+0,w
  3735  068B  00CF               	movwf	(line_follow@rightspeed)
  3736  068C  086D               	movf	(_motor_speed+1),w
  3737  068D  1803               	skipnc
  3738  068E  0A6D               	incf	(_motor_speed+1),w
  3739  068F  074C               	addwf	1+(??_line_follow+0)+0,w
  3740  0690  00D0               	movwf	1+(line_follow@rightspeed)
  3741                           	line	272
  3742                           	
  3743  0691                     l5009:	
  3744                           ;main.c: 272: if(rightspeed>255) rightspeed=255;
  3745  0691  0850               	movf	(line_follow@rightspeed+1),w
  3746  0692  3A80               	xorlw	80h
  3747  0693  00FF               	movwf	btemp+1
  3748  0694  3081               	movlw	(high(0100h))^80h
  3749  0695  027F               	subwf	btemp+1,w
  3750  0696  1D03               	skipz
  3751  0697  2E9A               	goto	u3915
  3752  0698  3000               	movlw	low(0100h)
  3753  0699  024F               	subwf	(line_follow@rightspeed),w
  3754  069A                     u3915:
  3755                           
  3756  069A  1C03               	skipc
  3757  069B  2E9D               	goto	u3911
  3758  069C  2E9E               	goto	u3910
  3759  069D                     u3911:
  3760  069D  2EA5               	goto	l1193
  3761  069E                     u3910:
  3762                           	
  3763  069E                     l5011:	
  3764  069E  30FF               	movlw	low(0FFh)
  3765  069F  1283               	bcf	status, 5	;RP0=0, select bank0
  3766  06A0  1303               	bcf	status, 6	;RP1=0, select bank0
  3767  06A1  00CF               	movwf	(line_follow@rightspeed)
  3768  06A2  3000               	movlw	high(0FFh)
  3769  06A3  00D0               	movwf	((line_follow@rightspeed))+1
  3770  06A4  2EAF               	goto	l5015
  3771                           	line	273
  3772                           	
  3773  06A5                     l1193:	
  3774                           ;main.c: 273: else if(rightspeed<0) rightspeed=0;
  3775  06A5  1283               	bcf	status, 5	;RP0=0, select bank0
  3776  06A6  1303               	bcf	status, 6	;RP1=0, select bank0
  3777  06A7  1FD0               	btfss	(line_follow@rightspeed+1),7
  3778  06A8  2EAA               	goto	u3921
  3779  06A9  2EAB               	goto	u3920
  3780  06AA                     u3921:
  3781  06AA  2EAF               	goto	l5015
  3782  06AB                     u3920:
  3783                           	
  3784  06AB                     l5013:	
  3785  06AB  01CF               	clrf	(line_follow@rightspeed)
  3786  06AC  01D0               	clrf	(line_follow@rightspeed+1)
  3787  06AD  2EAF               	goto	l5015
  3788                           	
  3789  06AE                     l1195:	
  3790  06AE  2EAF               	goto	l5015
  3791                           	line	275
  3792                           	
  3793  06AF                     l1194:	
  3794                           	
  3795  06AF                     l5015:	
  3796                           ;main.c: 275: motor((unsigned char)leftspeed, (unsigned char)rightspeed);
  3797  06AF  084F               	movf	(line_follow@rightspeed),w
  3798  06B0  00CB               	movwf	(??_line_follow+0)+0
  3799  06B1  084B               	movf	(??_line_follow+0)+0,w
  3800  06B2  00F1               	movwf	(?_motor)
  3801  06B3  084D               	movf	(line_follow@leftspeed),w
  3802  06B4  120A  158A  2397   	fcall	_motor
              120A  118A         
  3803                           	line	276
  3804                           	
  3805  06B9                     l1196:	
  3806  06B9  0008               	return
  3807                           	opt stack 0
  3808                           GLOBAL	__end_of_line_follow
  3809  06BA                     	__end_of_line_follow:
  3810 ;; =============== function _line_follow ends ============
  3811                           
  3812                           	signat	_line_follow,88
  3813                           	global	_lcd_putstr
  3814                           psect	text890,local,class=CODE,delta=2
  3815                           global __ptext890
  3816  0E5B                     __ptext890:
  3817                           
  3818 ;; *************** function _lcd_putstr *****************
  3819 ;; Defined at:
  3820 ;;		line 581 in file "../main.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;  csz_string      2    7[COMMON] PTR const unsigned char 
  3823 ;;		 -> lcd_num@num(16), STR_11(9), STR_10(7), STR_9(9), 
  3824 ;;		 -> STR_8(9), STR_7(7), STR_6(9), STR_5(7), 
  3825 ;;		 -> STR_4(15), STR_3(12), STR_2(5), STR_1(6), 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;		None
  3828 ;; Return value:  Size  Location     Type
  3829 ;;		None               void
  3830 ;; Registers used:
  3831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3837 ;;      Params:         2       0       0       0       0
  3838 ;;      Locals:         0       0       0       0       0
  3839 ;;      Temps:          0       0       0       0       0
  3840 ;;      Totals:         2       0       0       0       0
  3841 ;;Total ram usage:        2 bytes
  3842 ;; Hardware stack levels used:    1
  3843 ;; Hardware stack levels required when called:    3
  3844 ;; This function calls:
  3845 ;;		_lcd_2ndline
  3846 ;;		_lcd_putchar
  3847 ;; This function is called by:
  3848 ;;		_main
  3849 ;;		_junction_follow
  3850 ;;		_PID_MENU
  3851 ;;		_lcd_num
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           psect	text890
  3855                           	file	"../main.c"
  3856                           	line	581
  3857                           	global	__size_of_lcd_putstr
  3858  0050                     	__size_of_lcd_putstr	equ	__end_of_lcd_putstr-_lcd_putstr
  3859                           	
  3860  0E5B                     _lcd_putstr:	
  3861                           	opt	stack 1
  3862                           ; Regs used in _lcd_putstr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3863                           	line	583
  3864                           	
  3865  0E5B                     l4979:	
  3866                           ;main.c: 583: while (*csz_string != '\0') {
  3867  0E5B  2E99               	goto	l4991
  3868                           	
  3869  0E5C                     l1280:	
  3870                           	line	586
  3871                           	
  3872  0E5C                     l4981:	
  3873                           ;main.c: 586: if (*csz_string == '\n' || *csz_string == '\r') {
  3874  0E5C  0878               	movf	(lcd_putstr@csz_string+1),w
  3875  0E5D  1283               	bcf	status, 5	;RP0=0, select bank0
  3876  0E5E  1303               	bcf	status, 6	;RP1=0, select bank0
  3877  0E5F  00FF               	movwf	btemp+1
  3878  0E60  0877               	movf	(lcd_putstr@csz_string),w
  3879  0E61  0084               	movwf	fsr0
  3880  0E62  120A  158A  2000   	fcall	stringtab
              120A  158A         
  3881  0E67  3A0A               	xorlw	0Ah
  3882  0E68  1903               	skipnz
  3883  0E69  2E6B               	goto	u3861
  3884  0E6A  2E6C               	goto	u3860
  3885  0E6B                     u3861:
  3886  0E6B  2E7B               	goto	l4985
  3887  0E6C                     u3860:
  3888                           	
  3889  0E6C                     l4983:	
  3890  0E6C  0878               	movf	(lcd_putstr@csz_string+1),w
  3891  0E6D  00FF               	movwf	btemp+1
  3892  0E6E  0877               	movf	(lcd_putstr@csz_string),w
  3893  0E6F  0084               	movwf	fsr0
  3894  0E70  120A  158A  2000   	fcall	stringtab
              120A  158A         
  3895  0E75  3A0D               	xorlw	0Dh
  3896  0E76  1D03               	skipz
  3897  0E77  2E79               	goto	u3871
  3898  0E78  2E7A               	goto	u3870
  3899  0E79                     u3871:
  3900  0E79  2E81               	goto	l4987
  3901  0E7A                     u3870:
  3902  0E7A  2E7B               	goto	l4985
  3903                           	
  3904  0E7B                     l1283:	
  3905                           	line	587
  3906                           	
  3907  0E7B                     l4985:	
  3908                           ;main.c: 587: lcd_2ndline();
  3909  0E7B  120A  158A  235A   	fcall	_lcd_2ndline
              120A  158A         
  3910                           	line	588
  3911                           ;main.c: 588: }
  3912  0E80  2E92               	goto	l4989
  3913                           	line	591
  3914                           	
  3915  0E81                     l1281:	
  3916                           	line	592
  3917                           	
  3918  0E81                     l4987:	
  3919                           ;main.c: 591: else {
  3920                           ;main.c: 592: lcd_putchar(*csz_string);
  3921  0E81  0878               	movf	(lcd_putstr@csz_string+1),w
  3922  0E82  1283               	bcf	status, 5	;RP0=0, select bank0
  3923  0E83  1303               	bcf	status, 6	;RP1=0, select bank0
  3924  0E84  00FF               	movwf	btemp+1
  3925  0E85  0877               	movf	(lcd_putstr@csz_string),w
  3926  0E86  0084               	movwf	fsr0
  3927  0E87  120A  158A  2000   	fcall	stringtab
              120A  158A         
  3928  0E8C  120A  158A  237D   	fcall	_lcd_putchar
              120A  158A         
  3929  0E91  2E92               	goto	l4989
  3930                           	line	593
  3931                           	
  3932  0E92                     l1284:	
  3933                           	line	596
  3934                           	
  3935  0E92                     l4989:	
  3936                           ;main.c: 593: }
  3937                           ;main.c: 596: csz_string++;
  3938  0E92  3001               	movlw	low(01h)
  3939  0E93  07F7               	addwf	(lcd_putstr@csz_string),f
  3940  0E94  1803               	skipnc
  3941  0E95  0AF8               	incf	(lcd_putstr@csz_string+1),f
  3942  0E96  3000               	movlw	high(01h)
  3943  0E97  07F8               	addwf	(lcd_putstr@csz_string+1),f
  3944  0E98  2E99               	goto	l4991
  3945                           	line	597
  3946                           	
  3947  0E99                     l1279:	
  3948                           	line	583
  3949                           	
  3950  0E99                     l4991:	
  3951  0E99  0878               	movf	(lcd_putstr@csz_string+1),w
  3952  0E9A  1283               	bcf	status, 5	;RP0=0, select bank0
  3953  0E9B  1303               	bcf	status, 6	;RP1=0, select bank0
  3954  0E9C  00FF               	movwf	btemp+1
  3955  0E9D  0877               	movf	(lcd_putstr@csz_string),w
  3956  0E9E  0084               	movwf	fsr0
  3957  0E9F  120A  158A  2000   	fcall	stringtab
              120A  158A         
  3958  0EA4  3800               	iorlw	0
  3959  0EA5  1D03               	skipz
  3960  0EA6  2EA8               	goto	u3881
  3961  0EA7  2EA9               	goto	u3880
  3962  0EA8                     u3881:
  3963  0EA8  2E5C               	goto	l4981
  3964  0EA9                     u3880:
  3965  0EA9  2EAA               	goto	l1286
  3966                           	
  3967  0EAA                     l1285:	
  3968                           	line	598
  3969                           	
  3970  0EAA                     l1286:	
  3971  0EAA  0008               	return
  3972                           	opt stack 0
  3973                           GLOBAL	__end_of_lcd_putstr
  3974  0EAB                     	__end_of_lcd_putstr:
  3975 ;; =============== function _lcd_putstr ends ============
  3976                           
  3977                           	signat	_lcd_putstr,4216
  3978                           	global	_lcd_init
  3979                           psect	text891,local,class=CODE,delta=2
  3980                           global __ptext891
  3981  0D2A                     __ptext891:
  3982                           
  3983 ;; *************** function _lcd_init *****************
  3984 ;; Defined at:
  3985 ;;		line 525 in file "../main.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;		None
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;		None
  3990 ;; Return value:  Size  Location     Type
  3991 ;;		None               void
  3992 ;; Registers used:
  3993 ;;		wreg, status,2, status,0, pclath, cstack
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3999 ;;      Params:         0       0       0       0       0
  4000 ;;      Locals:         0       0       0       0       0
  4001 ;;      Temps:          2       0       0       0       0
  4002 ;;      Totals:         2       0       0       0       0
  4003 ;;Total ram usage:        2 bytes
  4004 ;; Hardware stack levels used:    1
  4005 ;; Hardware stack levels required when called:    3
  4006 ;; This function calls:
  4007 ;;		_set_lcd_e
  4008 ;;		_send_lcd_data
  4009 ;;		_lcd_clr
  4010 ;; This function is called by:
  4011 ;;		_main
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           psect	text891
  4015                           	file	"../main.c"
  4016                           	line	525
  4017                           	global	__size_of_lcd_init
  4018  0033                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  4019                           	
  4020  0D2A                     _lcd_init:	
  4021                           	opt	stack 4
  4022                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4023                           	line	528
  4024                           	
  4025  0D2A                     l4967:	
  4026                           ;main.c: 528: set_lcd_e(1);
  4027  0D2A  3001               	movlw	(01h)
  4028  0D2B  120A  158A  2365   	fcall	_set_lcd_e
              120A  158A         
  4029                           	line	529
  4030                           	
  4031  0D30                     l4969:	
  4032                           ;main.c: 529: _delay((unsigned long)((15)*(20000000/4000.0)));
  4033                           	opt asmopt_off
  4034  0D30  3062               movlw	98
  4035  0D31  00F6               movwf	((??_lcd_init+0)+0+1),f
  4036  0D32  3065               	movlw	101
  4037  0D33  00F5               movwf	((??_lcd_init+0)+0),f
  4038  0D34                     u4237:
  4039  0D34  0BF5               	decfsz	((??_lcd_init+0)+0),f
  4040  0D35  2D34               	goto	u4237
  4041  0D36  0BF6               	decfsz	((??_lcd_init+0)+0+1),f
  4042  0D37  2D34               	goto	u4237
  4043  0D38  2D39               	nop2
  4044                           opt asmopt_on
  4045                           
  4046                           	line	534
  4047                           	
  4048  0D39                     l4971:	
  4049                           ;main.c: 534: send_lcd_data(0, 0b00111000);
  4050  0D39  3038               	movlw	(038h)
  4051  0D3A  00F5               	movwf	(??_lcd_init+0)+0
  4052  0D3B  0875               	movf	(??_lcd_init+0)+0,w
  4053  0D3C  00F1               	movwf	(?_send_lcd_data)
  4054  0D3D  3000               	movlw	(0)
  4055  0D3E  120A  158A  24FF   	fcall	_send_lcd_data
              120A  158A         
  4056                           	line	537
  4057                           	
  4058  0D43                     l4973:	
  4059                           ;main.c: 537: send_lcd_data(0, 0b00000110);
  4060  0D43  3006               	movlw	(06h)
  4061  0D44  00F5               	movwf	(??_lcd_init+0)+0
  4062  0D45  0875               	movf	(??_lcd_init+0)+0,w
  4063  0D46  00F1               	movwf	(?_send_lcd_data)
  4064  0D47  3000               	movlw	(0)
  4065  0D48  120A  158A  24FF   	fcall	_send_lcd_data
              120A  158A         
  4066                           	line	540
  4067                           	
  4068  0D4D                     l4975:	
  4069                           ;main.c: 540: send_lcd_data(0, 0b00001100);
  4070  0D4D  300C               	movlw	(0Ch)
  4071  0D4E  00F5               	movwf	(??_lcd_init+0)+0
  4072  0D4F  0875               	movf	(??_lcd_init+0)+0,w
  4073  0D50  00F1               	movwf	(?_send_lcd_data)
  4074  0D51  3000               	movlw	(0)
  4075  0D52  120A  158A  24FF   	fcall	_send_lcd_data
              120A  158A         
  4076                           	line	543
  4077                           	
  4078  0D57                     l4977:	
  4079                           ;main.c: 543: lcd_clr();
  4080  0D57  120A  158A  2350   	fcall	_lcd_clr
              120A  158A         
  4081                           	line	544
  4082                           	
  4083  0D5C                     l1259:	
  4084  0D5C  0008               	return
  4085                           	opt stack 0
  4086                           GLOBAL	__end_of_lcd_init
  4087  0D5D                     	__end_of_lcd_init:
  4088 ;; =============== function _lcd_init ends ============
  4089                           
  4090                           	signat	_lcd_init,88
  4091                           	global	_LSA08_Calibrate
  4092                           psect	text892,local,class=CODE,delta=2
  4093                           global __ptext892
  4094  0BCA                     __ptext892:
  4095                           
  4096 ;; *************** function _LSA08_Calibrate *****************
  4097 ;; Defined at:
  4098 ;;		line 339 in file "../LSA08.h"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;		None
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;		None
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  1    wreg      unsigned char 
  4105 ;; Registers used:
  4106 ;;		wreg, status,2, status,0, pclath, cstack
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4112 ;;      Params:         0       0       0       0       0
  4113 ;;      Locals:         0       0       0       0       0
  4114 ;;      Temps:          0       2       0       0       0
  4115 ;;      Totals:         0       2       0       0       0
  4116 ;;Total ram usage:        2 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; Hardware stack levels required when called:    3
  4119 ;; This function calls:
  4120 ;;		_SEND_PACKET
  4121 ;; This function is called by:
  4122 ;;		_Calibrate
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           psect	text892
  4126                           	file	"../LSA08.h"
  4127                           	line	339
  4128                           	global	__size_of_LSA08_Calibrate
  4129  0013                     	__size_of_LSA08_Calibrate	equ	__end_of_LSA08_Calibrate-_LSA08_Calibrate
  4130                           	
  4131  0BCA                     _LSA08_Calibrate:	
  4132                           	opt	stack 2
  4133                           ; Regs used in _LSA08_Calibrate: [wreg+status,2+status,0+pclath+cstack]
  4134                           	line	341
  4135                           	
  4136  0BCA                     l4963:	
  4137                           ;LSA08.h: 341: return(SEND_PACKET(LSA08_ADD, 'C', 0,2));
  4138                           ;	Return value of _LSA08_Calibrate is never used
  4139  0BCA  3043               	movlw	(043h)
  4140  0BCB  1283               	bcf	status, 5	;RP0=0, select bank0
  4141  0BCC  1303               	bcf	status, 6	;RP1=0, select bank0
  4142  0BCD  00A0               	movwf	(??_LSA08_Calibrate+0)+0
  4143  0BCE  0820               	movf	(??_LSA08_Calibrate+0)+0,w
  4144  0BCF  00F8               	movwf	(?_SEND_PACKET)
  4145  0BD0  01F9               	clrf	0+(?_SEND_PACKET)+01h
  4146  0BD1  3002               	movlw	(02h)
  4147  0BD2  00A1               	movwf	(??_LSA08_Calibrate+1)+0
  4148  0BD3  0821               	movf	(??_LSA08_Calibrate+1)+0,w
  4149  0BD4  00FA               	movwf	0+(?_SEND_PACKET)+02h
  4150  0BD5  086E               	movf	(_LSA08_ADD),w
  4151  0BD6  120A  158A  248B   	fcall	_SEND_PACKET
              120A  158A         
  4152  0BDB  2BDC               	goto	l1129
  4153                           	
  4154  0BDC                     l4965:	
  4155                           	line	342
  4156                           	
  4157  0BDC                     l1129:	
  4158  0BDC  0008               	return
  4159                           	opt stack 0
  4160                           GLOBAL	__end_of_LSA08_Calibrate
  4161  0BDD                     	__end_of_LSA08_Calibrate:
  4162 ;; =============== function _LSA08_Calibrate ends ============
  4163                           
  4164                           	signat	_LSA08_Calibrate,89
  4165                           	global	_LSA08_GetJunction
  4166                           psect	text893,local,class=CODE,delta=2
  4167                           global __ptext893
  4168  0C05                     __ptext893:
  4169                           
  4170 ;; *************** function _LSA08_GetJunction *****************
  4171 ;; Defined at:
  4172 ;;		line 326 in file "../LSA08.h"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;		None
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;		None
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  1    wreg      unsigned char 
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, status,0, pclath, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4186 ;;      Params:         0       0       0       0       0
  4187 ;;      Locals:         0       0       0       0       0
  4188 ;;      Temps:          1       0       0       0       0
  4189 ;;      Totals:         1       0       0       0       0
  4190 ;;Total ram usage:        1 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; Hardware stack levels required when called:    3
  4193 ;; This function calls:
  4194 ;;		_SEND_PACKET
  4195 ;; This function is called by:
  4196 ;;		_jfolo
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           psect	text893
  4200                           	file	"../LSA08.h"
  4201                           	line	326
  4202                           	global	__size_of_LSA08_GetJunction
  4203  0017                     	__size_of_LSA08_GetJunction	equ	__end_of_LSA08_GetJunction-_LSA08_GetJunction
  4204                           	
  4205  0C05                     _LSA08_GetJunction:	
  4206                           	opt	stack 2
  4207                           ; Regs used in _LSA08_GetJunction: [wreg+status,2+status,0+pclath+cstack]
  4208                           	line	328
  4209                           	
  4210  0C05                     l4957:	
  4211                           ;LSA08.h: 328: SEND_PACKET(LSA08_ADD, 'X', 1,1);
  4212  0C05  3058               	movlw	(058h)
  4213  0C06  00FD               	movwf	(??_LSA08_GetJunction+0)+0
  4214  0C07  087D               	movf	(??_LSA08_GetJunction+0)+0,w
  4215  0C08  00F8               	movwf	(?_SEND_PACKET)
  4216  0C09  01F9               	clrf	0+(?_SEND_PACKET)+01h
  4217  0C0A  1403               	bsf	status,0
  4218  0C0B  0DF9               	rlf	0+(?_SEND_PACKET)+01h,f
  4219  0C0C  01FA               	clrf	0+(?_SEND_PACKET)+02h
  4220  0C0D  1403               	bsf	status,0
  4221  0C0E  0DFA               	rlf	0+(?_SEND_PACKET)+02h,f
  4222  0C0F  1283               	bcf	status, 5	;RP0=0, select bank0
  4223  0C10  1303               	bcf	status, 6	;RP1=0, select bank0
  4224  0C11  086E               	movf	(_LSA08_ADD),w
  4225  0C12  120A  158A  248B   	fcall	_SEND_PACKET
              120A  158A         
  4226                           	line	329
  4227                           	
  4228  0C17                     l4959:	
  4229                           ;LSA08.h: 329: return(rec[0]);
  4230  0C17  1283               	bcf	status, 5	;RP0=0, select bank0
  4231  0C18  1303               	bcf	status, 6	;RP1=0, select bank0
  4232  0C19  0866               	movf	(_rec),w
  4233  0C1A  2C1B               	goto	l1123
  4234                           	
  4235  0C1B                     l4961:	
  4236                           	line	331
  4237                           	
  4238  0C1B                     l1123:	
  4239  0C1B  0008               	return
  4240                           	opt stack 0
  4241                           GLOBAL	__end_of_LSA08_GetJunction
  4242  0C1C                     	__end_of_LSA08_GetJunction:
  4243 ;; =============== function _LSA08_GetJunction ends ============
  4244                           
  4245                           	signat	_LSA08_GetJunction,89
  4246                           	global	_LSA08_UARTMode
  4247                           psect	text894,local,class=CODE,delta=2
  4248                           global __ptext894
  4249  0C6C                     __ptext894:
  4250                           
  4251 ;; *************** function _LSA08_UARTMode *****************
  4252 ;; Defined at:
  4253 ;;		line 362 in file "../LSA08.h"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  mode            1    wreg     unsigned char 
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;  mode            1   13[COMMON] unsigned char 
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  1    wreg      unsigned char 
  4260 ;; Registers used:
  4261 ;;		wreg, status,2, status,0, pclath, cstack
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4267 ;;      Params:         0       0       0       0       0
  4268 ;;      Locals:         1       0       0       0       0
  4269 ;;      Temps:          0       3       0       0       0
  4270 ;;      Totals:         1       3       0       0       0
  4271 ;;Total ram usage:        4 bytes
  4272 ;; Hardware stack levels used:    1
  4273 ;; Hardware stack levels required when called:    3
  4274 ;; This function calls:
  4275 ;;		_SEND_PACKET
  4276 ;; This function is called by:
  4277 ;;		_LSA08_Init
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           psect	text894
  4281                           	file	"../LSA08.h"
  4282                           	line	362
  4283                           	global	__size_of_LSA08_UARTMode
  4284  001F                     	__size_of_LSA08_UARTMode	equ	__end_of_LSA08_UARTMode-_LSA08_UARTMode
  4285                           	
  4286  0C6C                     _LSA08_UARTMode:	
  4287                           	opt	stack 3
  4288                           ; Regs used in _LSA08_UARTMode: [wreg+status,2+status,0+pclath+cstack]
  4289                           ;LSA08_UARTMode@mode stored from wreg
  4290                           	line	364
  4291  0C6C  00FD               	movwf	(LSA08_UARTMode@mode)
  4292                           	
  4293  0C6D                     l4949:	
  4294                           ;LSA08.h: 364: if(mode>3) mode=0;
  4295  0C6D  3004               	movlw	(04h)
  4296  0C6E  027D               	subwf	(LSA08_UARTMode@mode),w
  4297  0C6F  1C03               	skipc
  4298  0C70  2C72               	goto	u3851
  4299  0C71  2C73               	goto	u3850
  4300  0C72                     u3851:
  4301  0C72  2C75               	goto	l4953
  4302  0C73                     u3850:
  4303                           	
  4304  0C73                     l4951:	
  4305  0C73  01FD               	clrf	(LSA08_UARTMode@mode)
  4306  0C74  2C75               	goto	l4953
  4307                           	
  4308  0C75                     l1144:	
  4309                           	line	365
  4310                           	
  4311  0C75                     l4953:	
  4312                           ;LSA08.h: 365: return(SEND_PACKET(LSA08_ADD, 'D', mode,2));
  4313  0C75  3044               	movlw	(044h)
  4314  0C76  1283               	bcf	status, 5	;RP0=0, select bank0
  4315  0C77  1303               	bcf	status, 6	;RP1=0, select bank0
  4316  0C78  00A0               	movwf	(??_LSA08_UARTMode+0)+0
  4317  0C79  0820               	movf	(??_LSA08_UARTMode+0)+0,w
  4318  0C7A  00F8               	movwf	(?_SEND_PACKET)
  4319  0C7B  087D               	movf	(LSA08_UARTMode@mode),w
  4320  0C7C  00A1               	movwf	(??_LSA08_UARTMode+1)+0
  4321  0C7D  0821               	movf	(??_LSA08_UARTMode+1)+0,w
  4322  0C7E  00F9               	movwf	0+(?_SEND_PACKET)+01h
  4323  0C7F  3002               	movlw	(02h)
  4324  0C80  00A2               	movwf	(??_LSA08_UARTMode+2)+0
  4325  0C81  0822               	movf	(??_LSA08_UARTMode+2)+0,w
  4326  0C82  00FA               	movwf	0+(?_SEND_PACKET)+02h
  4327  0C83  086E               	movf	(_LSA08_ADD),w
  4328  0C84  120A  158A  248B   	fcall	_SEND_PACKET
              120A  158A         
  4329  0C89  2C8A               	goto	l1145
  4330                           	
  4331  0C8A                     l4955:	
  4332                           	line	366
  4333                           	
  4334  0C8A                     l1145:	
  4335  0C8A  0008               	return
  4336                           	opt stack 0
  4337                           GLOBAL	__end_of_LSA08_UARTMode
  4338  0C8B                     	__end_of_LSA08_UARTMode:
  4339 ;; =============== function _LSA08_UARTMode ends ============
  4340                           
  4341                           	signat	_LSA08_UARTMode,4217
  4342                           	global	_LSA08_ClearJunction
  4343                           psect	text895,local,class=CODE,delta=2
  4344                           global __ptext895
  4345  0BB7                     __ptext895:
  4346                           
  4347 ;; *************** function _LSA08_ClearJunction *****************
  4348 ;; Defined at:
  4349 ;;		line 333 in file "../LSA08.h"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;		None
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;		None
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      unsigned char 
  4356 ;; Registers used:
  4357 ;;		wreg, status,2, status,0, pclath, cstack
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4363 ;;      Params:         0       0       0       0       0
  4364 ;;      Locals:         0       0       0       0       0
  4365 ;;      Temps:          0       2       0       0       0
  4366 ;;      Totals:         0       2       0       0       0
  4367 ;;Total ram usage:        2 bytes
  4368 ;; Hardware stack levels used:    1
  4369 ;; Hardware stack levels required when called:    3
  4370 ;; This function calls:
  4371 ;;		_SEND_PACKET
  4372 ;; This function is called by:
  4373 ;;		_LSA08_Init
  4374 ;;		_junction_follow
  4375 ;; This function uses a non-reentrant model
  4376 ;;
  4377                           psect	text895
  4378                           	file	"../LSA08.h"
  4379                           	line	333
  4380                           	global	__size_of_LSA08_ClearJunction
  4381  0013                     	__size_of_LSA08_ClearJunction	equ	__end_of_LSA08_ClearJunction-_LSA08_ClearJunction
  4382                           	
  4383  0BB7                     _LSA08_ClearJunction:	
  4384                           	opt	stack 3
  4385                           ; Regs used in _LSA08_ClearJunction: [wreg+status,2+status,0+pclath+cstack]
  4386                           	line	335
  4387                           	
  4388  0BB7                     l4945:	
  4389                           ;LSA08.h: 335: return(SEND_PACKET(LSA08_ADD, 'X', 0,2));
  4390  0BB7  3058               	movlw	(058h)
  4391  0BB8  1283               	bcf	status, 5	;RP0=0, select bank0
  4392  0BB9  1303               	bcf	status, 6	;RP1=0, select bank0
  4393  0BBA  00A0               	movwf	(??_LSA08_ClearJunction+0)+0
  4394  0BBB  0820               	movf	(??_LSA08_ClearJunction+0)+0,w
  4395  0BBC  00F8               	movwf	(?_SEND_PACKET)
  4396  0BBD  01F9               	clrf	0+(?_SEND_PACKET)+01h
  4397  0BBE  3002               	movlw	(02h)
  4398  0BBF  00A1               	movwf	(??_LSA08_ClearJunction+1)+0
  4399  0BC0  0821               	movf	(??_LSA08_ClearJunction+1)+0,w
  4400  0BC1  00FA               	movwf	0+(?_SEND_PACKET)+02h
  4401  0BC2  086E               	movf	(_LSA08_ADD),w
  4402  0BC3  120A  158A  248B   	fcall	_SEND_PACKET
              120A  158A         
  4403  0BC8  2BC9               	goto	l1126
  4404                           	
  4405  0BC9                     l4947:	
  4406                           	line	337
  4407                           	
  4408  0BC9                     l1126:	
  4409  0BC9  0008               	return
  4410                           	opt stack 0
  4411                           GLOBAL	__end_of_LSA08_ClearJunction
  4412  0BCA                     	__end_of_LSA08_ClearJunction:
  4413 ;; =============== function _LSA08_ClearJunction ends ============
  4414                           
  4415                           	signat	_LSA08_ClearJunction,89
  4416                           	global	_lcd_2ndline
  4417                           psect	text896,local,class=CODE,delta=2
  4418                           global __ptext896
  4419  0B5A                     __ptext896:
  4420                           
  4421 ;; *************** function _lcd_2ndline *****************
  4422 ;; Defined at:
  4423 ;;		line 557 in file "../main.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;		None
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;		None
  4428 ;; Return value:  Size  Location     Type
  4429 ;;		None               void
  4430 ;; Registers used:
  4431 ;;		wreg, status,2, status,0, pclath, cstack
  4432 ;; Tracked objects:
  4433 ;;		On entry : 0/0
  4434 ;;		On exit  : 0/0
  4435 ;;		Unchanged: 0/0
  4436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4437 ;;      Params:         0       0       0       0       0
  4438 ;;      Locals:         0       0       0       0       0
  4439 ;;      Temps:          1       0       0       0       0
  4440 ;;      Totals:         1       0       0       0       0
  4441 ;;Total ram usage:        1 bytes
  4442 ;; Hardware stack levels used:    1
  4443 ;; Hardware stack levels required when called:    2
  4444 ;; This function calls:
  4445 ;;		_send_lcd_data
  4446 ;; This function is called by:
  4447 ;;		_lcd_putstr
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           psect	text896
  4451                           	file	"../main.c"
  4452                           	line	557
  4453                           	global	__size_of_lcd_2ndline
  4454  000B                     	__size_of_lcd_2ndline	equ	__end_of_lcd_2ndline-_lcd_2ndline
  4455                           	
  4456  0B5A                     _lcd_2ndline:	
  4457                           	opt	stack 1
  4458                           ; Regs used in _lcd_2ndline: [wreg+status,2+status,0+pclath+cstack]
  4459                           	line	559
  4460                           	
  4461  0B5A                     l4943:	
  4462                           ;main.c: 559: send_lcd_data(0, 0b11000000);
  4463  0B5A  30C0               	movlw	(0C0h)
  4464  0B5B  00F5               	movwf	(??_lcd_2ndline+0)+0
  4465  0B5C  0875               	movf	(??_lcd_2ndline+0)+0,w
  4466  0B5D  00F1               	movwf	(?_send_lcd_data)
  4467  0B5E  3000               	movlw	(0)
  4468  0B5F  120A  158A  24FF   	fcall	_send_lcd_data
              120A  158A         
  4469                           	line	560
  4470                           	
  4471  0B64                     l1268:	
  4472  0B64  0008               	return
  4473                           	opt stack 0
  4474                           GLOBAL	__end_of_lcd_2ndline
  4475  0B65                     	__end_of_lcd_2ndline:
  4476 ;; =============== function _lcd_2ndline ends ============
  4477                           
  4478                           	signat	_lcd_2ndline,88
  4479                           	global	_lcd_putchar
  4480                           psect	text897,local,class=CODE,delta=2
  4481                           global __ptext897
  4482  0B7D                     __ptext897:
  4483                           
  4484 ;; *************** function _lcd_putchar *****************
  4485 ;; Defined at:
  4486 ;;		line 575 in file "../main.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;  c_data          1    wreg     unsigned char 
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;  c_data          1    6[COMMON] unsigned char 
  4491 ;; Return value:  Size  Location     Type
  4492 ;;		None               void
  4493 ;; Registers used:
  4494 ;;		wreg, status,2, status,0, pclath, cstack
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4500 ;;      Params:         0       0       0       0       0
  4501 ;;      Locals:         1       0       0       0       0
  4502 ;;      Temps:          1       0       0       0       0
  4503 ;;      Totals:         2       0       0       0       0
  4504 ;;Total ram usage:        2 bytes
  4505 ;; Hardware stack levels used:    1
  4506 ;; Hardware stack levels required when called:    2
  4507 ;; This function calls:
  4508 ;;		_send_lcd_data
  4509 ;; This function is called by:
  4510 ;;		_jfolo
  4511 ;;		_lcd_putstr
  4512 ;;		_lcd_num
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           psect	text897
  4516                           	file	"../main.c"
  4517                           	line	575
  4518                           	global	__size_of_lcd_putchar
  4519  000C                     	__size_of_lcd_putchar	equ	__end_of_lcd_putchar-_lcd_putchar
  4520                           	
  4521  0B7D                     _lcd_putchar:	
  4522                           	opt	stack 2
  4523                           ; Regs used in _lcd_putchar: [wreg+status,2+status,0+pclath+cstack]
  4524                           ;lcd_putchar@c_data stored from wreg
  4525                           	line	577
  4526  0B7D  00F6               	movwf	(lcd_putchar@c_data)
  4527                           	
  4528  0B7E                     l4941:	
  4529                           ;main.c: 577: send_lcd_data(1, (unsigned char)c_data);
  4530  0B7E  0876               	movf	(lcd_putchar@c_data),w
  4531  0B7F  00F5               	movwf	(??_lcd_putchar+0)+0
  4532  0B80  0875               	movf	(??_lcd_putchar+0)+0,w
  4533  0B81  00F1               	movwf	(?_send_lcd_data)
  4534  0B82  3001               	movlw	(01h)
  4535  0B83  120A  158A  24FF   	fcall	_send_lcd_data
              120A  158A         
  4536                           	line	578
  4537                           	
  4538  0B88                     l1276:	
  4539  0B88  0008               	return
  4540                           	opt stack 0
  4541                           GLOBAL	__end_of_lcd_putchar
  4542  0B89                     	__end_of_lcd_putchar:
  4543 ;; =============== function _lcd_putchar ends ============
  4544                           
  4545                           	signat	_lcd_putchar,4216
  4546                           	global	_lcd_goto
  4547                           psect	text898,local,class=CODE,delta=2
  4548                           global __ptext898
  4549  0CB0                     __ptext898:
  4550                           
  4551 ;; *************** function _lcd_goto *****************
  4552 ;; Defined at:
  4553 ;;		line 562 in file "../main.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;  uc_position     1    wreg     unsigned char 
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;  uc_position     1    6[COMMON] unsigned char 
  4558 ;; Return value:  Size  Location     Type
  4559 ;;		None               void
  4560 ;; Registers used:
  4561 ;;		wreg, status,2, status,0, pclath, cstack
  4562 ;; Tracked objects:
  4563 ;;		On entry : 0/0
  4564 ;;		On exit  : 0/0
  4565 ;;		Unchanged: 0/0
  4566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4567 ;;      Params:         0       0       0       0       0
  4568 ;;      Locals:         1       0       0       0       0
  4569 ;;      Temps:          1       0       0       0       0
  4570 ;;      Totals:         2       0       0       0       0
  4571 ;;Total ram usage:        2 bytes
  4572 ;; Hardware stack levels used:    1
  4573 ;; Hardware stack levels required when called:    2
  4574 ;; This function calls:
  4575 ;;		_send_lcd_data
  4576 ;; This function is called by:
  4577 ;;		_main
  4578 ;;		_jfolo
  4579 ;;		_junction_follow
  4580 ;;		_PID_MENU
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           psect	text898
  4584                           	file	"../main.c"
  4585                           	line	562
  4586                           	global	__size_of_lcd_goto
  4587  0025                     	__size_of_lcd_goto	equ	__end_of_lcd_goto-_lcd_goto
  4588                           	
  4589  0CB0                     _lcd_goto:	
  4590                           	opt	stack 3
  4591                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  4592                           ;lcd_goto@uc_position stored from wreg
  4593  0CB0  00F6               	movwf	(lcd_goto@uc_position)
  4594                           	line	563
  4595                           	
  4596  0CB1                     l4933:	
  4597                           ;main.c: 563: if(uc_position<16)
  4598  0CB1  3010               	movlw	(010h)
  4599  0CB2  0276               	subwf	(lcd_goto@uc_position),w
  4600  0CB3  1803               	skipnc
  4601  0CB4  2CB6               	goto	u3841
  4602  0CB5  2CB7               	goto	u3840
  4603  0CB6                     u3841:
  4604  0CB6  2CC3               	goto	l4937
  4605  0CB7                     u3840:
  4606                           	line	565
  4607                           	
  4608  0CB7                     l4935:	
  4609                           ;main.c: 564: {
  4610                           ;main.c: 565: send_lcd_data(0,0x80+uc_position);
  4611  0CB7  0876               	movf	(lcd_goto@uc_position),w
  4612  0CB8  3E80               	addlw	080h
  4613  0CB9  00F5               	movwf	(??_lcd_goto+0)+0
  4614  0CBA  0875               	movf	(??_lcd_goto+0)+0,w
  4615  0CBB  00F1               	movwf	(?_send_lcd_data)
  4616  0CBC  3000               	movlw	(0)
  4617  0CBD  120A  158A  24FF   	fcall	_send_lcd_data
              120A  158A         
  4618                           	line	566
  4619                           ;main.c: 566: }
  4620  0CC2  2CD4               	goto	l1273
  4621                           	line	567
  4622                           	
  4623  0CC3                     l1271:	
  4624                           	line	569
  4625                           	
  4626  0CC3                     l4937:	
  4627                           ;main.c: 567: else
  4628                           ;main.c: 568: {
  4629                           ;main.c: 569: uc_position=uc_position-20;
  4630  0CC3  0876               	movf	(lcd_goto@uc_position),w
  4631  0CC4  3EEC               	addlw	0ECh
  4632  0CC5  00F5               	movwf	(??_lcd_goto+0)+0
  4633  0CC6  0875               	movf	(??_lcd_goto+0)+0,w
  4634  0CC7  00F6               	movwf	(lcd_goto@uc_position)
  4635                           	line	570
  4636                           	
  4637  0CC8                     l4939:	
  4638                           ;main.c: 570: send_lcd_data(0,0xc0+uc_position);
  4639  0CC8  0876               	movf	(lcd_goto@uc_position),w
  4640  0CC9  3EC0               	addlw	0C0h
  4641  0CCA  00F5               	movwf	(??_lcd_goto+0)+0
  4642  0CCB  0875               	movf	(??_lcd_goto+0)+0,w
  4643  0CCC  00F1               	movwf	(?_send_lcd_data)
  4644  0CCD  3000               	movlw	(0)
  4645  0CCE  120A  158A  24FF   	fcall	_send_lcd_data
              120A  158A         
  4646  0CD3  2CD4               	goto	l1273
  4647                           	line	571
  4648                           	
  4649  0CD4                     l1272:	
  4650                           	line	572
  4651                           	
  4652  0CD4                     l1273:	
  4653  0CD4  0008               	return
  4654                           	opt stack 0
  4655                           GLOBAL	__end_of_lcd_goto
  4656  0CD5                     	__end_of_lcd_goto:
  4657 ;; =============== function _lcd_goto ends ============
  4658                           
  4659                           	signat	_lcd_goto,4216
  4660                           	global	_lcd_clr
  4661                           psect	text899,local,class=CODE,delta=2
  4662                           global __ptext899
  4663  0B50                     __ptext899:
  4664                           
  4665 ;; *************** function _lcd_clr *****************
  4666 ;; Defined at:
  4667 ;;		line 547 in file "../main.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;		None
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;		None
  4672 ;; Return value:  Size  Location     Type
  4673 ;;		None               void
  4674 ;; Registers used:
  4675 ;;		wreg, status,2, status,0, pclath, cstack
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4681 ;;      Params:         0       0       0       0       0
  4682 ;;      Locals:         0       0       0       0       0
  4683 ;;      Temps:          0       0       0       0       0
  4684 ;;      Totals:         0       0       0       0       0
  4685 ;;Total ram usage:        0 bytes
  4686 ;; Hardware stack levels used:    1
  4687 ;; Hardware stack levels required when called:    2
  4688 ;; This function calls:
  4689 ;;		_send_lcd_data
  4690 ;; This function is called by:
  4691 ;;		_main
  4692 ;;		_junction_follow
  4693 ;;		_Calibrate
  4694 ;;		_lcd_init
  4695 ;; This function uses a non-reentrant model
  4696 ;;
  4697                           psect	text899
  4698                           	file	"../main.c"
  4699                           	line	547
  4700                           	global	__size_of_lcd_clr
  4701  000A                     	__size_of_lcd_clr	equ	__end_of_lcd_clr-_lcd_clr
  4702                           	
  4703  0B50                     _lcd_clr:	
  4704                           	opt	stack 4
  4705                           ; Regs used in _lcd_clr: [wreg+status,2+status,0+pclath+cstack]
  4706                           	line	549
  4707                           	
  4708  0B50                     l4931:	
  4709                           ;main.c: 549: send_lcd_data(0, 0b00000001);
  4710  0B50  01F1               	clrf	(?_send_lcd_data)
  4711  0B51  1403               	bsf	status,0
  4712  0B52  0DF1               	rlf	(?_send_lcd_data),f
  4713  0B53  3000               	movlw	(0)
  4714  0B54  120A  158A  24FF   	fcall	_send_lcd_data
              120A  158A         
  4715                           	line	550
  4716                           	
  4717  0B59                     l1262:	
  4718  0B59  0008               	return
  4719                           	opt stack 0
  4720                           GLOBAL	__end_of_lcd_clr
  4721  0B5A                     	__end_of_lcd_clr:
  4722 ;; =============== function _lcd_clr ends ============
  4723                           
  4724                           	signat	_lcd_clr,88
  4725                           	global	_LSA08_GetPosition
  4726                           psect	text900,local,class=CODE,delta=2
  4727                           global __ptext900
  4728  0CD5                     __ptext900:
  4729                           
  4730 ;; *************** function _LSA08_GetPosition *****************
  4731 ;; Defined at:
  4732 ;;		line 294 in file "../LSA08.h"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;		None
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;  linepost        1   10[COMMON] unsigned char 
  4737 ;;  post            1    9[COMMON] char 
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  1    wreg      char 
  4740 ;; Registers used:
  4741 ;;		wreg, status,2, status,0, pclath, cstack
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4747 ;;      Params:         0       0       0       0       0
  4748 ;;      Locals:         2       0       0       0       0
  4749 ;;      Temps:          1       0       0       0       0
  4750 ;;      Totals:         3       0       0       0       0
  4751 ;;Total ram usage:        3 bytes
  4752 ;; Hardware stack levels used:    1
  4753 ;; Hardware stack levels required when called:    2
  4754 ;; This function calls:
  4755 ;;		_UART_REC
  4756 ;;		_UART_DUMP
  4757 ;; This function is called by:
  4758 ;;		_junction_follow
  4759 ;;		_line_follow
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           psect	text900
  4763                           	file	"../LSA08.h"
  4764                           	line	294
  4765                           	global	__size_of_LSA08_GetPosition
  4766  002A                     	__size_of_LSA08_GetPosition	equ	__end_of_LSA08_GetPosition-_LSA08_GetPosition
  4767                           	
  4768  0CD5                     _LSA08_GetPosition:	
  4769                           	opt	stack 4
  4770                           ; Regs used in _LSA08_GetPosition: [wreg+status,2+status,0+pclath+cstack]
  4771                           	line	298
  4772                           	
  4773  0CD5                     l4911:	
  4774                           ;LSA08.h: 296: unsigned char linepost;
  4775                           ;LSA08.h: 297: signed char post;
  4776                           ;LSA08.h: 298: PORTCbits.RC0=0;
  4777  0CD5  1283               	bcf	status, 5	;RP0=0, select bank0
  4778  0CD6  1303               	bcf	status, 6	;RP1=0, select bank0
  4779  0CD7  1007               	bcf	(7),0	;volatile
  4780  0CD8  2CD9               	goto	l4913
  4781                           	line	299
  4782                           ;LSA08.h: 299: do{
  4783                           	
  4784  0CD9                     l1117:	
  4785                           	line	300
  4786                           	
  4787  0CD9                     l4913:	
  4788                           ;LSA08.h: 300: linepost= UART_REC();
  4789  0CD9  120A  158A  26AB   	fcall	_UART_REC
              120A  158A         
  4790  0CDE  00F8               	movwf	(??_LSA08_GetPosition+0)+0
  4791  0CDF  0878               	movf	(??_LSA08_GetPosition+0)+0,w
  4792  0CE0  00FA               	movwf	(LSA08_GetPosition@linepost)
  4793                           	line	301
  4794                           	
  4795  0CE1                     l4915:	
  4796                           ;LSA08.h: 301: }while(ERR_FLAG);
  4797  0CE1  1283               	bcf	status, 5	;RP0=0, select bank0
  4798  0CE2  1303               	bcf	status, 6	;RP1=0, select bank0
  4799  0CE3  08E8               	movf	(_ERR_FLAG),f
  4800  0CE4  1D03               	skipz
  4801  0CE5  2CE7               	goto	u3821
  4802  0CE6  2CE8               	goto	u3820
  4803  0CE7                     u3821:
  4804  0CE7  2CD9               	goto	l4913
  4805  0CE8                     u3820:
  4806                           	
  4807  0CE8                     l1118:	
  4808                           	line	302
  4809                           ;LSA08.h: 302: PORTCbits.RC0=1;
  4810  0CE8  1407               	bsf	(7),0	;volatile
  4811                           	line	304
  4812                           	
  4813  0CE9                     l4917:	
  4814                           ;LSA08.h: 304: UART_DUMP();
  4815  0CE9  120A  158A  23A5   	fcall	_UART_DUMP
              120A  158A         
  4816                           	line	306
  4817                           	
  4818  0CEE                     l4919:	
  4819                           ;LSA08.h: 306: if(linepost==255) return(127);
  4820  0CEE  087A               	movf	(LSA08_GetPosition@linepost),w
  4821  0CEF  3AFF               	xorlw	0FFh
  4822  0CF0  1D03               	skipz
  4823  0CF1  2CF3               	goto	u3831
  4824  0CF2  2CF4               	goto	u3830
  4825  0CF3                     u3831:
  4826  0CF3  2CF7               	goto	l4925
  4827  0CF4                     u3830:
  4828                           	
  4829  0CF4                     l4921:	
  4830  0CF4  307F               	movlw	(07Fh)
  4831  0CF5  2CFE               	goto	l1120
  4832                           	
  4833  0CF6                     l4923:	
  4834  0CF6  2CFE               	goto	l1120
  4835                           	
  4836  0CF7                     l1119:	
  4837                           	line	308
  4838                           	
  4839  0CF7                     l4925:	
  4840                           ;LSA08.h: 308: post=(signed char)linepost-35;
  4841  0CF7  087A               	movf	(LSA08_GetPosition@linepost),w
  4842  0CF8  3EDD               	addlw	-35
  4843  0CF9  00F8               	movwf	(??_LSA08_GetPosition+0)+0
  4844  0CFA  0878               	movf	(??_LSA08_GetPosition+0)+0,w
  4845  0CFB  00F9               	movwf	(LSA08_GetPosition@post)
  4846                           	line	310
  4847                           	
  4848  0CFC                     l4927:	
  4849                           ;LSA08.h: 310: return(post);
  4850  0CFC  0879               	movf	(LSA08_GetPosition@post),w
  4851  0CFD  2CFE               	goto	l1120
  4852                           	
  4853  0CFE                     l4929:	
  4854                           	line	311
  4855                           	
  4856  0CFE                     l1120:	
  4857  0CFE  0008               	return
  4858                           	opt stack 0
  4859                           GLOBAL	__end_of_LSA08_GetPosition
  4860  0CFF                     	__end_of_LSA08_GetPosition:
  4861 ;; =============== function _LSA08_GetPosition ends ============
  4862                           
  4863                           	signat	_LSA08_GetPosition,89
  4864                           	global	_SEND_PACKET
  4865                           psect	text901,local,class=CODE,delta=2
  4866                           global __ptext901
  4867  0C8B                     __ptext901:
  4868                           
  4869 ;; *************** function _SEND_PACKET *****************
  4870 ;; Defined at:
  4871 ;;		line 247 in file "../LSA08.h"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  add             1    wreg     unsigned char 
  4874 ;;  command         1    8[COMMON] unsigned char 
  4875 ;;  value           1    9[COMMON] unsigned char 
  4876 ;;  com_dat         1   10[COMMON] unsigned char 
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;  add             1   12[COMMON] unsigned char 
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  1    wreg      unsigned char 
  4881 ;; Registers used:
  4882 ;;		wreg, status,2, status,0, pclath, cstack
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4888 ;;      Params:         3       0       0       0       0
  4889 ;;      Locals:         1       0       0       0       0
  4890 ;;      Temps:          1       0       0       0       0
  4891 ;;      Totals:         5       0       0       0       0
  4892 ;;Total ram usage:        5 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; Hardware stack levels required when called:    2
  4895 ;; This function calls:
  4896 ;;		_UART_SEND
  4897 ;;		_UART_RESPONSE
  4898 ;; This function is called by:
  4899 ;;		_LSA08_GetJunction
  4900 ;;		_LSA08_ClearJunction
  4901 ;;		_LSA08_Calibrate
  4902 ;;		_LSA08_UARTMode
  4903 ;;		_LSA08_LineMode
  4904 ;;		_LSA08_Threshold
  4905 ;;		_LSA08_JunctionWidth
  4906 ;;		_LSA08_BL
  4907 ;;		_LSA08_Contrast
  4908 ;; This function uses a non-reentrant model
  4909 ;;
  4910                           psect	text901
  4911                           	file	"../LSA08.h"
  4912                           	line	247
  4913                           	global	__size_of_SEND_PACKET
  4914  0025                     	__size_of_SEND_PACKET	equ	__end_of_SEND_PACKET-_SEND_PACKET
  4915                           	
  4916  0C8B                     _SEND_PACKET:	
  4917                           	opt	stack 2
  4918                           ; Regs used in _SEND_PACKET: [wreg+status,2+status,0+pclath+cstack]
  4919                           ;SEND_PACKET@add stored from wreg
  4920  0C8B  00FC               	movwf	(SEND_PACKET@add)
  4921                           	line	248
  4922                           	
  4923  0C8C                     l4907:	
  4924                           ;LSA08.h: 248: UART_SEND(add);
  4925  0C8C  087C               	movf	(SEND_PACKET@add),w
  4926  0C8D  120A  158A  2389   	fcall	_UART_SEND
              120A  158A         
  4927                           	line	249
  4928                           ;LSA08.h: 249: UART_SEND(command);
  4929  0C92  0878               	movf	(SEND_PACKET@command),w
  4930  0C93  120A  158A  2389   	fcall	_UART_SEND
              120A  158A         
  4931                           	line	250
  4932                           ;LSA08.h: 250: UART_SEND(value);
  4933  0C98  0879               	movf	(SEND_PACKET@value),w
  4934  0C99  120A  158A  2389   	fcall	_UART_SEND
              120A  158A         
  4935                           	line	251
  4936                           ;LSA08.h: 251: UART_SEND(add+command+value);
  4937  0C9E  0878               	movf	(SEND_PACKET@command),w
  4938  0C9F  077C               	addwf	(SEND_PACKET@add),w
  4939  0CA0  00FB               	movwf	(??_SEND_PACKET+0)+0
  4940  0CA1  0879               	movf	(SEND_PACKET@value),w
  4941  0CA2  077B               	addwf	0+(??_SEND_PACKET+0)+0,w
  4942  0CA3  120A  158A  2389   	fcall	_UART_SEND
              120A  158A         
  4943                           	line	252
  4944                           ;LSA08.h: 252: return (UART_RESPONSE(com_dat));
  4945  0CA8  087A               	movf	(SEND_PACKET@com_dat),w
  4946  0CA9  120A  158A  255D   	fcall	_UART_RESPONSE
              120A  158A         
  4947  0CAE  2CAF               	goto	l1111
  4948                           	
  4949  0CAF                     l4909:	
  4950                           	line	253
  4951                           	
  4952  0CAF                     l1111:	
  4953  0CAF  0008               	return
  4954                           	opt stack 0
  4955                           GLOBAL	__end_of_SEND_PACKET
  4956  0CB0                     	__end_of_SEND_PACKET:
  4957 ;; =============== function _SEND_PACKET ends ============
  4958                           
  4959                           	signat	_SEND_PACKET,16505
  4960                           	global	___awtoft
  4961                           psect	text902,local,class=CODE,delta=2
  4962                           global __ptext902
  4963  0007                     __ptext902:
  4964                           
  4965 ;; *************** function ___awtoft *****************
  4966 ;; Defined at:
  4967 ;;		line 33 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;  c               2   10[BANK0 ] int 
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;  sign            1   13[BANK0 ] unsigned char 
  4972 ;; Return value:  Size  Location     Type
  4973 ;;                  3   10[BANK0 ] float 
  4974 ;; Registers used:
  4975 ;;		wreg, status,2, status,0, pclath, cstack
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4981 ;;      Params:         0       3       0       0       0
  4982 ;;      Locals:         0       1       0       0       0
  4983 ;;      Temps:          2       0       0       0       0
  4984 ;;      Totals:         2       4       0       0       0
  4985 ;;Total ram usage:        6 bytes
  4986 ;; Hardware stack levels used:    1
  4987 ;; Hardware stack levels required when called:    1
  4988 ;; This function calls:
  4989 ;;		___ftpack
  4990 ;; This function is called by:
  4991 ;;		_line_follow
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           psect	text902
  4995                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  4996                           	line	33
  4997                           	global	__size_of___awtoft
  4998  002C                     	__size_of___awtoft	equ	__end_of___awtoft-___awtoft
  4999                           	
  5000  0007                     ___awtoft:	
  5001                           	opt	stack 5
  5002                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5003                           	line	36
  5004                           	
  5005  0007                     l4899:	
  5006  0007  1283               	bcf	status, 5	;RP0=0, select bank0
  5007  0008  1303               	bcf	status, 6	;RP1=0, select bank0
  5008  0009  01AD               	clrf	(___awtoft@sign)
  5009                           	line	37
  5010  000A  1FAB               	btfss	(___awtoft@c+1),7
  5011  000B  280D               	goto	u3811
  5012  000C  280E               	goto	u3810
  5013  000D                     u3811:
  5014  000D  2817               	goto	l4903
  5015  000E                     u3810:
  5016                           	line	38
  5017                           	
  5018  000E                     l4901:	
  5019  000E  09AA               	comf	(___awtoft@c),f
  5020  000F  09AB               	comf	(___awtoft@c+1),f
  5021  0010  0AAA               	incf	(___awtoft@c),f
  5022  0011  1903               	skipnz
  5023  0012  0AAB               	incf	(___awtoft@c+1),f
  5024                           	line	39
  5025  0013  01AD               	clrf	(___awtoft@sign)
  5026  0014  1403               	bsf	status,0
  5027  0015  0DAD               	rlf	(___awtoft@sign),f
  5028  0016  2817               	goto	l4903
  5029                           	line	40
  5030                           	
  5031  0017                     l2461:	
  5032                           	line	41
  5033                           	
  5034  0017                     l4903:	
  5035  0017  082A               	movf	(___awtoft@c),w
  5036  0018  00F0               	movwf	(?___ftpack)
  5037  0019  082B               	movf	(___awtoft@c+1),w
  5038  001A  00F1               	movwf	(?___ftpack+1)
  5039  001B  01F2               	clrf	(?___ftpack+2)
  5040  001C  308E               	movlw	(08Eh)
  5041  001D  00FC               	movwf	(??___awtoft+0)+0
  5042  001E  087C               	movf	(??___awtoft+0)+0,w
  5043  001F  00F3               	movwf	0+(?___ftpack)+03h
  5044  0020  082D               	movf	(___awtoft@sign),w
  5045  0021  00FD               	movwf	(??___awtoft+1)+0
  5046  0022  087D               	movf	(??___awtoft+1)+0,w
  5047  0023  00F4               	movwf	0+(?___ftpack)+04h
  5048  0024  120A  158A  2785   	fcall	___ftpack
              120A  118A         
  5049  0029  0870               	movf	(0+(?___ftpack)),w
  5050  002A  1283               	bcf	status, 5	;RP0=0, select bank0
  5051  002B  1303               	bcf	status, 6	;RP1=0, select bank0
  5052  002C  00AA               	movwf	(?___awtoft)
  5053  002D  0871               	movf	(1+(?___ftpack)),w
  5054  002E  00AB               	movwf	(?___awtoft+1)
  5055  002F  0872               	movf	(2+(?___ftpack)),w
  5056  0030  00AC               	movwf	(?___awtoft+2)
  5057  0031  2832               	goto	l2462
  5058                           	
  5059  0032                     l4905:	
  5060                           	line	42
  5061                           	
  5062  0032                     l2462:	
  5063  0032  0008               	return
  5064                           	opt stack 0
  5065                           GLOBAL	__end_of___awtoft
  5066  0033                     	__end_of___awtoft:
  5067 ;; =============== function ___awtoft ends ============
  5068                           
  5069                           	signat	___awtoft,4219
  5070                           	global	___ftmul
  5071                           psect	text903,local,class=CODE,delta=2
  5072                           global __ptext903
  5073  0497                     __ptext903:
  5074                           
  5075 ;; *************** function ___ftmul *****************
  5076 ;; Defined at:
  5077 ;;		line 52 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  5078 ;; Parameters:    Size  Location     Type
  5079 ;;  f1              3   14[BANK0 ] float 
  5080 ;;  f2              3   17[BANK0 ] float 
  5081 ;; Auto vars:     Size  Location     Type
  5082 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
  5083 ;;  sign            1   29[BANK0 ] unsigned char 
  5084 ;;  cntr            1   28[BANK0 ] unsigned char 
  5085 ;;  exp             1   24[BANK0 ] unsigned char 
  5086 ;; Return value:  Size  Location     Type
  5087 ;;                  3   14[BANK0 ] float 
  5088 ;; Registers used:
  5089 ;;		wreg, status,2, status,0, pclath, cstack
  5090 ;; Tracked objects:
  5091 ;;		On entry : 0/0
  5092 ;;		On exit  : 0/0
  5093 ;;		Unchanged: 0/0
  5094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5095 ;;      Params:         0       6       0       0       0
  5096 ;;      Locals:         0       6       0       0       0
  5097 ;;      Temps:          0       4       0       0       0
  5098 ;;      Totals:         0      16       0       0       0
  5099 ;;Total ram usage:       16 bytes
  5100 ;; Hardware stack levels used:    1
  5101 ;; Hardware stack levels required when called:    1
  5102 ;; This function calls:
  5103 ;;		___ftpack
  5104 ;; This function is called by:
  5105 ;;		_line_follow
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           psect	text903
  5109                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  5110                           	line	52
  5111                           	global	__size_of___ftmul
  5112  00EE                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  5113                           	
  5114  0497                     ___ftmul:	
  5115                           	opt	stack 5
  5116                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5117                           	line	56
  5118                           	
  5119  0497                     l4849:	
  5120  0497  1283               	bcf	status, 5	;RP0=0, select bank0
  5121  0498  1303               	bcf	status, 6	;RP1=0, select bank0
  5122  0499  082E               	movf	(___ftmul@f1),w
  5123  049A  00B4               	movwf	((??___ftmul+0)+0)
  5124  049B  082F               	movf	(___ftmul@f1+1),w
  5125  049C  00B5               	movwf	((??___ftmul+0)+0+1)
  5126  049D  0830               	movf	(___ftmul@f1+2),w
  5127  049E  00B6               	movwf	((??___ftmul+0)+0+2)
  5128  049F  1003               	clrc
  5129  04A0  0D35               	rlf	(??___ftmul+0)+1,w
  5130  04A1  0D36               	rlf	(??___ftmul+0)+2,w
  5131  04A2  00B7               	movwf	(??___ftmul+3)+0
  5132  04A3  0837               	movf	(??___ftmul+3)+0,w
  5133  04A4  00B8               	movwf	(___ftmul@exp)
  5134  04A5  08B8               	movf	((___ftmul@exp)),f
  5135  04A6  1D03               	skipz
  5136  04A7  2CA9               	goto	u3671
  5137  04A8  2CAA               	goto	u3670
  5138  04A9                     u3671:
  5139  04A9  2CB2               	goto	l4855
  5140  04AA                     u3670:
  5141                           	line	57
  5142                           	
  5143  04AA                     l4851:	
  5144  04AA  3000               	movlw	0x0
  5145  04AB  00AE               	movwf	(?___ftmul)
  5146  04AC  3000               	movlw	0x0
  5147  04AD  00AF               	movwf	(?___ftmul+1)
  5148  04AE  3000               	movlw	0x0
  5149  04AF  00B0               	movwf	(?___ftmul+2)
  5150  04B0  2D84               	goto	l2424
  5151                           	
  5152  04B1                     l4853:	
  5153  04B1  2D84               	goto	l2424
  5154                           	
  5155  04B2                     l2423:	
  5156                           	line	58
  5157                           	
  5158  04B2                     l4855:	
  5159  04B2  0831               	movf	(___ftmul@f2),w
  5160  04B3  00B4               	movwf	((??___ftmul+0)+0)
  5161  04B4  0832               	movf	(___ftmul@f2+1),w
  5162  04B5  00B5               	movwf	((??___ftmul+0)+0+1)
  5163  04B6  0833               	movf	(___ftmul@f2+2),w
  5164  04B7  00B6               	movwf	((??___ftmul+0)+0+2)
  5165  04B8  1003               	clrc
  5166  04B9  0D35               	rlf	(??___ftmul+0)+1,w
  5167  04BA  0D36               	rlf	(??___ftmul+0)+2,w
  5168  04BB  00B7               	movwf	(??___ftmul+3)+0
  5169  04BC  0837               	movf	(??___ftmul+3)+0,w
  5170  04BD  00BD               	movwf	(___ftmul@sign)
  5171  04BE  08BD               	movf	((___ftmul@sign)),f
  5172  04BF  1D03               	skipz
  5173  04C0  2CC2               	goto	u3681
  5174  04C1  2CC3               	goto	u3680
  5175  04C2                     u3681:
  5176  04C2  2CCB               	goto	l4861
  5177  04C3                     u3680:
  5178                           	line	59
  5179                           	
  5180  04C3                     l4857:	
  5181  04C3  3000               	movlw	0x0
  5182  04C4  00AE               	movwf	(?___ftmul)
  5183  04C5  3000               	movlw	0x0
  5184  04C6  00AF               	movwf	(?___ftmul+1)
  5185  04C7  3000               	movlw	0x0
  5186  04C8  00B0               	movwf	(?___ftmul+2)
  5187  04C9  2D84               	goto	l2424
  5188                           	
  5189  04CA                     l4859:	
  5190  04CA  2D84               	goto	l2424
  5191                           	
  5192  04CB                     l2425:	
  5193                           	line	60
  5194                           	
  5195  04CB                     l4861:	
  5196  04CB  083D               	movf	(___ftmul@sign),w
  5197  04CC  3E7B               	addlw	07Bh
  5198  04CD  00B4               	movwf	(??___ftmul+0)+0
  5199  04CE  0834               	movf	(??___ftmul+0)+0,w
  5200  04CF  07B8               	addwf	(___ftmul@exp),f
  5201                           	line	61
  5202  04D0  082E               	movf	(___ftmul@f1),w
  5203  04D1  00B4               	movwf	((??___ftmul+0)+0)
  5204  04D2  082F               	movf	(___ftmul@f1+1),w
  5205  04D3  00B5               	movwf	((??___ftmul+0)+0+1)
  5206  04D4  0830               	movf	(___ftmul@f1+2),w
  5207  04D5  00B6               	movwf	((??___ftmul+0)+0+2)
  5208  04D6  3010               	movlw	010h
  5209  04D7                     u3695:
  5210  04D7  1003               	clrc
  5211  04D8  0CB6               	rrf	(??___ftmul+0)+2,f
  5212  04D9  0CB5               	rrf	(??___ftmul+0)+1,f
  5213  04DA  0CB4               	rrf	(??___ftmul+0)+0,f
  5214  04DB                     u3690:
  5215  04DB  3EFF               	addlw	-1
  5216  04DC  1D03               	skipz
  5217  04DD  2CD7               	goto	u3695
  5218  04DE  0834               	movf	0+(??___ftmul+0)+0,w
  5219  04DF  00B7               	movwf	(??___ftmul+3)+0
  5220  04E0  0837               	movf	(??___ftmul+3)+0,w
  5221  04E1  00BD               	movwf	(___ftmul@sign)
  5222                           	line	62
  5223  04E2  0831               	movf	(___ftmul@f2),w
  5224  04E3  00B4               	movwf	((??___ftmul+0)+0)
  5225  04E4  0832               	movf	(___ftmul@f2+1),w
  5226  04E5  00B5               	movwf	((??___ftmul+0)+0+1)
  5227  04E6  0833               	movf	(___ftmul@f2+2),w
  5228  04E7  00B6               	movwf	((??___ftmul+0)+0+2)
  5229  04E8  3010               	movlw	010h
  5230  04E9                     u3705:
  5231  04E9  1003               	clrc
  5232  04EA  0CB6               	rrf	(??___ftmul+0)+2,f
  5233  04EB  0CB5               	rrf	(??___ftmul+0)+1,f
  5234  04EC  0CB4               	rrf	(??___ftmul+0)+0,f
  5235  04ED                     u3700:
  5236  04ED  3EFF               	addlw	-1
  5237  04EE  1D03               	skipz
  5238  04EF  2CE9               	goto	u3705
  5239  04F0  0834               	movf	0+(??___ftmul+0)+0,w
  5240  04F1  00B7               	movwf	(??___ftmul+3)+0
  5241  04F2  0837               	movf	(??___ftmul+3)+0,w
  5242  04F3  06BD               	xorwf	(___ftmul@sign),f
  5243                           	line	63
  5244  04F4  3080               	movlw	(080h)
  5245  04F5  00B4               	movwf	(??___ftmul+0)+0
  5246  04F6  0834               	movf	(??___ftmul+0)+0,w
  5247  04F7  05BD               	andwf	(___ftmul@sign),f
  5248                           	line	64
  5249                           	
  5250  04F8                     l4863:	
  5251  04F8  17AF               	bsf	(___ftmul@f1)+(15/8),(15)&7
  5252                           	line	66
  5253                           	
  5254  04F9                     l4865:	
  5255  04F9  17B2               	bsf	(___ftmul@f2)+(15/8),(15)&7
  5256                           	line	67
  5257                           	
  5258  04FA                     l4867:	
  5259  04FA  30FF               	movlw	0FFh
  5260  04FB  05B1               	andwf	(___ftmul@f2),f
  5261  04FC  30FF               	movlw	0FFh
  5262  04FD  05B2               	andwf	(___ftmul@f2+1),f
  5263  04FE  3000               	movlw	0
  5264  04FF  05B3               	andwf	(___ftmul@f2+2),f
  5265                           	line	68
  5266                           	
  5267  0500                     l4869:	
  5268  0500  3000               	movlw	0
  5269  0501  00B9               	movwf	(___ftmul@f3_as_product)
  5270  0502  3000               	movlw	0
  5271  0503  00BA               	movwf	(___ftmul@f3_as_product+1)
  5272  0504  3000               	movlw	0
  5273  0505  00BB               	movwf	(___ftmul@f3_as_product+2)
  5274                           	line	69
  5275                           	
  5276  0506                     l4871:	
  5277  0506  3007               	movlw	(07h)
  5278  0507  00B4               	movwf	(??___ftmul+0)+0
  5279  0508  0834               	movf	(??___ftmul+0)+0,w
  5280  0509  00BC               	movwf	(___ftmul@cntr)
  5281  050A  2D0B               	goto	l4873
  5282                           	line	70
  5283                           	
  5284  050B                     l2426:	
  5285                           	line	71
  5286                           	
  5287  050B                     l4873:	
  5288  050B  1C2E               	btfss	(___ftmul@f1),(0)&7
  5289  050C  2D0E               	goto	u3711
  5290  050D  2D0F               	goto	u3710
  5291  050E                     u3711:
  5292  050E  2D20               	goto	l4877
  5293  050F                     u3710:
  5294                           	line	72
  5295                           	
  5296  050F                     l4875:	
  5297  050F  0831               	movf	(___ftmul@f2),w
  5298  0510  07B9               	addwf	(___ftmul@f3_as_product),f
  5299  0511  0832               	movf	(___ftmul@f2+1),w
  5300  0512  1103               	clrz
  5301  0513  1803               	skipnc
  5302  0514  0A32               	incf	(___ftmul@f2+1),w
  5303  0515  1903               	skipnz
  5304  0516  2D18               	goto	u3721
  5305  0517  07BA               	addwf	(___ftmul@f3_as_product+1),f
  5306  0518                     u3721:
  5307  0518  0833               	movf	(___ftmul@f2+2),w
  5308  0519  1103               	clrz
  5309  051A  1803               	skipnc
  5310  051B  0A33               	incf	(___ftmul@f2+2),w
  5311  051C  1903               	skipnz
  5312  051D  2D1F               	goto	u3722
  5313  051E  07BB               	addwf	(___ftmul@f3_as_product+2),f
  5314  051F                     u3722:
  5315                           
  5316  051F  2D20               	goto	l4877
  5317                           	
  5318  0520                     l2427:	
  5319                           	line	73
  5320                           	
  5321  0520                     l4877:	
  5322  0520  3001               	movlw	01h
  5323  0521                     u3735:
  5324  0521  1003               	clrc
  5325  0522  0CB0               	rrf	(___ftmul@f1+2),f
  5326  0523  0CAF               	rrf	(___ftmul@f1+1),f
  5327  0524  0CAE               	rrf	(___ftmul@f1),f
  5328  0525  3EFF               	addlw	-1
  5329  0526  1D03               	skipz
  5330  0527  2D21               	goto	u3735
  5331                           
  5332                           	line	74
  5333                           	
  5334  0528                     l4879:	
  5335  0528  3001               	movlw	01h
  5336  0529                     u3745:
  5337  0529  1003               	clrc
  5338  052A  0DB1               	rlf	(___ftmul@f2),f
  5339  052B  0DB2               	rlf	(___ftmul@f2+1),f
  5340  052C  0DB3               	rlf	(___ftmul@f2+2),f
  5341  052D  3EFF               	addlw	-1
  5342  052E  1D03               	skipz
  5343  052F  2D29               	goto	u3745
  5344                           	line	75
  5345                           	
  5346  0530                     l4881:	
  5347  0530  3001               	movlw	low(01h)
  5348  0531  02BC               	subwf	(___ftmul@cntr),f
  5349  0532  1D03               	btfss	status,2
  5350  0533  2D35               	goto	u3751
  5351  0534  2D36               	goto	u3750
  5352  0535                     u3751:
  5353  0535  2D0B               	goto	l4873
  5354  0536                     u3750:
  5355  0536  2D37               	goto	l4883
  5356                           	
  5357  0537                     l2428:	
  5358                           	line	76
  5359                           	
  5360  0537                     l4883:	
  5361  0537  3009               	movlw	(09h)
  5362  0538  00B4               	movwf	(??___ftmul+0)+0
  5363  0539  0834               	movf	(??___ftmul+0)+0,w
  5364  053A  00BC               	movwf	(___ftmul@cntr)
  5365  053B  2D3C               	goto	l4885
  5366                           	line	77
  5367                           	
  5368  053C                     l2429:	
  5369                           	line	78
  5370                           	
  5371  053C                     l4885:	
  5372  053C  1C2E               	btfss	(___ftmul@f1),(0)&7
  5373  053D  2D3F               	goto	u3761
  5374  053E  2D40               	goto	u3760
  5375  053F                     u3761:
  5376  053F  2D51               	goto	l4889
  5377  0540                     u3760:
  5378                           	line	79
  5379                           	
  5380  0540                     l4887:	
  5381  0540  0831               	movf	(___ftmul@f2),w
  5382  0541  07B9               	addwf	(___ftmul@f3_as_product),f
  5383  0542  0832               	movf	(___ftmul@f2+1),w
  5384  0543  1103               	clrz
  5385  0544  1803               	skipnc
  5386  0545  0A32               	incf	(___ftmul@f2+1),w
  5387  0546  1903               	skipnz
  5388  0547  2D49               	goto	u3771
  5389  0548  07BA               	addwf	(___ftmul@f3_as_product+1),f
  5390  0549                     u3771:
  5391  0549  0833               	movf	(___ftmul@f2+2),w
  5392  054A  1103               	clrz
  5393  054B  1803               	skipnc
  5394  054C  0A33               	incf	(___ftmul@f2+2),w
  5395  054D  1903               	skipnz
  5396  054E  2D50               	goto	u3772
  5397  054F  07BB               	addwf	(___ftmul@f3_as_product+2),f
  5398  0550                     u3772:
  5399                           
  5400  0550  2D51               	goto	l4889
  5401                           	
  5402  0551                     l2430:	
  5403                           	line	80
  5404                           	
  5405  0551                     l4889:	
  5406  0551  3001               	movlw	01h
  5407  0552                     u3785:
  5408  0552  1003               	clrc
  5409  0553  0CB0               	rrf	(___ftmul@f1+2),f
  5410  0554  0CAF               	rrf	(___ftmul@f1+1),f
  5411  0555  0CAE               	rrf	(___ftmul@f1),f
  5412  0556  3EFF               	addlw	-1
  5413  0557  1D03               	skipz
  5414  0558  2D52               	goto	u3785
  5415                           
  5416                           	line	81
  5417                           	
  5418  0559                     l4891:	
  5419  0559  3001               	movlw	01h
  5420  055A                     u3795:
  5421  055A  1003               	clrc
  5422  055B  0CBB               	rrf	(___ftmul@f3_as_product+2),f
  5423  055C  0CBA               	rrf	(___ftmul@f3_as_product+1),f
  5424  055D  0CB9               	rrf	(___ftmul@f3_as_product),f
  5425  055E  3EFF               	addlw	-1
  5426  055F  1D03               	skipz
  5427  0560  2D5A               	goto	u3795
  5428                           
  5429                           	line	82
  5430                           	
  5431  0561                     l4893:	
  5432  0561  3001               	movlw	low(01h)
  5433  0562  02BC               	subwf	(___ftmul@cntr),f
  5434  0563  1D03               	btfss	status,2
  5435  0564  2D66               	goto	u3801
  5436  0565  2D67               	goto	u3800
  5437  0566                     u3801:
  5438  0566  2D3C               	goto	l4885
  5439  0567                     u3800:
  5440  0567  2D68               	goto	l4895
  5441                           	
  5442  0568                     l2431:	
  5443                           	line	83
  5444                           	
  5445  0568                     l4895:	
  5446  0568  0839               	movf	(___ftmul@f3_as_product),w
  5447  0569  00F0               	movwf	(?___ftpack)
  5448  056A  083A               	movf	(___ftmul@f3_as_product+1),w
  5449  056B  00F1               	movwf	(?___ftpack+1)
  5450  056C  083B               	movf	(___ftmul@f3_as_product+2),w
  5451  056D  00F2               	movwf	(?___ftpack+2)
  5452  056E  0838               	movf	(___ftmul@exp),w
  5453  056F  00B4               	movwf	(??___ftmul+0)+0
  5454  0570  0834               	movf	(??___ftmul+0)+0,w
  5455  0571  00F3               	movwf	0+(?___ftpack)+03h
  5456  0572  083D               	movf	(___ftmul@sign),w
  5457  0573  00B5               	movwf	(??___ftmul+1)+0
  5458  0574  0835               	movf	(??___ftmul+1)+0,w
  5459  0575  00F4               	movwf	0+(?___ftpack)+04h
  5460  0576  120A  158A  2785   	fcall	___ftpack
              120A  118A         
  5461  057B  0870               	movf	(0+(?___ftpack)),w
  5462  057C  1283               	bcf	status, 5	;RP0=0, select bank0
  5463  057D  1303               	bcf	status, 6	;RP1=0, select bank0
  5464  057E  00AE               	movwf	(?___ftmul)
  5465  057F  0871               	movf	(1+(?___ftpack)),w
  5466  0580  00AF               	movwf	(?___ftmul+1)
  5467  0581  0872               	movf	(2+(?___ftpack)),w
  5468  0582  00B0               	movwf	(?___ftmul+2)
  5469  0583  2D84               	goto	l2424
  5470                           	
  5471  0584                     l4897:	
  5472                           	line	84
  5473                           	
  5474  0584                     l2424:	
  5475  0584  0008               	return
  5476                           	opt stack 0
  5477                           GLOBAL	__end_of___ftmul
  5478  0585                     	__end_of___ftmul:
  5479 ;; =============== function ___ftmul ends ============
  5480                           
  5481                           	signat	___ftmul,8315
  5482                           	global	___ftadd
  5483                           psect	text904,local,class=CODE,delta=2
  5484                           global __ptext904
  5485  06BA                     __ptext904:
  5486                           
  5487 ;; *************** function ___ftadd *****************
  5488 ;; Defined at:
  5489 ;;		line 87 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;  f1              3   30[BANK0 ] float 
  5492 ;;  f2              3   33[BANK0 ] float 
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;  exp1            1   42[BANK0 ] unsigned char 
  5495 ;;  exp2            1   41[BANK0 ] unsigned char 
  5496 ;;  sign            1   40[BANK0 ] unsigned char 
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  3   30[BANK0 ] float 
  5499 ;; Registers used:
  5500 ;;		wreg, status,2, status,0, pclath, cstack
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5506 ;;      Params:         0       6       0       0       0
  5507 ;;      Locals:         0       3       0       0       0
  5508 ;;      Temps:          0       4       0       0       0
  5509 ;;      Totals:         0      13       0       0       0
  5510 ;;Total ram usage:       13 bytes
  5511 ;; Hardware stack levels used:    1
  5512 ;; Hardware stack levels required when called:    1
  5513 ;; This function calls:
  5514 ;;		___ftpack
  5515 ;; This function is called by:
  5516 ;;		_line_follow
  5517 ;;		___ftsub
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           psect	text904
  5521                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  5522                           	line	87
  5523                           	global	__size_of___ftadd
  5524  0146                     	__size_of___ftadd	equ	__end_of___ftadd-___ftadd
  5525                           	
  5526  06BA                     ___ftadd:	
  5527                           	opt	stack 5
  5528                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5529                           	line	90
  5530                           	
  5531  06BA                     l4779:	
  5532  06BA  1283               	bcf	status, 5	;RP0=0, select bank0
  5533  06BB  1303               	bcf	status, 6	;RP1=0, select bank0
  5534  06BC  083E               	movf	(___ftadd@f1),w
  5535  06BD  00C4               	movwf	((??___ftadd+0)+0)
  5536  06BE  083F               	movf	(___ftadd@f1+1),w
  5537  06BF  00C5               	movwf	((??___ftadd+0)+0+1)
  5538  06C0  0840               	movf	(___ftadd@f1+2),w
  5539  06C1  00C6               	movwf	((??___ftadd+0)+0+2)
  5540  06C2  1003               	clrc
  5541  06C3  0D45               	rlf	(??___ftadd+0)+1,w
  5542  06C4  0D46               	rlf	(??___ftadd+0)+2,w
  5543  06C5  00C7               	movwf	(??___ftadd+3)+0
  5544  06C6  0847               	movf	(??___ftadd+3)+0,w
  5545  06C7  00CA               	movwf	(___ftadd@exp1)
  5546                           	line	91
  5547  06C8  0841               	movf	(___ftadd@f2),w
  5548  06C9  00C4               	movwf	((??___ftadd+0)+0)
  5549  06CA  0842               	movf	(___ftadd@f2+1),w
  5550  06CB  00C5               	movwf	((??___ftadd+0)+0+1)
  5551  06CC  0843               	movf	(___ftadd@f2+2),w
  5552  06CD  00C6               	movwf	((??___ftadd+0)+0+2)
  5553  06CE  1003               	clrc
  5554  06CF  0D45               	rlf	(??___ftadd+0)+1,w
  5555  06D0  0D46               	rlf	(??___ftadd+0)+2,w
  5556  06D1  00C7               	movwf	(??___ftadd+3)+0
  5557  06D2  0847               	movf	(??___ftadd+3)+0,w
  5558  06D3  00C9               	movwf	(___ftadd@exp2)
  5559                           	line	92
  5560                           	
  5561  06D4                     l4781:	
  5562  06D4  084A               	movf	(___ftadd@exp1),w
  5563  06D5  1D03               	skipz
  5564  06D6  2ED8               	goto	u3430
  5565  06D7  2EE9               	goto	l4787
  5566  06D8                     u3430:
  5567                           	
  5568  06D8                     l4783:	
  5569  06D8  0849               	movf	(___ftadd@exp2),w
  5570  06D9  024A               	subwf	(___ftadd@exp1),w
  5571  06DA  1803               	skipnc
  5572  06DB  2EDD               	goto	u3441
  5573  06DC  2EDE               	goto	u3440
  5574  06DD                     u3441:
  5575  06DD  2EF1               	goto	l4791
  5576  06DE                     u3440:
  5577                           	
  5578  06DE                     l4785:	
  5579  06DE  034A               	decf	(___ftadd@exp1),w
  5580  06DF  3AFF               	xorlw	0ffh
  5581  06E0  0749               	addwf	(___ftadd@exp2),w
  5582  06E1  00C4               	movwf	(??___ftadd+0)+0
  5583  06E2  3019               	movlw	(019h)
  5584  06E3  0244               	subwf	0+(??___ftadd+0)+0,w
  5585  06E4  1C03               	skipc
  5586  06E5  2EE7               	goto	u3451
  5587  06E6  2EE8               	goto	u3450
  5588  06E7                     u3451:
  5589  06E7  2EF1               	goto	l4791
  5590  06E8                     u3450:
  5591  06E8  2EE9               	goto	l4787
  5592                           	
  5593  06E9                     l2371:	
  5594                           	line	93
  5595                           	
  5596  06E9                     l4787:	
  5597  06E9  0841               	movf	(___ftadd@f2),w
  5598  06EA  00BE               	movwf	(?___ftadd)
  5599  06EB  0842               	movf	(___ftadd@f2+1),w
  5600  06EC  00BF               	movwf	(?___ftadd+1)
  5601  06ED  0843               	movf	(___ftadd@f2+2),w
  5602  06EE  00C0               	movwf	(?___ftadd+2)
  5603  06EF  2FFF               	goto	l2372
  5604                           	
  5605  06F0                     l4789:	
  5606  06F0  2FFF               	goto	l2372
  5607                           	
  5608  06F1                     l2369:	
  5609                           	line	94
  5610                           	
  5611  06F1                     l4791:	
  5612  06F1  0849               	movf	(___ftadd@exp2),w
  5613  06F2  1D03               	skipz
  5614  06F3  2EF5               	goto	u3460
  5615  06F4  2F05               	goto	l2375
  5616  06F5                     u3460:
  5617                           	
  5618  06F5                     l4793:	
  5619  06F5  084A               	movf	(___ftadd@exp1),w
  5620  06F6  0249               	subwf	(___ftadd@exp2),w
  5621  06F7  1803               	skipnc
  5622  06F8  2EFA               	goto	u3471
  5623  06F9  2EFB               	goto	u3470
  5624  06FA                     u3471:
  5625  06FA  2F06               	goto	l4797
  5626  06FB                     u3470:
  5627                           	
  5628  06FB                     l4795:	
  5629  06FB  0349               	decf	(___ftadd@exp2),w
  5630  06FC  3AFF               	xorlw	0ffh
  5631  06FD  074A               	addwf	(___ftadd@exp1),w
  5632  06FE  00C4               	movwf	(??___ftadd+0)+0
  5633  06FF  3019               	movlw	(019h)
  5634  0700  0244               	subwf	0+(??___ftadd+0)+0,w
  5635  0701  1C03               	skipc
  5636  0702  2F04               	goto	u3481
  5637  0703  2F05               	goto	u3480
  5638  0704                     u3481:
  5639  0704  2F06               	goto	l4797
  5640  0705                     u3480:
  5641                           	
  5642  0705                     l2375:	
  5643                           	line	95
  5644  0705  2FFF               	goto	l2372
  5645                           	
  5646  0706                     l2373:	
  5647                           	line	96
  5648                           	
  5649  0706                     l4797:	
  5650  0706  3006               	movlw	(06h)
  5651  0707  00C4               	movwf	(??___ftadd+0)+0
  5652  0708  0844               	movf	(??___ftadd+0)+0,w
  5653  0709  00C8               	movwf	(___ftadd@sign)
  5654                           	line	97
  5655                           	
  5656  070A                     l4799:	
  5657  070A  1FC0               	btfss	(___ftadd@f1+2),(23)&7
  5658  070B  2F0D               	goto	u3491
  5659  070C  2F0E               	goto	u3490
  5660  070D                     u3491:
  5661  070D  2F0F               	goto	l2376
  5662  070E                     u3490:
  5663                           	line	98
  5664                           	
  5665  070E                     l4801:	
  5666  070E  17C8               	bsf	(___ftadd@sign)+(7/8),(7)&7
  5667                           	
  5668  070F                     l2376:	
  5669                           	line	99
  5670  070F  1FC3               	btfss	(___ftadd@f2+2),(23)&7
  5671  0710  2F12               	goto	u3501
  5672  0711  2F13               	goto	u3500
  5673  0712                     u3501:
  5674  0712  2F14               	goto	l2377
  5675  0713                     u3500:
  5676                           	line	100
  5677                           	
  5678  0713                     l4803:	
  5679  0713  1748               	bsf	(___ftadd@sign)+(6/8),(6)&7
  5680                           	
  5681  0714                     l2377:	
  5682                           	line	101
  5683  0714  17BF               	bsf	(___ftadd@f1)+(15/8),(15)&7
  5684                           	line	102
  5685                           	
  5686  0715                     l4805:	
  5687  0715  30FF               	movlw	0FFh
  5688  0716  05BE               	andwf	(___ftadd@f1),f
  5689  0717  30FF               	movlw	0FFh
  5690  0718  05BF               	andwf	(___ftadd@f1+1),f
  5691  0719  3000               	movlw	0
  5692  071A  05C0               	andwf	(___ftadd@f1+2),f
  5693                           	line	103
  5694                           	
  5695  071B                     l4807:	
  5696  071B  17C2               	bsf	(___ftadd@f2)+(15/8),(15)&7
  5697                           	line	104
  5698  071C  30FF               	movlw	0FFh
  5699  071D  05C1               	andwf	(___ftadd@f2),f
  5700  071E  30FF               	movlw	0FFh
  5701  071F  05C2               	andwf	(___ftadd@f2+1),f
  5702  0720  3000               	movlw	0
  5703  0721  05C3               	andwf	(___ftadd@f2+2),f
  5704                           	line	106
  5705  0722  0849               	movf	(___ftadd@exp2),w
  5706  0723  024A               	subwf	(___ftadd@exp1),w
  5707  0724  1803               	skipnc
  5708  0725  2F27               	goto	u3511
  5709  0726  2F28               	goto	u3510
  5710  0727                     u3511:
  5711  0727  2F59               	goto	l4819
  5712  0728                     u3510:
  5713  0728  2F29               	goto	l4809
  5714                           	line	109
  5715                           	
  5716  0729                     l2379:	
  5717                           	line	110
  5718                           	
  5719  0729                     l4809:	
  5720  0729  3001               	movlw	01h
  5721  072A                     u3525:
  5722  072A  1003               	clrc
  5723  072B  0DC1               	rlf	(___ftadd@f2),f
  5724  072C  0DC2               	rlf	(___ftadd@f2+1),f
  5725  072D  0DC3               	rlf	(___ftadd@f2+2),f
  5726  072E  3EFF               	addlw	-1
  5727  072F  1D03               	skipz
  5728  0730  2F2A               	goto	u3525
  5729                           	line	111
  5730  0731  3001               	movlw	low(01h)
  5731  0732  02C9               	subwf	(___ftadd@exp2),f
  5732                           	line	112
  5733                           	
  5734  0733                     l4811:	
  5735  0733  0849               	movf	(___ftadd@exp2),w
  5736  0734  064A               	xorwf	(___ftadd@exp1),w
  5737  0735  1903               	skipnz
  5738  0736  2F38               	goto	u3531
  5739  0737  2F39               	goto	u3530
  5740  0738                     u3531:
  5741  0738  2F51               	goto	l4817
  5742  0739                     u3530:
  5743                           	
  5744  0739                     l4813:	
  5745  0739  3001               	movlw	low(01h)
  5746  073A  02C8               	subwf	(___ftadd@sign),f
  5747  073B  0848               	movf	((___ftadd@sign)),w
  5748  073C  3907               	andlw	07h
  5749  073D  1D03               	btfss	status,2
  5750  073E  2F40               	goto	u3541
  5751  073F  2F41               	goto	u3540
  5752  0740                     u3541:
  5753  0740  2F29               	goto	l4809
  5754  0741                     u3540:
  5755  0741  2F51               	goto	l4817
  5756                           	
  5757  0742                     l2381:	
  5758  0742  2F51               	goto	l4817
  5759                           	
  5760  0743                     l2382:	
  5761                           	line	113
  5762  0743  2F51               	goto	l4817
  5763                           	
  5764  0744                     l2384:	
  5765                           	line	114
  5766                           	
  5767  0744                     l4815:	
  5768  0744  3001               	movlw	01h
  5769  0745                     u3555:
  5770  0745  1003               	clrc
  5771  0746  0CC0               	rrf	(___ftadd@f1+2),f
  5772  0747  0CBF               	rrf	(___ftadd@f1+1),f
  5773  0748  0CBE               	rrf	(___ftadd@f1),f
  5774  0749  3EFF               	addlw	-1
  5775  074A  1D03               	skipz
  5776  074B  2F45               	goto	u3555
  5777                           
  5778                           	line	115
  5779  074C  3001               	movlw	(01h)
  5780  074D  00C4               	movwf	(??___ftadd+0)+0
  5781  074E  0844               	movf	(??___ftadd+0)+0,w
  5782  074F  07CA               	addwf	(___ftadd@exp1),f
  5783  0750  2F51               	goto	l4817
  5784                           	line	116
  5785                           	
  5786  0751                     l2383:	
  5787                           	line	113
  5788                           	
  5789  0751                     l4817:	
  5790  0751  084A               	movf	(___ftadd@exp1),w
  5791  0752  0649               	xorwf	(___ftadd@exp2),w
  5792  0753  1D03               	skipz
  5793  0754  2F56               	goto	u3561
  5794  0755  2F57               	goto	u3560
  5795  0756                     u3561:
  5796  0756  2F44               	goto	l4815
  5797  0757                     u3560:
  5798  0757  2F90               	goto	l2386
  5799                           	
  5800  0758                     l2385:	
  5801                           	line	117
  5802  0758  2F90               	goto	l2386
  5803                           	
  5804  0759                     l2378:	
  5805                           	
  5806  0759                     l4819:	
  5807  0759  084A               	movf	(___ftadd@exp1),w
  5808  075A  0249               	subwf	(___ftadd@exp2),w
  5809  075B  1803               	skipnc
  5810  075C  2F5E               	goto	u3571
  5811  075D  2F5F               	goto	u3570
  5812  075E                     u3571:
  5813  075E  2F90               	goto	l2386
  5814  075F                     u3570:
  5815  075F  2F60               	goto	l4821
  5816                           	line	120
  5817                           	
  5818  0760                     l2388:	
  5819                           	line	121
  5820                           	
  5821  0760                     l4821:	
  5822  0760  3001               	movlw	01h
  5823  0761                     u3585:
  5824  0761  1003               	clrc
  5825  0762  0DBE               	rlf	(___ftadd@f1),f
  5826  0763  0DBF               	rlf	(___ftadd@f1+1),f
  5827  0764  0DC0               	rlf	(___ftadd@f1+2),f
  5828  0765  3EFF               	addlw	-1
  5829  0766  1D03               	skipz
  5830  0767  2F61               	goto	u3585
  5831                           	line	122
  5832  0768  3001               	movlw	low(01h)
  5833  0769  02CA               	subwf	(___ftadd@exp1),f
  5834                           	line	123
  5835                           	
  5836  076A                     l4823:	
  5837  076A  0849               	movf	(___ftadd@exp2),w
  5838  076B  064A               	xorwf	(___ftadd@exp1),w
  5839  076C  1903               	skipnz
  5840  076D  2F6F               	goto	u3591
  5841  076E  2F70               	goto	u3590
  5842  076F                     u3591:
  5843  076F  2F88               	goto	l4829
  5844  0770                     u3590:
  5845                           	
  5846  0770                     l4825:	
  5847  0770  3001               	movlw	low(01h)
  5848  0771  02C8               	subwf	(___ftadd@sign),f
  5849  0772  0848               	movf	((___ftadd@sign)),w
  5850  0773  3907               	andlw	07h
  5851  0774  1D03               	btfss	status,2
  5852  0775  2F77               	goto	u3601
  5853  0776  2F78               	goto	u3600
  5854  0777                     u3601:
  5855  0777  2F60               	goto	l4821
  5856  0778                     u3600:
  5857  0778  2F88               	goto	l4829
  5858                           	
  5859  0779                     l2390:	
  5860  0779  2F88               	goto	l4829
  5861                           	
  5862  077A                     l2391:	
  5863                           	line	124
  5864  077A  2F88               	goto	l4829
  5865                           	
  5866  077B                     l2393:	
  5867                           	line	125
  5868                           	
  5869  077B                     l4827:	
  5870  077B  3001               	movlw	01h
  5871  077C                     u3615:
  5872  077C  1003               	clrc
  5873  077D  0CC3               	rrf	(___ftadd@f2+2),f
  5874  077E  0CC2               	rrf	(___ftadd@f2+1),f
  5875  077F  0CC1               	rrf	(___ftadd@f2),f
  5876  0780  3EFF               	addlw	-1
  5877  0781  1D03               	skipz
  5878  0782  2F7C               	goto	u3615
  5879                           
  5880                           	line	126
  5881  0783  3001               	movlw	(01h)
  5882  0784  00C4               	movwf	(??___ftadd+0)+0
  5883  0785  0844               	movf	(??___ftadd+0)+0,w
  5884  0786  07C9               	addwf	(___ftadd@exp2),f
  5885  0787  2F88               	goto	l4829
  5886                           	line	127
  5887                           	
  5888  0788                     l2392:	
  5889                           	line	124
  5890                           	
  5891  0788                     l4829:	
  5892  0788  084A               	movf	(___ftadd@exp1),w
  5893  0789  0649               	xorwf	(___ftadd@exp2),w
  5894  078A  1D03               	skipz
  5895  078B  2F8D               	goto	u3621
  5896  078C  2F8E               	goto	u3620
  5897  078D                     u3621:
  5898  078D  2F7B               	goto	l4827
  5899  078E                     u3620:
  5900  078E  2F90               	goto	l2386
  5901                           	
  5902  078F                     l2394:	
  5903  078F  2F90               	goto	l2386
  5904                           	line	128
  5905                           	
  5906  0790                     l2387:	
  5907                           	line	129
  5908                           	
  5909  0790                     l2386:	
  5910  0790  1FC8               	btfss	(___ftadd@sign),(7)&7
  5911  0791  2F93               	goto	u3631
  5912  0792  2F94               	goto	u3630
  5913  0793                     u3631:
  5914  0793  2FA5               	goto	l4833
  5915  0794                     u3630:
  5916                           	line	131
  5917                           	
  5918  0794                     l4831:	
  5919  0794  30FF               	movlw	0FFh
  5920  0795  06BE               	xorwf	(___ftadd@f1),f
  5921  0796  30FF               	movlw	0FFh
  5922  0797  06BF               	xorwf	(___ftadd@f1+1),f
  5923  0798  30FF               	movlw	0FFh
  5924  0799  06C0               	xorwf	(___ftadd@f1+2),f
  5925                           	line	132
  5926  079A  3001               	movlw	01h
  5927  079B  07BE               	addwf	(___ftadd@f1),f
  5928  079C  3000               	movlw	0
  5929  079D  1803               	skipnc
  5930  079E  3001               movlw 1
  5931  079F  07BF               	addwf	(___ftadd@f1+1),f
  5932  07A0  3000               	movlw	0
  5933  07A1  1803               	skipnc
  5934  07A2  3001               movlw 1
  5935  07A3  07C0               	addwf	(___ftadd@f1+2),f
  5936  07A4  2FA5               	goto	l4833
  5937                           	line	133
  5938                           	
  5939  07A5                     l2395:	
  5940                           	line	134
  5941                           	
  5942  07A5                     l4833:	
  5943  07A5  1F48               	btfss	(___ftadd@sign),(6)&7
  5944  07A6  2FA8               	goto	u3641
  5945  07A7  2FA9               	goto	u3640
  5946  07A8                     u3641:
  5947  07A8  2FBA               	goto	l4837
  5948  07A9                     u3640:
  5949                           	line	136
  5950                           	
  5951  07A9                     l4835:	
  5952  07A9  30FF               	movlw	0FFh
  5953  07AA  06C1               	xorwf	(___ftadd@f2),f
  5954  07AB  30FF               	movlw	0FFh
  5955  07AC  06C2               	xorwf	(___ftadd@f2+1),f
  5956  07AD  30FF               	movlw	0FFh
  5957  07AE  06C3               	xorwf	(___ftadd@f2+2),f
  5958                           	line	137
  5959  07AF  3001               	movlw	01h
  5960  07B0  07C1               	addwf	(___ftadd@f2),f
  5961  07B1  3000               	movlw	0
  5962  07B2  1803               	skipnc
  5963  07B3  3001               movlw 1
  5964  07B4  07C2               	addwf	(___ftadd@f2+1),f
  5965  07B5  3000               	movlw	0
  5966  07B6  1803               	skipnc
  5967  07B7  3001               movlw 1
  5968  07B8  07C3               	addwf	(___ftadd@f2+2),f
  5969  07B9  2FBA               	goto	l4837
  5970                           	line	138
  5971                           	
  5972  07BA                     l2396:	
  5973                           	line	139
  5974                           	
  5975  07BA                     l4837:	
  5976  07BA  01C8               	clrf	(___ftadd@sign)
  5977                           	line	140
  5978  07BB  083E               	movf	(___ftadd@f1),w
  5979  07BC  07C1               	addwf	(___ftadd@f2),f
  5980  07BD  083F               	movf	(___ftadd@f1+1),w
  5981  07BE  1103               	clrz
  5982  07BF  1803               	skipnc
  5983  07C0  0A3F               	incf	(___ftadd@f1+1),w
  5984  07C1  1903               	skipnz
  5985  07C2  2FC4               	goto	u3651
  5986  07C3  07C2               	addwf	(___ftadd@f2+1),f
  5987  07C4                     u3651:
  5988  07C4  0840               	movf	(___ftadd@f1+2),w
  5989  07C5  1103               	clrz
  5990  07C6  1803               	skipnc
  5991  07C7  0A40               	incf	(___ftadd@f1+2),w
  5992  07C8  1903               	skipnz
  5993  07C9  2FCB               	goto	u3652
  5994  07CA  07C3               	addwf	(___ftadd@f2+2),f
  5995  07CB                     u3652:
  5996                           
  5997                           	line	141
  5998                           	
  5999  07CB                     l4839:	
  6000  07CB  1FC3               	btfss	(___ftadd@f2+2),(23)&7
  6001  07CC  2FCE               	goto	u3661
  6002  07CD  2FCF               	goto	u3660
  6003  07CE                     u3661:
  6004  07CE  2FE3               	goto	l4845
  6005  07CF                     u3660:
  6006                           	line	142
  6007                           	
  6008  07CF                     l4841:	
  6009  07CF  30FF               	movlw	0FFh
  6010  07D0  06C1               	xorwf	(___ftadd@f2),f
  6011  07D1  30FF               	movlw	0FFh
  6012  07D2  06C2               	xorwf	(___ftadd@f2+1),f
  6013  07D3  30FF               	movlw	0FFh
  6014  07D4  06C3               	xorwf	(___ftadd@f2+2),f
  6015                           	line	143
  6016  07D5  3001               	movlw	01h
  6017  07D6  07C1               	addwf	(___ftadd@f2),f
  6018  07D7  3000               	movlw	0
  6019  07D8  1803               	skipnc
  6020  07D9  3001               movlw 1
  6021  07DA  07C2               	addwf	(___ftadd@f2+1),f
  6022  07DB  3000               	movlw	0
  6023  07DC  1803               	skipnc
  6024  07DD  3001               movlw 1
  6025  07DE  07C3               	addwf	(___ftadd@f2+2),f
  6026                           	line	144
  6027                           	
  6028  07DF                     l4843:	
  6029  07DF  01C8               	clrf	(___ftadd@sign)
  6030  07E0  1403               	bsf	status,0
  6031  07E1  0DC8               	rlf	(___ftadd@sign),f
  6032  07E2  2FE3               	goto	l4845
  6033                           	line	145
  6034                           	
  6035  07E3                     l2397:	
  6036                           	line	146
  6037                           	
  6038  07E3                     l4845:	
  6039  07E3  0841               	movf	(___ftadd@f2),w
  6040  07E4  00F0               	movwf	(?___ftpack)
  6041  07E5  0842               	movf	(___ftadd@f2+1),w
  6042  07E6  00F1               	movwf	(?___ftpack+1)
  6043  07E7  0843               	movf	(___ftadd@f2+2),w
  6044  07E8  00F2               	movwf	(?___ftpack+2)
  6045  07E9  084A               	movf	(___ftadd@exp1),w
  6046  07EA  00C4               	movwf	(??___ftadd+0)+0
  6047  07EB  0844               	movf	(??___ftadd+0)+0,w
  6048  07EC  00F3               	movwf	0+(?___ftpack)+03h
  6049  07ED  0848               	movf	(___ftadd@sign),w
  6050  07EE  00C5               	movwf	(??___ftadd+1)+0
  6051  07EF  0845               	movf	(??___ftadd+1)+0,w
  6052  07F0  00F4               	movwf	0+(?___ftpack)+04h
  6053  07F1  120A  158A  2785   	fcall	___ftpack
              120A  118A         
  6054  07F6  0870               	movf	(0+(?___ftpack)),w
  6055  07F7  1283               	bcf	status, 5	;RP0=0, select bank0
  6056  07F8  1303               	bcf	status, 6	;RP1=0, select bank0
  6057  07F9  00BE               	movwf	(?___ftadd)
  6058  07FA  0871               	movf	(1+(?___ftpack)),w
  6059  07FB  00BF               	movwf	(?___ftadd+1)
  6060  07FC  0872               	movf	(2+(?___ftpack)),w
  6061  07FD  00C0               	movwf	(?___ftadd+2)
  6062  07FE  2FFF               	goto	l2372
  6063                           	
  6064  07FF                     l4847:	
  6065                           	line	148
  6066                           	
  6067  07FF                     l2372:	
  6068  07FF  0008               	return
  6069                           	opt stack 0
  6070                           GLOBAL	__end_of___ftadd
  6071  0800                     	__end_of___ftadd:
  6072 ;; =============== function ___ftadd ends ============
  6073                           
  6074                           	signat	___ftadd,8315
  6075                           	global	_send_lcd_data
  6076                           psect	text905,local,class=CODE,delta=2
  6077                           global __ptext905
  6078  0CFF                     __ptext905:
  6079                           
  6080 ;; *************** function _send_lcd_data *****************
  6081 ;; Defined at:
  6082 ;;		line 600 in file "../main.c"
  6083 ;; Parameters:    Size  Location     Type
  6084 ;;  b_rs            1    wreg     unsigned char 
  6085 ;;  uc_data         1    1[COMMON] unsigned char 
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;  b_rs            1    4[COMMON] unsigned char 
  6088 ;; Return value:  Size  Location     Type
  6089 ;;		None               void
  6090 ;; Registers used:
  6091 ;;		wreg, status,2, status,0, pclath, cstack
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6097 ;;      Params:         1       0       0       0       0
  6098 ;;      Locals:         1       0       0       0       0
  6099 ;;      Temps:          2       0       0       0       0
  6100 ;;      Totals:         4       0       0       0       0
  6101 ;;Total ram usage:        4 bytes
  6102 ;; Hardware stack levels used:    1
  6103 ;; Hardware stack levels required when called:    1
  6104 ;; This function calls:
  6105 ;;		_set_lcd_rs
  6106 ;;		_set_lcd_data
  6107 ;;		_set_lcd_e
  6108 ;; This function is called by:
  6109 ;;		_lcd_init
  6110 ;;		_lcd_clr
  6111 ;;		_lcd_2ndline
  6112 ;;		_lcd_goto
  6113 ;;		_lcd_putchar
  6114 ;;		_lcd_home
  6115 ;; This function uses a non-reentrant model
  6116 ;;
  6117                           psect	text905
  6118                           	file	"../main.c"
  6119                           	line	600
  6120                           	global	__size_of_send_lcd_data
  6121  002B                     	__size_of_send_lcd_data	equ	__end_of_send_lcd_data-_send_lcd_data
  6122                           	
  6123  0CFF                     _send_lcd_data:	
  6124                           	opt	stack 2
  6125                           ; Regs used in _send_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  6126                           ;send_lcd_data@b_rs stored from wreg
  6127                           	line	603
  6128  0CFF  00F4               	movwf	(send_lcd_data@b_rs)
  6129                           	
  6130  0D00                     l4773:	
  6131                           ;main.c: 603: set_lcd_rs(b_rs);
  6132  0D00  0874               	movf	(send_lcd_data@b_rs),w
  6133  0D01  120A  158A  2371   	fcall	_set_lcd_rs
              120A  158A         
  6134                           	line	604
  6135                           ;main.c: 604: set_lcd_data(uc_data);
  6136  0D06  0871               	movf	(send_lcd_data@uc_data),w
  6137  0D07  120A  158A  2341   	fcall	_set_lcd_data
              120A  158A         
  6138                           	line	607
  6139                           ;main.c: 607: set_lcd_e(0);
  6140  0D0C  3000               	movlw	(0)
  6141  0D0D  120A  158A  2365   	fcall	_set_lcd_e
              120A  158A         
  6142                           	line	608
  6143                           	
  6144  0D12                     l4775:	
  6145                           ;main.c: 608: _delay((unsigned long)((2)*(20000000/4000.0)));
  6146                           	opt asmopt_off
  6147  0D12  300D               movlw	13
  6148  0D13  00F3               movwf	((??_send_lcd_data+0)+0+1),f
  6149  0D14  30FB               	movlw	251
  6150  0D15  00F2               movwf	((??_send_lcd_data+0)+0),f
  6151  0D16                     u4247:
  6152  0D16  0BF2               	decfsz	((??_send_lcd_data+0)+0),f
  6153  0D17  2D16               	goto	u4247
  6154  0D18  0BF3               	decfsz	((??_send_lcd_data+0)+0+1),f
  6155  0D19  2D16               	goto	u4247
  6156  0D1A  2D1B               	nop2
  6157                           opt asmopt_on
  6158                           
  6159                           	line	609
  6160                           	
  6161  0D1B                     l4777:	
  6162                           ;main.c: 609: set_lcd_e(1);
  6163  0D1B  3001               	movlw	(01h)
  6164  0D1C  120A  158A  2365   	fcall	_set_lcd_e
              120A  158A         
  6165                           	line	610
  6166                           ;main.c: 610: _delay((unsigned long)((1)*(20000000/4000.0)));
  6167                           	opt asmopt_off
  6168  0D21  3007               movlw	7
  6169  0D22  00F3               movwf	((??_send_lcd_data+0)+0+1),f
  6170  0D23  307D               	movlw	125
  6171  0D24  00F2               movwf	((??_send_lcd_data+0)+0),f
  6172  0D25                     u4257:
  6173  0D25  0BF2               	decfsz	((??_send_lcd_data+0)+0),f
  6174  0D26  2D25               	goto	u4257
  6175  0D27  0BF3               	decfsz	((??_send_lcd_data+0)+0+1),f
  6176  0D28  2D25               	goto	u4257
  6177                           opt asmopt_on
  6178                           
  6179                           	line	611
  6180                           	
  6181  0D29                     l1289:	
  6182  0D29  0008               	return
  6183                           	opt stack 0
  6184                           GLOBAL	__end_of_send_lcd_data
  6185  0D2A                     	__end_of_send_lcd_data:
  6186 ;; =============== function _send_lcd_data ends ============
  6187                           
  6188                           	signat	_send_lcd_data,8312
  6189                           	global	_motor
  6190                           psect	text906,local,class=CODE,delta=2
  6191                           global __ptext906
  6192  0B97                     __ptext906:
  6193                           
  6194 ;; *************** function _motor *****************
  6195 ;; Defined at:
  6196 ;;		line 517 in file "../main.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;  uc_left_moto    1    wreg     unsigned char 
  6199 ;;  uc_right_mot    1    1[COMMON] unsigned char 
  6200 ;; Auto vars:     Size  Location     Type
  6201 ;;  uc_left_moto    1    2[COMMON] unsigned char 
  6202 ;; Return value:  Size  Location     Type
  6203 ;;		None               void
  6204 ;; Registers used:
  6205 ;;		wreg, status,2, status,0, pclath, cstack
  6206 ;; Tracked objects:
  6207 ;;		On entry : 0/0
  6208 ;;		On exit  : 0/0
  6209 ;;		Unchanged: 0/0
  6210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6211 ;;      Params:         1       0       0       0       0
  6212 ;;      Locals:         1       0       0       0       0
  6213 ;;      Temps:          0       0       0       0       0
  6214 ;;      Totals:         2       0       0       0       0
  6215 ;;Total ram usage:        2 bytes
  6216 ;; Hardware stack levels used:    1
  6217 ;; Hardware stack levels required when called:    1
  6218 ;; This function calls:
  6219 ;;		_set_pwmr
  6220 ;;		_set_pwml
  6221 ;; This function is called by:
  6222 ;;		_main
  6223 ;;		_jfolo
  6224 ;;		_junction_follow
  6225 ;;		_line_follow
  6226 ;;		_Calibrate
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           psect	text906
  6230                           	file	"../main.c"
  6231                           	line	517
  6232                           	global	__size_of_motor
  6233  000E                     	__size_of_motor	equ	__end_of_motor-_motor
  6234                           	
  6235  0B97                     _motor:	
  6236                           	opt	stack 5
  6237                           ; Regs used in _motor: [wreg+status,2+status,0+pclath+cstack]
  6238                           ;motor@uc_left_motor_speed stored from wreg
  6239                           	line	519
  6240  0B97  00F2               	movwf	(motor@uc_left_motor_speed)
  6241                           	
  6242  0B98                     l4771:	
  6243                           ;main.c: 519: set_pwmr(uc_right_motor_speed);
  6244  0B98  0871               	movf	(motor@uc_right_motor_speed),w
  6245  0B99  120A  158A  2335   	fcall	_set_pwmr
              120A  158A         
  6246                           	line	520
  6247                           ;main.c: 520: set_pwml(uc_left_motor_speed);
  6248  0B9E  0872               	movf	(motor@uc_left_motor_speed),w
  6249  0B9F  120A  158A  233B   	fcall	_set_pwml
              120A  158A         
  6250                           	line	521
  6251                           	
  6252  0BA4                     l1256:	
  6253  0BA4  0008               	return
  6254                           	opt stack 0
  6255                           GLOBAL	__end_of_motor
  6256  0BA5                     	__end_of_motor:
  6257 ;; =============== function _motor ends ============
  6258                           
  6259                           	signat	_motor,8312
  6260                           	global	_UART_DUMP
  6261                           psect	text907,local,class=CODE,delta=2
  6262                           global __ptext907
  6263  0BA5                     __ptext907:
  6264                           
  6265 ;; *************** function _UART_DUMP *****************
  6266 ;; Defined at:
  6267 ;;		line 714 in file "../main.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;		None
  6270 ;; Auto vars:     Size  Location     Type
  6271 ;;  dump            1    7[COMMON] unsigned char 
  6272 ;; Return value:  Size  Location     Type
  6273 ;;		None               void
  6274 ;; Registers used:
  6275 ;;		wreg, status,2, status,0, pclath, cstack
  6276 ;; Tracked objects:
  6277 ;;		On entry : 0/0
  6278 ;;		On exit  : 0/0
  6279 ;;		Unchanged: 0/0
  6280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6281 ;;      Params:         0       0       0       0       0
  6282 ;;      Locals:         1       0       0       0       0
  6283 ;;      Temps:          1       0       0       0       0
  6284 ;;      Totals:         2       0       0       0       0
  6285 ;;Total ram usage:        2 bytes
  6286 ;; Hardware stack levels used:    1
  6287 ;; Hardware stack levels required when called:    1
  6288 ;; This function calls:
  6289 ;;		_UART_REC
  6290 ;; This function is called by:
  6291 ;;		_LSA08_GetPosition
  6292 ;; This function uses a non-reentrant model
  6293 ;;
  6294                           psect	text907
  6295                           	file	"../main.c"
  6296                           	line	714
  6297                           	global	__size_of_UART_DUMP
  6298  0012                     	__size_of_UART_DUMP	equ	__end_of_UART_DUMP-_UART_DUMP
  6299                           	
  6300  0BA5                     _UART_DUMP:	
  6301                           	opt	stack 4
  6302                           ; Regs used in _UART_DUMP: [wreg+status,2+status,0+pclath+cstack]
  6303                           	line	717
  6304                           	
  6305  0BA5                     l4765:	
  6306                           ;main.c: 715: unsigned char dump;
  6307                           ;main.c: 717: while (RCIF == 1)
  6308  0BA5  2BAF               	goto	l4769
  6309                           	
  6310  0BA6                     l1334:	
  6311                           	line	719
  6312                           	
  6313  0BA6                     l4767:	
  6314                           ;main.c: 718: {
  6315                           ;main.c: 719: dump=UART_REC();
  6316  0BA6  120A  158A  26AB   	fcall	_UART_REC
              120A  158A         
  6317  0BAB  00F6               	movwf	(??_UART_DUMP+0)+0
  6318  0BAC  0876               	movf	(??_UART_DUMP+0)+0,w
  6319  0BAD  00F7               	movwf	(UART_DUMP@dump)
  6320  0BAE  2BAF               	goto	l4769
  6321                           	line	720
  6322                           	
  6323  0BAF                     l1333:	
  6324                           	line	717
  6325                           	
  6326  0BAF                     l4769:	
  6327  0BAF  1283               	bcf	status, 5	;RP0=0, select bank0
  6328  0BB0  1303               	bcf	status, 6	;RP1=0, select bank0
  6329  0BB1  1A8C               	btfsc	(101/8),(101)&7
  6330  0BB2  2BB4               	goto	u3421
  6331  0BB3  2BB5               	goto	u3420
  6332  0BB4                     u3421:
  6333  0BB4  2BA6               	goto	l4767
  6334  0BB5                     u3420:
  6335  0BB5  2BB6               	goto	l1336
  6336                           	
  6337  0BB6                     l1335:	
  6338                           	line	721
  6339                           	
  6340  0BB6                     l1336:	
  6341  0BB6  0008               	return
  6342                           	opt stack 0
  6343                           GLOBAL	__end_of_UART_DUMP
  6344  0BB7                     	__end_of_UART_DUMP:
  6345 ;; =============== function _UART_DUMP ends ============
  6346                           
  6347                           	signat	_UART_DUMP,88
  6348                           	global	_UART_RESPONSE
  6349                           psect	text908,local,class=CODE,delta=2
  6350                           global __ptext908
  6351  0D5D                     __ptext908:
  6352                           
  6353 ;; *************** function _UART_RESPONSE *****************
  6354 ;; Defined at:
  6355 ;;		line 227 in file "../LSA08.h"
  6356 ;; Parameters:    Size  Location     Type
  6357 ;;  rec_bytes       1    wreg     unsigned char 
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;  rec_bytes       1    7[COMMON] unsigned char 
  6360 ;; Return value:  Size  Location     Type
  6361 ;;                  1    wreg      unsigned char 
  6362 ;; Registers used:
  6363 ;;		wreg, status,2, status,0, pclath, cstack
  6364 ;; Tracked objects:
  6365 ;;		On entry : 0/0
  6366 ;;		On exit  : 0/0
  6367 ;;		Unchanged: 0/0
  6368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6369 ;;      Params:         0       0       0       0       0
  6370 ;;      Locals:         1       0       0       0       0
  6371 ;;      Temps:          1       0       0       0       0
  6372 ;;      Totals:         2       0       0       0       0
  6373 ;;Total ram usage:        2 bytes
  6374 ;; Hardware stack levels used:    1
  6375 ;; Hardware stack levels required when called:    1
  6376 ;; This function calls:
  6377 ;;		_UART_REC
  6378 ;; This function is called by:
  6379 ;;		_SEND_PACKET
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           psect	text908
  6383                           	file	"../LSA08.h"
  6384                           	line	227
  6385                           	global	__size_of_UART_RESPONSE
  6386  0035                     	__size_of_UART_RESPONSE	equ	__end_of_UART_RESPONSE-_UART_RESPONSE
  6387                           	
  6388  0D5D                     _UART_RESPONSE:	
  6389                           	opt	stack 2
  6390                           ; Regs used in _UART_RESPONSE: [wreg+status,2+status,0+pclath+cstack]
  6391                           ;UART_RESPONSE@rec_bytes stored from wreg
  6392                           	line	229
  6393  0D5D  00F7               	movwf	(UART_RESPONSE@rec_bytes)
  6394                           	
  6395  0D5E                     l4739:	
  6396                           ;LSA08.h: 229: rec[0]=UART_REC();
  6397  0D5E  120A  158A  26AB   	fcall	_UART_REC
              120A  158A         
  6398  0D63  00F6               	movwf	(??_UART_RESPONSE+0)+0
  6399  0D64  0876               	movf	(??_UART_RESPONSE+0)+0,w
  6400  0D65  1283               	bcf	status, 5	;RP0=0, select bank0
  6401  0D66  1303               	bcf	status, 6	;RP1=0, select bank0
  6402  0D67  00E6               	movwf	(_rec)
  6403                           	line	230
  6404                           	
  6405  0D68                     l4741:	
  6406                           ;LSA08.h: 230: if(rec_bytes==1)
  6407  0D68  0877               	movf	(UART_RESPONSE@rec_bytes),w
  6408  0D69  3A01               	xorlw	01h
  6409  0D6A  1D03               	skipz
  6410  0D6B  2D6D               	goto	u3391
  6411  0D6C  2D6E               	goto	u3390
  6412  0D6D                     u3391:
  6413  0D6D  2D70               	goto	l4745
  6414  0D6E                     u3390:
  6415  0D6E  2D91               	goto	l1104
  6416                           	line	231
  6417                           	
  6418  0D6F                     l4743:	
  6419                           ;LSA08.h: 231: return;
  6420  0D6F  2D91               	goto	l1104
  6421                           	
  6422  0D70                     l1103:	
  6423                           	line	233
  6424                           	
  6425  0D70                     l4745:	
  6426                           ;LSA08.h: 233: rec[1]=UART_REC();
  6427  0D70  120A  158A  26AB   	fcall	_UART_REC
              120A  158A         
  6428  0D75  00F6               	movwf	(??_UART_RESPONSE+0)+0
  6429  0D76  0876               	movf	(??_UART_RESPONSE+0)+0,w
  6430  0D77  1283               	bcf	status, 5	;RP0=0, select bank0
  6431  0D78  1303               	bcf	status, 6	;RP1=0, select bank0
  6432  0D79  00E7               	movwf	0+(_rec)+01h
  6433                           	line	236
  6434                           	
  6435  0D7A                     l4747:	
  6436                           ;LSA08.h: 236: if (rec[0]== 'O') {
  6437  0D7A  0866               	movf	(_rec),w
  6438  0D7B  3A4F               	xorlw	04Fh
  6439  0D7C  1D03               	skipz
  6440  0D7D  2D7F               	goto	u3401
  6441  0D7E  2D80               	goto	u3400
  6442  0D7F                     u3401:
  6443  0D7F  2D8E               	goto	l4761
  6444  0D80                     u3400:
  6445                           	line	237
  6446                           	
  6447  0D80                     l4749:	
  6448                           ;LSA08.h: 237: if (rec[1] == 'K') {
  6449  0D80  0867               	movf	0+(_rec)+01h,w
  6450  0D81  3A4B               	xorlw	04Bh
  6451  0D82  1D03               	skipz
  6452  0D83  2D85               	goto	u3411
  6453  0D84  2D86               	goto	u3410
  6454  0D85                     u3411:
  6455  0D85  2D8A               	goto	l4757
  6456  0D86                     u3410:
  6457                           	line	238
  6458                           	
  6459  0D86                     l4751:	
  6460                           ;LSA08.h: 238: return (1);
  6461  0D86  3001               	movlw	(01h)
  6462  0D87  2D91               	goto	l1104
  6463                           	
  6464  0D88                     l4753:	
  6465  0D88  2D91               	goto	l1104
  6466                           	line	239
  6467                           	
  6468  0D89                     l4755:	
  6469                           ;LSA08.h: 239: } else
  6470  0D89  2D91               	goto	l1104
  6471                           	
  6472  0D8A                     l1106:	
  6473                           	line	240
  6474                           	
  6475  0D8A                     l4757:	
  6476                           ;LSA08.h: 240: return (0);
  6477  0D8A  3000               	movlw	(0)
  6478  0D8B  2D91               	goto	l1104
  6479                           	
  6480  0D8C                     l4759:	
  6481  0D8C  2D91               	goto	l1104
  6482                           	
  6483  0D8D                     l1107:	
  6484                           	line	241
  6485                           ;LSA08.h: 241: }
  6486  0D8D  2D91               	goto	l1104
  6487                           	line	242
  6488                           	
  6489  0D8E                     l1105:	
  6490                           	line	243
  6491                           	
  6492  0D8E                     l4761:	
  6493                           ;LSA08.h: 242: else
  6494                           ;LSA08.h: 243: return(0);
  6495  0D8E  3000               	movlw	(0)
  6496  0D8F  2D91               	goto	l1104
  6497                           	
  6498  0D90                     l4763:	
  6499  0D90  2D91               	goto	l1104
  6500                           	
  6501  0D91                     l1108:	
  6502                           	line	244
  6503                           	
  6504  0D91                     l1104:	
  6505  0D91  0008               	return
  6506                           	opt stack 0
  6507                           GLOBAL	__end_of_UART_RESPONSE
  6508  0D92                     	__end_of_UART_RESPONSE:
  6509 ;; =============== function _UART_RESPONSE ends ============
  6510                           
  6511                           	signat	_UART_RESPONSE,4217
  6512                           	global	___fttol
  6513                           psect	text909,local,class=CODE,delta=2
  6514                           global __ptext909
  6515  0258                     __ptext909:
  6516                           
  6517 ;; *************** function ___fttol *****************
  6518 ;; Defined at:
  6519 ;;		line 45 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\fttol.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;  f1              3    8[COMMON] float 
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;  lval            4    5[BANK0 ] unsigned long 
  6524 ;;  exp1            1    9[BANK0 ] unsigned char 
  6525 ;;  sign1           1    4[BANK0 ] unsigned char 
  6526 ;; Return value:  Size  Location     Type
  6527 ;;                  4    8[COMMON] long 
  6528 ;; Registers used:
  6529 ;;		wreg, status,2, status,0
  6530 ;; Tracked objects:
  6531 ;;		On entry : 0/0
  6532 ;;		On exit  : 0/0
  6533 ;;		Unchanged: 0/0
  6534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6535 ;;      Params:         4       0       0       0       0
  6536 ;;      Locals:         0       6       0       0       0
  6537 ;;      Temps:          0       4       0       0       0
  6538 ;;      Totals:         4      10       0       0       0
  6539 ;;Total ram usage:       14 bytes
  6540 ;; Hardware stack levels used:    1
  6541 ;; This function calls:
  6542 ;;		Nothing
  6543 ;; This function is called by:
  6544 ;;		_line_follow
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           psect	text909
  6548                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\fttol.c"
  6549                           	line	45
  6550                           	global	__size_of___fttol
  6551  00A6                     	__size_of___fttol	equ	__end_of___fttol-___fttol
  6552                           	
  6553  0258                     ___fttol:	
  6554                           	opt	stack 6
  6555                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6556                           	line	49
  6557                           	
  6558  0258                     l4637:	
  6559  0258  0878               	movf	(___fttol@f1),w
  6560  0259  1283               	bcf	status, 5	;RP0=0, select bank0
  6561  025A  1303               	bcf	status, 6	;RP1=0, select bank0
  6562  025B  00A0               	movwf	((??___fttol+0)+0)
  6563  025C  0879               	movf	(___fttol@f1+1),w
  6564  025D  00A1               	movwf	((??___fttol+0)+0+1)
  6565  025E  087A               	movf	(___fttol@f1+2),w
  6566  025F  00A2               	movwf	((??___fttol+0)+0+2)
  6567  0260  1003               	clrc
  6568  0261  0D21               	rlf	(??___fttol+0)+1,w
  6569  0262  0D22               	rlf	(??___fttol+0)+2,w
  6570  0263  00A3               	movwf	(??___fttol+3)+0
  6571  0264  0823               	movf	(??___fttol+3)+0,w
  6572  0265  00A9               	movwf	(___fttol@exp1)
  6573  0266  08A9               	movf	((___fttol@exp1)),f
  6574  0267  1D03               	skipz
  6575  0268  2A6A               	goto	u3221
  6576  0269  2A6B               	goto	u3220
  6577  026A                     u3221:
  6578  026A  2A75               	goto	l4643
  6579  026B                     u3220:
  6580                           	line	50
  6581                           	
  6582  026B                     l4639:	
  6583  026B  3000               	movlw	0
  6584  026C  00FB               	movwf	(?___fttol+3)
  6585  026D  3000               	movlw	0
  6586  026E  00FA               	movwf	(?___fttol+2)
  6587  026F  3000               	movlw	0
  6588  0270  00F9               	movwf	(?___fttol+1)
  6589  0271  3000               	movlw	0
  6590  0272  00F8               	movwf	(?___fttol)
  6591                           
  6592  0273  2AFD               	goto	l2435
  6593                           	
  6594  0274                     l4641:	
  6595  0274  2AFD               	goto	l2435
  6596                           	
  6597  0275                     l2434:	
  6598                           	line	51
  6599                           	
  6600  0275                     l4643:	
  6601  0275  0878               	movf	(___fttol@f1),w
  6602  0276  00A0               	movwf	((??___fttol+0)+0)
  6603  0277  0879               	movf	(___fttol@f1+1),w
  6604  0278  00A1               	movwf	((??___fttol+0)+0+1)
  6605  0279  087A               	movf	(___fttol@f1+2),w
  6606  027A  00A2               	movwf	((??___fttol+0)+0+2)
  6607  027B  3017               	movlw	017h
  6608  027C                     u3235:
  6609  027C  1003               	clrc
  6610  027D  0CA2               	rrf	(??___fttol+0)+2,f
  6611  027E  0CA1               	rrf	(??___fttol+0)+1,f
  6612  027F  0CA0               	rrf	(??___fttol+0)+0,f
  6613  0280                     u3230:
  6614  0280  3EFF               	addlw	-1
  6615  0281  1D03               	skipz
  6616  0282  2A7C               	goto	u3235
  6617  0283  0820               	movf	0+(??___fttol+0)+0,w
  6618  0284  00A3               	movwf	(??___fttol+3)+0
  6619  0285  0823               	movf	(??___fttol+3)+0,w
  6620  0286  00A4               	movwf	(___fttol@sign1)
  6621                           	line	52
  6622                           	
  6623  0287                     l4645:	
  6624  0287  17F9               	bsf	(___fttol@f1)+(15/8),(15)&7
  6625                           	line	53
  6626                           	
  6627  0288                     l4647:	
  6628  0288  30FF               	movlw	0FFh
  6629  0289  05F8               	andwf	(___fttol@f1),f
  6630  028A  30FF               	movlw	0FFh
  6631  028B  05F9               	andwf	(___fttol@f1+1),f
  6632  028C  3000               	movlw	0
  6633  028D  05FA               	andwf	(___fttol@f1+2),f
  6634                           	line	54
  6635                           	
  6636  028E                     l4649:	
  6637  028E  0878               	movf	(___fttol@f1),w
  6638  028F  00A5               	movwf	(___fttol@lval)
  6639  0290  0879               	movf	(___fttol@f1+1),w
  6640  0291  00A6               	movwf	((___fttol@lval))+1
  6641  0292  087A               	movf	(___fttol@f1+2),w
  6642  0293  00A7               	movwf	((___fttol@lval))+2
  6643  0294  01A8               	clrf	((___fttol@lval))+3
  6644                           	line	55
  6645                           	
  6646  0295                     l4651:	
  6647  0295  308E               	movlw	low(08Eh)
  6648  0296  02A9               	subwf	(___fttol@exp1),f
  6649                           	line	56
  6650                           	
  6651  0297                     l4653:	
  6652  0297  1FA9               	btfss	(___fttol@exp1),7
  6653  0298  2A9A               	goto	u3241
  6654  0299  2A9B               	goto	u3240
  6655  029A                     u3241:
  6656  029A  2AC0               	goto	l4663
  6657  029B                     u3240:
  6658                           	line	57
  6659                           	
  6660  029B                     l4655:	
  6661  029B  0829               	movf	(___fttol@exp1),w
  6662  029C  3A80               	xorlw	80h
  6663  029D  3E8F               	addlw	-((-15)^80h)
  6664  029E  1803               	skipnc
  6665  029F  2AA1               	goto	u3251
  6666  02A0  2AA2               	goto	u3250
  6667  02A1                     u3251:
  6668  02A1  2AAD               	goto	l4661
  6669  02A2                     u3250:
  6670                           	line	58
  6671                           	
  6672  02A2                     l4657:	
  6673  02A2  3000               	movlw	0
  6674  02A3  00FB               	movwf	(?___fttol+3)
  6675  02A4  3000               	movlw	0
  6676  02A5  00FA               	movwf	(?___fttol+2)
  6677  02A6  3000               	movlw	0
  6678  02A7  00F9               	movwf	(?___fttol+1)
  6679  02A8  3000               	movlw	0
  6680  02A9  00F8               	movwf	(?___fttol)
  6681                           
  6682  02AA  2AFD               	goto	l2435
  6683                           	
  6684  02AB                     l4659:	
  6685  02AB  2AFD               	goto	l2435
  6686                           	
  6687  02AC                     l2437:	
  6688  02AC  2AAD               	goto	l4661
  6689                           	line	59
  6690                           	
  6691  02AD                     l2438:	
  6692                           	line	60
  6693                           	
  6694  02AD                     l4661:	
  6695  02AD  3001               	movlw	01h
  6696  02AE                     u3265:
  6697  02AE  1003               	clrc
  6698  02AF  0CA8               	rrf	(___fttol@lval+3),f
  6699  02B0  0CA7               	rrf	(___fttol@lval+2),f
  6700  02B1  0CA6               	rrf	(___fttol@lval+1),f
  6701  02B2  0CA5               	rrf	(___fttol@lval),f
  6702  02B3  3EFF               	addlw	-1
  6703  02B4  1D03               	skipz
  6704  02B5  2AAE               	goto	u3265
  6705                           
  6706                           	line	61
  6707  02B6  3001               	movlw	(01h)
  6708  02B7  00A0               	movwf	(??___fttol+0)+0
  6709  02B8  0820               	movf	(??___fttol+0)+0,w
  6710  02B9  07A9               	addwf	(___fttol@exp1),f
  6711  02BA  1D03               	btfss	status,2
  6712  02BB  2ABD               	goto	u3271
  6713  02BC  2ABE               	goto	u3270
  6714  02BD                     u3271:
  6715  02BD  2AAD               	goto	l4661
  6716  02BE                     u3270:
  6717  02BE  2AE4               	goto	l4673
  6718                           	
  6719  02BF                     l2439:	
  6720                           	line	62
  6721  02BF  2AE4               	goto	l4673
  6722                           	
  6723  02C0                     l2436:	
  6724                           	line	63
  6725                           	
  6726  02C0                     l4663:	
  6727  02C0  3018               	movlw	(018h)
  6728  02C1  0229               	subwf	(___fttol@exp1),w
  6729  02C2  1C03               	skipc
  6730  02C3  2AC5               	goto	u3281
  6731  02C4  2AC6               	goto	u3280
  6732  02C5                     u3281:
  6733  02C5  2ADD               	goto	l4671
  6734  02C6                     u3280:
  6735                           	line	64
  6736                           	
  6737  02C6                     l4665:	
  6738  02C6  3000               	movlw	0
  6739  02C7  00FB               	movwf	(?___fttol+3)
  6740  02C8  3000               	movlw	0
  6741  02C9  00FA               	movwf	(?___fttol+2)
  6742  02CA  3000               	movlw	0
  6743  02CB  00F9               	movwf	(?___fttol+1)
  6744  02CC  3000               	movlw	0
  6745  02CD  00F8               	movwf	(?___fttol)
  6746                           
  6747  02CE  2AFD               	goto	l2435
  6748                           	
  6749  02CF                     l4667:	
  6750  02CF  2AFD               	goto	l2435
  6751                           	
  6752  02D0                     l2441:	
  6753                           	line	65
  6754  02D0  2ADD               	goto	l4671
  6755                           	
  6756  02D1                     l2443:	
  6757                           	line	66
  6758                           	
  6759  02D1                     l4669:	
  6760  02D1  3001               	movlw	01h
  6761  02D2  00A0               	movwf	(??___fttol+0)+0
  6762  02D3                     u3295:
  6763  02D3  1003               	clrc
  6764  02D4  0DA5               	rlf	(___fttol@lval),f
  6765  02D5  0DA6               	rlf	(___fttol@lval+1),f
  6766  02D6  0DA7               	rlf	(___fttol@lval+2),f
  6767  02D7  0DA8               	rlf	(___fttol@lval+3),f
  6768  02D8  0BA0               	decfsz	(??___fttol+0)+0
  6769  02D9  2AD3               	goto	u3295
  6770                           	line	67
  6771  02DA  3001               	movlw	low(01h)
  6772  02DB  02A9               	subwf	(___fttol@exp1),f
  6773  02DC  2ADD               	goto	l4671
  6774                           	line	68
  6775                           	
  6776  02DD                     l2442:	
  6777                           	line	65
  6778                           	
  6779  02DD                     l4671:	
  6780  02DD  08A9               	movf	(___fttol@exp1),f
  6781  02DE  1D03               	skipz
  6782  02DF  2AE1               	goto	u3301
  6783  02E0  2AE2               	goto	u3300
  6784  02E1                     u3301:
  6785  02E1  2AD1               	goto	l4669
  6786  02E2                     u3300:
  6787  02E2  2AE4               	goto	l4673
  6788                           	
  6789  02E3                     l2444:	
  6790  02E3  2AE4               	goto	l4673
  6791                           	line	69
  6792                           	
  6793  02E4                     l2440:	
  6794                           	line	70
  6795                           	
  6796  02E4                     l4673:	
  6797  02E4  0824               	movf	(___fttol@sign1),w
  6798  02E5  1D03               	skipz
  6799  02E6  2AE8               	goto	u3310
  6800  02E7  2AF4               	goto	l4677
  6801  02E8                     u3310:
  6802                           	line	71
  6803                           	
  6804  02E8                     l4675:	
  6805  02E8  09A5               	comf	(___fttol@lval),f
  6806  02E9  09A6               	comf	(___fttol@lval+1),f
  6807  02EA  09A7               	comf	(___fttol@lval+2),f
  6808  02EB  09A8               	comf	(___fttol@lval+3),f
  6809  02EC  0AA5               	incf	(___fttol@lval),f
  6810  02ED  1903               	skipnz
  6811  02EE  0AA6               	incf	(___fttol@lval+1),f
  6812  02EF  1903               	skipnz
  6813  02F0  0AA7               	incf	(___fttol@lval+2),f
  6814  02F1  1903               	skipnz
  6815  02F2  0AA8               	incf	(___fttol@lval+3),f
  6816  02F3  2AF4               	goto	l4677
  6817                           	
  6818  02F4                     l2445:	
  6819                           	line	72
  6820                           	
  6821  02F4                     l4677:	
  6822  02F4  0828               	movf	(___fttol@lval+3),w
  6823  02F5  00FB               	movwf	(?___fttol+3)
  6824  02F6  0827               	movf	(___fttol@lval+2),w
  6825  02F7  00FA               	movwf	(?___fttol+2)
  6826  02F8  0826               	movf	(___fttol@lval+1),w
  6827  02F9  00F9               	movwf	(?___fttol+1)
  6828  02FA  0825               	movf	(___fttol@lval),w
  6829  02FB  00F8               	movwf	(?___fttol)
  6830                           
  6831  02FC  2AFD               	goto	l2435
  6832                           	
  6833  02FD                     l4679:	
  6834                           	line	73
  6835                           	
  6836  02FD                     l2435:	
  6837  02FD  0008               	return
  6838                           	opt stack 0
  6839                           GLOBAL	__end_of___fttol
  6840  02FE                     	__end_of___fttol:
  6841 ;; =============== function ___fttol ends ============
  6842                           
  6843                           	signat	___fttol,4220
  6844                           	global	___ftpack
  6845                           psect	text910,local,class=CODE,delta=2
  6846                           global __ptext910
  6847  0F85                     __ptext910:
  6848                           
  6849 ;; *************** function ___ftpack *****************
  6850 ;; Defined at:
  6851 ;;		line 63 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\float.c"
  6852 ;; Parameters:    Size  Location     Type
  6853 ;;  arg             3    0[COMMON] unsigned um
  6854 ;;  exp             1    3[COMMON] unsigned char 
  6855 ;;  sign            1    4[COMMON] unsigned char 
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;		None
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  3    0[COMMON] float 
  6860 ;; Registers used:
  6861 ;;		wreg, status,2, status,0
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6867 ;;      Params:         5       0       0       0       0
  6868 ;;      Locals:         0       0       0       0       0
  6869 ;;      Temps:          3       0       0       0       0
  6870 ;;      Totals:         8       0       0       0       0
  6871 ;;Total ram usage:        8 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; This function calls:
  6874 ;;		Nothing
  6875 ;; This function is called by:
  6876 ;;		___ftadd
  6877 ;;		___ftmul
  6878 ;;		___awtoft
  6879 ;;		___ftdiv
  6880 ;;		___lbtoft
  6881 ;;		___abtoft
  6882 ;;		___lwtoft
  6883 ;;		___altoft
  6884 ;;		___lltoft
  6885 ;;		___attoft
  6886 ;;		___lttoft
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           psect	text910
  6890                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\float.c"
  6891                           	line	63
  6892                           	global	__size_of___ftpack
  6893  007B                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
  6894                           	
  6895  0F85                     ___ftpack:	
  6896                           	opt	stack 5
  6897                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6898                           	line	64
  6899                           	
  6900  0F85                     l4563:	
  6901  0F85  0873               	movf	(___ftpack@exp),w
  6902  0F86  1D03               	skipz
  6903  0F87  2F89               	goto	u3030
  6904  0F88  2F91               	goto	l4567
  6905  0F89                     u3030:
  6906                           	
  6907  0F89                     l4565:	
  6908  0F89  0872               	movf	(___ftpack@arg+2),w
  6909  0F8A  0471               	iorwf	(___ftpack@arg+1),w
  6910  0F8B  0470               	iorwf	(___ftpack@arg),w
  6911  0F8C  1D03               	skipz
  6912  0F8D  2F8F               	goto	u3041
  6913  0F8E  2F90               	goto	u3040
  6914  0F8F                     u3041:
  6915  0F8F  2FA7               	goto	l4573
  6916  0F90                     u3040:
  6917  0F90  2F91               	goto	l4567
  6918                           	
  6919  0F91                     l2659:	
  6920                           	line	65
  6921                           	
  6922  0F91                     l4567:	
  6923  0F91  3000               	movlw	0x0
  6924  0F92  00F0               	movwf	(?___ftpack)
  6925  0F93  3000               	movlw	0x0
  6926  0F94  00F1               	movwf	(?___ftpack+1)
  6927  0F95  3000               	movlw	0x0
  6928  0F96  00F2               	movwf	(?___ftpack+2)
  6929  0F97  2FFF               	goto	l2660
  6930                           	
  6931  0F98                     l4569:	
  6932  0F98  2FFF               	goto	l2660
  6933                           	
  6934  0F99                     l2657:	
  6935                           	line	66
  6936  0F99  2FA7               	goto	l4573
  6937                           	
  6938  0F9A                     l2662:	
  6939                           	line	67
  6940                           	
  6941  0F9A                     l4571:	
  6942  0F9A  3001               	movlw	(01h)
  6943  0F9B  00F5               	movwf	(??___ftpack+0)+0
  6944  0F9C  0875               	movf	(??___ftpack+0)+0,w
  6945  0F9D  07F3               	addwf	(___ftpack@exp),f
  6946                           	line	68
  6947  0F9E  3001               	movlw	01h
  6948  0F9F                     u3055:
  6949  0F9F  1003               	clrc
  6950  0FA0  0CF2               	rrf	(___ftpack@arg+2),f
  6951  0FA1  0CF1               	rrf	(___ftpack@arg+1),f
  6952  0FA2  0CF0               	rrf	(___ftpack@arg),f
  6953  0FA3  3EFF               	addlw	-1
  6954  0FA4  1D03               	skipz
  6955  0FA5  2F9F               	goto	u3055
  6956                           
  6957  0FA6  2FA7               	goto	l4573
  6958                           	line	69
  6959                           	
  6960  0FA7                     l2661:	
  6961                           	line	66
  6962                           	
  6963  0FA7                     l4573:	
  6964  0FA7  30FE               	movlw	low highword(0FE0000h)
  6965  0FA8  0572               	andwf	(___ftpack@arg+2),w
  6966  0FA9  1D03               	btfss	status,2
  6967  0FAA  2FAC               	goto	u3061
  6968  0FAB  2FAD               	goto	u3060
  6969  0FAC                     u3061:
  6970  0FAC  2F9A               	goto	l4571
  6971  0FAD                     u3060:
  6972  0FAD  2FC5               	goto	l2664
  6973                           	
  6974  0FAE                     l2663:	
  6975                           	line	70
  6976  0FAE  2FC5               	goto	l2664
  6977                           	
  6978  0FAF                     l2665:	
  6979                           	line	71
  6980                           	
  6981  0FAF                     l4575:	
  6982  0FAF  3001               	movlw	(01h)
  6983  0FB0  00F5               	movwf	(??___ftpack+0)+0
  6984  0FB1  0875               	movf	(??___ftpack+0)+0,w
  6985  0FB2  07F3               	addwf	(___ftpack@exp),f
  6986                           	line	72
  6987                           	
  6988  0FB3                     l4577:	
  6989  0FB3  3001               	movlw	01h
  6990  0FB4  07F0               	addwf	(___ftpack@arg),f
  6991  0FB5  3000               	movlw	0
  6992  0FB6  1803               	skipnc
  6993  0FB7  3001               movlw 1
  6994  0FB8  07F1               	addwf	(___ftpack@arg+1),f
  6995  0FB9  3000               	movlw	0
  6996  0FBA  1803               	skipnc
  6997  0FBB  3001               movlw 1
  6998  0FBC  07F2               	addwf	(___ftpack@arg+2),f
  6999                           	line	73
  7000                           	
  7001  0FBD                     l4579:	
  7002  0FBD  3001               	movlw	01h
  7003  0FBE                     u3075:
  7004  0FBE  1003               	clrc
  7005  0FBF  0CF2               	rrf	(___ftpack@arg+2),f
  7006  0FC0  0CF1               	rrf	(___ftpack@arg+1),f
  7007  0FC1  0CF0               	rrf	(___ftpack@arg),f
  7008  0FC2  3EFF               	addlw	-1
  7009  0FC3  1D03               	skipz
  7010  0FC4  2FBE               	goto	u3075
  7011                           
  7012                           	line	74
  7013                           	
  7014  0FC5                     l2664:	
  7015                           	line	70
  7016  0FC5  30FF               	movlw	low highword(0FF0000h)
  7017  0FC6  0572               	andwf	(___ftpack@arg+2),w
  7018  0FC7  1D03               	btfss	status,2
  7019  0FC8  2FCA               	goto	u3081
  7020  0FC9  2FCB               	goto	u3080
  7021  0FCA                     u3081:
  7022  0FCA  2FAF               	goto	l4575
  7023  0FCB                     u3080:
  7024  0FCB  2FD8               	goto	l4583
  7025                           	
  7026  0FCC                     l2666:	
  7027                           	line	75
  7028  0FCC  2FD8               	goto	l4583
  7029                           	
  7030  0FCD                     l2668:	
  7031                           	line	76
  7032                           	
  7033  0FCD                     l4581:	
  7034  0FCD  3001               	movlw	low(01h)
  7035  0FCE  02F3               	subwf	(___ftpack@exp),f
  7036                           	line	77
  7037  0FCF  3001               	movlw	01h
  7038  0FD0                     u3095:
  7039  0FD0  1003               	clrc
  7040  0FD1  0DF0               	rlf	(___ftpack@arg),f
  7041  0FD2  0DF1               	rlf	(___ftpack@arg+1),f
  7042  0FD3  0DF2               	rlf	(___ftpack@arg+2),f
  7043  0FD4  3EFF               	addlw	-1
  7044  0FD5  1D03               	skipz
  7045  0FD6  2FD0               	goto	u3095
  7046  0FD7  2FD8               	goto	l4583
  7047                           	line	78
  7048                           	
  7049  0FD8                     l2667:	
  7050                           	line	75
  7051                           	
  7052  0FD8                     l4583:	
  7053  0FD8  1FF1               	btfss	(___ftpack@arg+1),(15)&7
  7054  0FD9  2FDB               	goto	u3101
  7055  0FDA  2FDC               	goto	u3100
  7056  0FDB                     u3101:
  7057  0FDB  2FCD               	goto	l4581
  7058  0FDC                     u3100:
  7059                           	
  7060  0FDC                     l2669:	
  7061                           	line	79
  7062  0FDC  1873               	btfsc	(___ftpack@exp),(0)&7
  7063  0FDD  2FDF               	goto	u3111
  7064  0FDE  2FE0               	goto	u3110
  7065  0FDF                     u3111:
  7066  0FDF  2FE6               	goto	l2670
  7067  0FE0                     u3110:
  7068                           	line	80
  7069                           	
  7070  0FE0                     l4585:	
  7071  0FE0  30FF               	movlw	0FFh
  7072  0FE1  05F0               	andwf	(___ftpack@arg),f
  7073  0FE2  307F               	movlw	07Fh
  7074  0FE3  05F1               	andwf	(___ftpack@arg+1),f
  7075  0FE4  30FF               	movlw	0FFh
  7076  0FE5  05F2               	andwf	(___ftpack@arg+2),f
  7077                           	
  7078  0FE6                     l2670:	
  7079                           	line	81
  7080  0FE6  1003               	clrc
  7081  0FE7  0CF3               	rrf	(___ftpack@exp),f
  7082                           
  7083                           	line	82
  7084                           	
  7085  0FE8                     l4587:	
  7086  0FE8  0873               	movf	(___ftpack@exp),w
  7087  0FE9  00F5               	movwf	((??___ftpack+0)+0)
  7088  0FEA  01F6               	clrf	((??___ftpack+0)+0+1)
  7089  0FEB  01F7               	clrf	((??___ftpack+0)+0+2)
  7090  0FEC  3010               	movlw	010h
  7091  0FED                     u3125:
  7092  0FED  1003               	clrc
  7093  0FEE  0DF5               	rlf	(??___ftpack+0)+0,f
  7094  0FEF  0DF6               	rlf	(??___ftpack+0)+1,f
  7095  0FF0  0DF7               	rlf	(??___ftpack+0)+2,f
  7096  0FF1                     u3120:
  7097  0FF1  3EFF               	addlw	-1
  7098  0FF2  1D03               	skipz
  7099  0FF3  2FED               	goto	u3125
  7100  0FF4  0875               	movf	0+(??___ftpack+0)+0,w
  7101  0FF5  04F0               	iorwf	(___ftpack@arg),f
  7102  0FF6  0876               	movf	1+(??___ftpack+0)+0,w
  7103  0FF7  04F1               	iorwf	(___ftpack@arg+1),f
  7104  0FF8  0877               	movf	2+(??___ftpack+0)+0,w
  7105  0FF9  04F2               	iorwf	(___ftpack@arg+2),f
  7106                           	line	83
  7107                           	
  7108  0FFA                     l4589:	
  7109  0FFA  0874               	movf	(___ftpack@sign),w
  7110  0FFB  1D03               	skipz
  7111  0FFC  2FFE               	goto	u3130
  7112  0FFD  2FFF               	goto	l2671
  7113  0FFE                     u3130:
  7114                           	line	84
  7115                           	
  7116  0FFE                     l4591:	
  7117  0FFE  17F2               	bsf	(___ftpack@arg)+(23/8),(23)&7
  7118                           	
  7119  0FFF                     l2671:	
  7120                           	line	85
  7121                           	line	86
  7122                           	
  7123  0FFF                     l2660:	
  7124  0FFF  0008               	return
  7125                           	opt stack 0
  7126                           GLOBAL	__end_of___ftpack
  7127  1000                     	__end_of___ftpack:
  7128 ;; =============== function ___ftpack ends ============
  7129                           
  7130                           	signat	___ftpack,12411
  7131                           	global	___lwmod
  7132                           psect	text911,local,class=CODE,delta=2
  7133                           global __ptext911
  7134  0DC9                     __ptext911:
  7135                           
  7136 ;; *************** function ___lwmod *****************
  7137 ;; Defined at:
  7138 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  7139 ;; Parameters:    Size  Location     Type
  7140 ;;  divisor         2    0[COMMON] unsigned int 
  7141 ;;  dividend        2    2[COMMON] unsigned int 
  7142 ;; Auto vars:     Size  Location     Type
  7143 ;;  counter         1    5[COMMON] unsigned char 
  7144 ;; Return value:  Size  Location     Type
  7145 ;;                  2    0[COMMON] unsigned int 
  7146 ;; Registers used:
  7147 ;;		wreg, status,2, status,0
  7148 ;; Tracked objects:
  7149 ;;		On entry : 0/0
  7150 ;;		On exit  : 0/0
  7151 ;;		Unchanged: 0/0
  7152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7153 ;;      Params:         4       0       0       0       0
  7154 ;;      Locals:         1       0       0       0       0
  7155 ;;      Temps:          1       0       0       0       0
  7156 ;;      Totals:         6       0       0       0       0
  7157 ;;Total ram usage:        6 bytes
  7158 ;; Hardware stack levels used:    1
  7159 ;; This function calls:
  7160 ;;		Nothing
  7161 ;; This function is called by:
  7162 ;;		_lcd_num
  7163 ;; This function uses a non-reentrant model
  7164 ;;
  7165                           psect	text911
  7166                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  7167                           	line	5
  7168                           	global	__size_of___lwmod
  7169  0044                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  7170                           	
  7171  0DC9                     ___lwmod:	
  7172                           	opt	stack 4
  7173                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7174                           	line	8
  7175                           	
  7176  0DC9                     l4541:	
  7177  0DC9  0871               	movf	(___lwmod@divisor+1),w
  7178  0DCA  0470               	iorwf	(___lwmod@divisor),w
  7179  0DCB  1903               	skipnz
  7180  0DCC  2DCE               	goto	u2971
  7181  0DCD  2DCF               	goto	u2970
  7182  0DCE                     u2971:
  7183  0DCE  2E05               	goto	l4559
  7184  0DCF                     u2970:
  7185                           	line	9
  7186                           	
  7187  0DCF                     l4543:	
  7188  0DCF  01F5               	clrf	(___lwmod@counter)
  7189  0DD0  1403               	bsf	status,0
  7190  0DD1  0DF5               	rlf	(___lwmod@counter),f
  7191                           	line	10
  7192  0DD2  2DDF               	goto	l4549
  7193                           	
  7194  0DD3                     l2343:	
  7195                           	line	11
  7196                           	
  7197  0DD3                     l4545:	
  7198  0DD3  3001               	movlw	01h
  7199                           	
  7200  0DD4                     u2985:
  7201  0DD4  1003               	clrc
  7202  0DD5  0DF0               	rlf	(___lwmod@divisor),f
  7203  0DD6  0DF1               	rlf	(___lwmod@divisor+1),f
  7204  0DD7  3EFF               	addlw	-1
  7205  0DD8  1D03               	skipz
  7206  0DD9  2DD4               	goto	u2985
  7207                           	line	12
  7208                           	
  7209  0DDA                     l4547:	
  7210  0DDA  3001               	movlw	(01h)
  7211  0DDB  00F4               	movwf	(??___lwmod+0)+0
  7212  0DDC  0874               	movf	(??___lwmod+0)+0,w
  7213  0DDD  07F5               	addwf	(___lwmod@counter),f
  7214  0DDE  2DDF               	goto	l4549
  7215                           	line	13
  7216                           	
  7217  0DDF                     l2342:	
  7218                           	line	10
  7219                           	
  7220  0DDF                     l4549:	
  7221  0DDF  1FF1               	btfss	(___lwmod@divisor+1),(15)&7
  7222  0DE0  2DE2               	goto	u2991
  7223  0DE1  2DE3               	goto	u2990
  7224  0DE2                     u2991:
  7225  0DE2  2DD3               	goto	l4545
  7226  0DE3                     u2990:
  7227  0DE3  2DE5               	goto	l4551
  7228                           	
  7229  0DE4                     l2344:	
  7230  0DE4  2DE5               	goto	l4551
  7231                           	line	14
  7232                           	
  7233  0DE5                     l2345:	
  7234                           	line	15
  7235                           	
  7236  0DE5                     l4551:	
  7237  0DE5  0871               	movf	(___lwmod@divisor+1),w
  7238  0DE6  0273               	subwf	(___lwmod@dividend+1),w
  7239  0DE7  1D03               	skipz
  7240  0DE8  2DEB               	goto	u3005
  7241  0DE9  0870               	movf	(___lwmod@divisor),w
  7242  0DEA  0272               	subwf	(___lwmod@dividend),w
  7243  0DEB                     u3005:
  7244  0DEB  1C03               	skipc
  7245  0DEC  2DEE               	goto	u3001
  7246  0DED  2DEF               	goto	u3000
  7247  0DEE                     u3001:
  7248  0DEE  2DF6               	goto	l4555
  7249  0DEF                     u3000:
  7250                           	line	16
  7251                           	
  7252  0DEF                     l4553:	
  7253  0DEF  0870               	movf	(___lwmod@divisor),w
  7254  0DF0  02F2               	subwf	(___lwmod@dividend),f
  7255  0DF1  0871               	movf	(___lwmod@divisor+1),w
  7256  0DF2  1C03               	skipc
  7257  0DF3  03F3               	decf	(___lwmod@dividend+1),f
  7258  0DF4  02F3               	subwf	(___lwmod@dividend+1),f
  7259  0DF5  2DF6               	goto	l4555
  7260                           	
  7261  0DF6                     l2346:	
  7262                           	line	17
  7263                           	
  7264  0DF6                     l4555:	
  7265  0DF6  3001               	movlw	01h
  7266                           	
  7267  0DF7                     u3015:
  7268  0DF7  1003               	clrc
  7269  0DF8  0CF1               	rrf	(___lwmod@divisor+1),f
  7270  0DF9  0CF0               	rrf	(___lwmod@divisor),f
  7271  0DFA  3EFF               	addlw	-1
  7272  0DFB  1D03               	skipz
  7273  0DFC  2DF7               	goto	u3015
  7274                           	line	18
  7275                           	
  7276  0DFD                     l4557:	
  7277  0DFD  3001               	movlw	low(01h)
  7278  0DFE  02F5               	subwf	(___lwmod@counter),f
  7279  0DFF  1D03               	btfss	status,2
  7280  0E00  2E02               	goto	u3021
  7281  0E01  2E03               	goto	u3020
  7282  0E02                     u3021:
  7283  0E02  2DE5               	goto	l4551
  7284  0E03                     u3020:
  7285  0E03  2E05               	goto	l4559
  7286                           	
  7287  0E04                     l2347:	
  7288  0E04  2E05               	goto	l4559
  7289                           	line	19
  7290                           	
  7291  0E05                     l2341:	
  7292                           	line	20
  7293                           	
  7294  0E05                     l4559:	
  7295  0E05  0873               	movf	(___lwmod@dividend+1),w
  7296  0E06  01F1               	clrf	(?___lwmod+1)
  7297  0E07  07F1               	addwf	(?___lwmod+1)
  7298  0E08  0872               	movf	(___lwmod@dividend),w
  7299  0E09  01F0               	clrf	(?___lwmod)
  7300  0E0A  07F0               	addwf	(?___lwmod)
  7301                           
  7302  0E0B  2E0C               	goto	l2348
  7303                           	
  7304  0E0C                     l4561:	
  7305                           	line	21
  7306                           	
  7307  0E0C                     l2348:	
  7308  0E0C  0008               	return
  7309                           	opt stack 0
  7310                           GLOBAL	__end_of___lwmod
  7311  0E0D                     	__end_of___lwmod:
  7312 ;; =============== function ___lwmod ends ============
  7313                           
  7314                           	signat	___lwmod,8314
  7315                           	global	___lwdiv
  7316                           psect	text912,local,class=CODE,delta=2
  7317                           global __ptext912
  7318  0E0D                     __ptext912:
  7319                           
  7320 ;; *************** function ___lwdiv *****************
  7321 ;; Defined at:
  7322 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  7323 ;; Parameters:    Size  Location     Type
  7324 ;;  divisor         2    0[COMMON] unsigned int 
  7325 ;;  dividend        2    2[COMMON] unsigned int 
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;  quotient        2    5[COMMON] unsigned int 
  7328 ;;  counter         1    7[COMMON] unsigned char 
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  2    0[COMMON] unsigned int 
  7331 ;; Registers used:
  7332 ;;		wreg, status,2, status,0
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7338 ;;      Params:         4       0       0       0       0
  7339 ;;      Locals:         3       0       0       0       0
  7340 ;;      Temps:          1       0       0       0       0
  7341 ;;      Totals:         8       0       0       0       0
  7342 ;;Total ram usage:        8 bytes
  7343 ;; Hardware stack levels used:    1
  7344 ;; This function calls:
  7345 ;;		Nothing
  7346 ;; This function is called by:
  7347 ;;		_lcd_num
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           psect	text912
  7351                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  7352                           	line	5
  7353                           	global	__size_of___lwdiv
  7354  004E                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  7355                           	
  7356  0E0D                     ___lwdiv:	
  7357                           	opt	stack 4
  7358                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7359                           	line	9
  7360                           	
  7361  0E0D                     l4515:	
  7362  0E0D  01F5               	clrf	(___lwdiv@quotient)
  7363  0E0E  01F6               	clrf	(___lwdiv@quotient+1)
  7364                           	line	10
  7365                           	
  7366  0E0F                     l4517:	
  7367  0E0F  0871               	movf	(___lwdiv@divisor+1),w
  7368  0E10  0470               	iorwf	(___lwdiv@divisor),w
  7369  0E11  1903               	skipnz
  7370  0E12  2E14               	goto	u2901
  7371  0E13  2E15               	goto	u2900
  7372  0E14                     u2901:
  7373  0E14  2E53               	goto	l4537
  7374  0E15                     u2900:
  7375                           	line	11
  7376                           	
  7377  0E15                     l4519:	
  7378  0E15  01F7               	clrf	(___lwdiv@counter)
  7379  0E16  1403               	bsf	status,0
  7380  0E17  0DF7               	rlf	(___lwdiv@counter),f
  7381                           	line	12
  7382  0E18  2E25               	goto	l4525
  7383                           	
  7384  0E19                     l2333:	
  7385                           	line	13
  7386                           	
  7387  0E19                     l4521:	
  7388  0E19  3001               	movlw	01h
  7389                           	
  7390  0E1A                     u2915:
  7391  0E1A  1003               	clrc
  7392  0E1B  0DF0               	rlf	(___lwdiv@divisor),f
  7393  0E1C  0DF1               	rlf	(___lwdiv@divisor+1),f
  7394  0E1D  3EFF               	addlw	-1
  7395  0E1E  1D03               	skipz
  7396  0E1F  2E1A               	goto	u2915
  7397                           	line	14
  7398                           	
  7399  0E20                     l4523:	
  7400  0E20  3001               	movlw	(01h)
  7401  0E21  00F4               	movwf	(??___lwdiv+0)+0
  7402  0E22  0874               	movf	(??___lwdiv+0)+0,w
  7403  0E23  07F7               	addwf	(___lwdiv@counter),f
  7404  0E24  2E25               	goto	l4525
  7405                           	line	15
  7406                           	
  7407  0E25                     l2332:	
  7408                           	line	12
  7409                           	
  7410  0E25                     l4525:	
  7411  0E25  1FF1               	btfss	(___lwdiv@divisor+1),(15)&7
  7412  0E26  2E28               	goto	u2921
  7413  0E27  2E29               	goto	u2920
  7414  0E28                     u2921:
  7415  0E28  2E19               	goto	l4521
  7416  0E29                     u2920:
  7417  0E29  2E2B               	goto	l4527
  7418                           	
  7419  0E2A                     l2334:	
  7420  0E2A  2E2B               	goto	l4527
  7421                           	line	16
  7422                           	
  7423  0E2B                     l2335:	
  7424                           	line	17
  7425                           	
  7426  0E2B                     l4527:	
  7427  0E2B  3001               	movlw	01h
  7428                           	
  7429  0E2C                     u2935:
  7430  0E2C  1003               	clrc
  7431  0E2D  0DF5               	rlf	(___lwdiv@quotient),f
  7432  0E2E  0DF6               	rlf	(___lwdiv@quotient+1),f
  7433  0E2F  3EFF               	addlw	-1
  7434  0E30  1D03               	skipz
  7435  0E31  2E2C               	goto	u2935
  7436                           	line	18
  7437  0E32  0871               	movf	(___lwdiv@divisor+1),w
  7438  0E33  0273               	subwf	(___lwdiv@dividend+1),w
  7439  0E34  1D03               	skipz
  7440  0E35  2E38               	goto	u2945
  7441  0E36  0870               	movf	(___lwdiv@divisor),w
  7442  0E37  0272               	subwf	(___lwdiv@dividend),w
  7443  0E38                     u2945:
  7444  0E38  1C03               	skipc
  7445  0E39  2E3B               	goto	u2941
  7446  0E3A  2E3C               	goto	u2940
  7447  0E3B                     u2941:
  7448  0E3B  2E44               	goto	l4533
  7449  0E3C                     u2940:
  7450                           	line	19
  7451                           	
  7452  0E3C                     l4529:	
  7453  0E3C  0870               	movf	(___lwdiv@divisor),w
  7454  0E3D  02F2               	subwf	(___lwdiv@dividend),f
  7455  0E3E  0871               	movf	(___lwdiv@divisor+1),w
  7456  0E3F  1C03               	skipc
  7457  0E40  03F3               	decf	(___lwdiv@dividend+1),f
  7458  0E41  02F3               	subwf	(___lwdiv@dividend+1),f
  7459                           	line	20
  7460                           	
  7461  0E42                     l4531:	
  7462  0E42  1475               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  7463  0E43  2E44               	goto	l4533
  7464                           	line	21
  7465                           	
  7466  0E44                     l2336:	
  7467                           	line	22
  7468                           	
  7469  0E44                     l4533:	
  7470  0E44  3001               	movlw	01h
  7471                           	
  7472  0E45                     u2955:
  7473  0E45  1003               	clrc
  7474  0E46  0CF1               	rrf	(___lwdiv@divisor+1),f
  7475  0E47  0CF0               	rrf	(___lwdiv@divisor),f
  7476  0E48  3EFF               	addlw	-1
  7477  0E49  1D03               	skipz
  7478  0E4A  2E45               	goto	u2955
  7479                           	line	23
  7480                           	
  7481  0E4B                     l4535:	
  7482  0E4B  3001               	movlw	low(01h)
  7483  0E4C  02F7               	subwf	(___lwdiv@counter),f
  7484  0E4D  1D03               	btfss	status,2
  7485  0E4E  2E50               	goto	u2961
  7486  0E4F  2E51               	goto	u2960
  7487  0E50                     u2961:
  7488  0E50  2E2B               	goto	l4527
  7489  0E51                     u2960:
  7490  0E51  2E53               	goto	l4537
  7491                           	
  7492  0E52                     l2337:	
  7493  0E52  2E53               	goto	l4537
  7494                           	line	24
  7495                           	
  7496  0E53                     l2331:	
  7497                           	line	25
  7498                           	
  7499  0E53                     l4537:	
  7500  0E53  0876               	movf	(___lwdiv@quotient+1),w
  7501  0E54  01F1               	clrf	(?___lwdiv+1)
  7502  0E55  07F1               	addwf	(?___lwdiv+1)
  7503  0E56  0875               	movf	(___lwdiv@quotient),w
  7504  0E57  01F0               	clrf	(?___lwdiv)
  7505  0E58  07F0               	addwf	(?___lwdiv)
  7506                           
  7507  0E59  2E5A               	goto	l2338
  7508                           	
  7509  0E5A                     l4539:	
  7510                           	line	26
  7511                           	
  7512  0E5A                     l2338:	
  7513  0E5A  0008               	return
  7514                           	opt stack 0
  7515                           GLOBAL	__end_of___lwdiv
  7516  0E5B                     	__end_of___lwdiv:
  7517 ;; =============== function ___lwdiv ends ============
  7518                           
  7519                           	signat	___lwdiv,8314
  7520                           	global	_set_lcd_data
  7521                           psect	text913,local,class=CODE,delta=2
  7522                           global __ptext913
  7523  0B41                     __ptext913:
  7524                           
  7525 ;; *************** function _set_lcd_data *****************
  7526 ;; Defined at:
  7527 ;;		line 622 in file "../main.c"
  7528 ;; Parameters:    Size  Location     Type
  7529 ;;  uc_data         1    wreg     unsigned char 
  7530 ;; Auto vars:     Size  Location     Type
  7531 ;;  uc_data         1    0[COMMON] unsigned char 
  7532 ;; Return value:  Size  Location     Type
  7533 ;;		None               void
  7534 ;; Registers used:
  7535 ;;		wreg
  7536 ;; Tracked objects:
  7537 ;;		On entry : 0/0
  7538 ;;		On exit  : 0/0
  7539 ;;		Unchanged: 0/0
  7540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7541 ;;      Params:         0       0       0       0       0
  7542 ;;      Locals:         1       0       0       0       0
  7543 ;;      Temps:          0       0       0       0       0
  7544 ;;      Totals:         1       0       0       0       0
  7545 ;;Total ram usage:        1 bytes
  7546 ;; Hardware stack levels used:    1
  7547 ;; This function calls:
  7548 ;;		Nothing
  7549 ;; This function is called by:
  7550 ;;		_send_lcd_data
  7551 ;; This function uses a non-reentrant model
  7552 ;;
  7553                           psect	text913
  7554                           	file	"../main.c"
  7555                           	line	622
  7556                           	global	__size_of_set_lcd_data
  7557  0006                     	__size_of_set_lcd_data	equ	__end_of_set_lcd_data-_set_lcd_data
  7558                           	
  7559  0B41                     _set_lcd_data:	
  7560                           	opt	stack 2
  7561                           ; Regs used in _set_lcd_data: [wreg]
  7562                           ;set_lcd_data@uc_data stored from wreg
  7563  0B41  00F0               	movwf	(set_lcd_data@uc_data)
  7564                           	line	623
  7565                           	
  7566  0B42                     l4513:	
  7567                           ;main.c: 623: PORTD = uc_data;
  7568  0B42  0870               	movf	(set_lcd_data@uc_data),w
  7569  0B43  1283               	bcf	status, 5	;RP0=0, select bank0
  7570  0B44  1303               	bcf	status, 6	;RP1=0, select bank0
  7571  0B45  0088               	movwf	(8)	;volatile
  7572                           	line	624
  7573                           	
  7574  0B46                     l1298:	
  7575  0B46  0008               	return
  7576                           	opt stack 0
  7577                           GLOBAL	__end_of_set_lcd_data
  7578  0B47                     	__end_of_set_lcd_data:
  7579 ;; =============== function _set_lcd_data ends ============
  7580                           
  7581                           	signat	_set_lcd_data,4216
  7582                           	global	_set_lcd_rs
  7583                           psect	text914,local,class=CODE,delta=2
  7584                           global __ptext914
  7585  0B71                     __ptext914:
  7586                           
  7587 ;; *************** function _set_lcd_rs *****************
  7588 ;; Defined at:
  7589 ;;		line 618 in file "../main.c"
  7590 ;; Parameters:    Size  Location     Type
  7591 ;;  b_output        1    wreg     unsigned char 
  7592 ;; Auto vars:     Size  Location     Type
  7593 ;;  b_output        1    0[COMMON] unsigned char 
  7594 ;; Return value:  Size  Location     Type
  7595 ;;		None               void
  7596 ;; Registers used:
  7597 ;;		wreg
  7598 ;; Tracked objects:
  7599 ;;		On entry : 0/0
  7600 ;;		On exit  : 0/0
  7601 ;;		Unchanged: 0/0
  7602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7603 ;;      Params:         0       0       0       0       0
  7604 ;;      Locals:         1       0       0       0       0
  7605 ;;      Temps:          0       0       0       0       0
  7606 ;;      Totals:         1       0       0       0       0
  7607 ;;Total ram usage:        1 bytes
  7608 ;; Hardware stack levels used:    1
  7609 ;; This function calls:
  7610 ;;		Nothing
  7611 ;; This function is called by:
  7612 ;;		_send_lcd_data
  7613 ;; This function uses a non-reentrant model
  7614 ;;
  7615                           psect	text914
  7616                           	file	"../main.c"
  7617                           	line	618
  7618                           	global	__size_of_set_lcd_rs
  7619  000C                     	__size_of_set_lcd_rs	equ	__end_of_set_lcd_rs-_set_lcd_rs
  7620                           	
  7621  0B71                     _set_lcd_rs:	
  7622                           	opt	stack 2
  7623                           ; Regs used in _set_lcd_rs: [wreg]
  7624                           ;set_lcd_rs@b_output stored from wreg
  7625  0B71  00F0               	movwf	(set_lcd_rs@b_output)
  7626                           	line	619
  7627                           	
  7628  0B72                     l4511:	
  7629                           ;main.c: 619: RB6 = b_output;
  7630  0B72  1870               	btfsc	(set_lcd_rs@b_output),0
  7631  0B73  2B75               	goto	u2881
  7632  0B74  2B79               	goto	u2880
  7633                           	
  7634  0B75                     u2881:
  7635  0B75  1283               	bcf	status, 5	;RP0=0, select bank0
  7636  0B76  1303               	bcf	status, 6	;RP1=0, select bank0
  7637  0B77  1706               	bsf	(54/8),(54)&7
  7638  0B78  2B7C               	goto	u2894
  7639  0B79                     u2880:
  7640  0B79  1283               	bcf	status, 5	;RP0=0, select bank0
  7641  0B7A  1303               	bcf	status, 6	;RP1=0, select bank0
  7642  0B7B  1306               	bcf	(54/8),(54)&7
  7643  0B7C                     u2894:
  7644                           	line	620
  7645                           	
  7646  0B7C                     l1295:	
  7647  0B7C  0008               	return
  7648                           	opt stack 0
  7649                           GLOBAL	__end_of_set_lcd_rs
  7650  0B7D                     	__end_of_set_lcd_rs:
  7651 ;; =============== function _set_lcd_rs ends ============
  7652                           
  7653                           	signat	_set_lcd_rs,4216
  7654                           	global	_set_lcd_e
  7655                           psect	text915,local,class=CODE,delta=2
  7656                           global __ptext915
  7657  0B65                     __ptext915:
  7658                           
  7659 ;; *************** function _set_lcd_e *****************
  7660 ;; Defined at:
  7661 ;;		line 614 in file "../main.c"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;  b_output        1    wreg     unsigned char 
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;  b_output        1    0[COMMON] unsigned char 
  7666 ;; Return value:  Size  Location     Type
  7667 ;;		None               void
  7668 ;; Registers used:
  7669 ;;		wreg
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/0
  7672 ;;		On exit  : 0/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7675 ;;      Params:         0       0       0       0       0
  7676 ;;      Locals:         1       0       0       0       0
  7677 ;;      Temps:          0       0       0       0       0
  7678 ;;      Totals:         1       0       0       0       0
  7679 ;;Total ram usage:        1 bytes
  7680 ;; Hardware stack levels used:    1
  7681 ;; This function calls:
  7682 ;;		Nothing
  7683 ;; This function is called by:
  7684 ;;		_lcd_init
  7685 ;;		_send_lcd_data
  7686 ;; This function uses a non-reentrant model
  7687 ;;
  7688                           psect	text915
  7689                           	file	"../main.c"
  7690                           	line	614
  7691                           	global	__size_of_set_lcd_e
  7692  000C                     	__size_of_set_lcd_e	equ	__end_of_set_lcd_e-_set_lcd_e
  7693                           	
  7694  0B65                     _set_lcd_e:	
  7695                           	opt	stack 2
  7696                           ; Regs used in _set_lcd_e: [wreg]
  7697                           ;set_lcd_e@b_output stored from wreg
  7698  0B65  00F0               	movwf	(set_lcd_e@b_output)
  7699                           	line	615
  7700                           	
  7701  0B66                     l4507:	
  7702                           ;main.c: 615: RE2 = b_output;
  7703  0B66  1870               	btfsc	(set_lcd_e@b_output),0
  7704  0B67  2B69               	goto	u2861
  7705  0B68  2B6D               	goto	u2860
  7706                           	
  7707  0B69                     u2861:
  7708  0B69  1283               	bcf	status, 5	;RP0=0, select bank0
  7709  0B6A  1303               	bcf	status, 6	;RP1=0, select bank0
  7710  0B6B  1509               	bsf	(74/8),(74)&7
  7711  0B6C  2B70               	goto	u2874
  7712  0B6D                     u2860:
  7713  0B6D  1283               	bcf	status, 5	;RP0=0, select bank0
  7714  0B6E  1303               	bcf	status, 6	;RP1=0, select bank0
  7715  0B6F  1109               	bcf	(74/8),(74)&7
  7716  0B70                     u2874:
  7717                           	line	616
  7718                           	
  7719  0B70                     l1292:	
  7720  0B70  0008               	return
  7721                           	opt stack 0
  7722                           GLOBAL	__end_of_set_lcd_e
  7723  0B71                     	__end_of_set_lcd_e:
  7724 ;; =============== function _set_lcd_e ends ============
  7725                           
  7726                           	signat	_set_lcd_e,4216
  7727                           	global	_set_pwml
  7728                           psect	text916,local,class=CODE,delta=2
  7729                           global __ptext916
  7730  0B3B                     __ptext916:
  7731                           
  7732 ;; *************** function _set_pwml *****************
  7733 ;; Defined at:
  7734 ;;		line 513 in file "../main.c"
  7735 ;; Parameters:    Size  Location     Type
  7736 ;;  uc_duty_cycl    1    wreg     unsigned char 
  7737 ;; Auto vars:     Size  Location     Type
  7738 ;;  uc_duty_cycl    1    0[COMMON] unsigned char 
  7739 ;; Return value:  Size  Location     Type
  7740 ;;		None               void
  7741 ;; Registers used:
  7742 ;;		wreg
  7743 ;; Tracked objects:
  7744 ;;		On entry : 0/0
  7745 ;;		On exit  : 0/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7748 ;;      Params:         0       0       0       0       0
  7749 ;;      Locals:         1       0       0       0       0
  7750 ;;      Temps:          0       0       0       0       0
  7751 ;;      Totals:         1       0       0       0       0
  7752 ;;Total ram usage:        1 bytes
  7753 ;; Hardware stack levels used:    1
  7754 ;; This function calls:
  7755 ;;		Nothing
  7756 ;; This function is called by:
  7757 ;;		_motor
  7758 ;; This function uses a non-reentrant model
  7759 ;;
  7760                           psect	text916
  7761                           	file	"../main.c"
  7762                           	line	513
  7763                           	global	__size_of_set_pwml
  7764  0006                     	__size_of_set_pwml	equ	__end_of_set_pwml-_set_pwml
  7765                           	
  7766  0B3B                     _set_pwml:	
  7767                           	opt	stack 5
  7768                           ; Regs used in _set_pwml: [wreg]
  7769                           ;set_pwml@uc_duty_cycle stored from wreg
  7770  0B3B  00F0               	movwf	(set_pwml@uc_duty_cycle)
  7771                           	line	514
  7772                           	
  7773  0B3C                     l4505:	
  7774                           ;main.c: 514: CCPR2L = uc_duty_cycle;
  7775  0B3C  0870               	movf	(set_pwml@uc_duty_cycle),w
  7776  0B3D  1283               	bcf	status, 5	;RP0=0, select bank0
  7777  0B3E  1303               	bcf	status, 6	;RP1=0, select bank0
  7778  0B3F  009B               	movwf	(27)	;volatile
  7779                           	line	515
  7780                           	
  7781  0B40                     l1253:	
  7782  0B40  0008               	return
  7783                           	opt stack 0
  7784                           GLOBAL	__end_of_set_pwml
  7785  0B41                     	__end_of_set_pwml:
  7786 ;; =============== function _set_pwml ends ============
  7787                           
  7788                           	signat	_set_pwml,4216
  7789                           	global	_set_pwmr
  7790                           psect	text917,local,class=CODE,delta=2
  7791                           global __ptext917
  7792  0B35                     __ptext917:
  7793                           
  7794 ;; *************** function _set_pwmr *****************
  7795 ;; Defined at:
  7796 ;;		line 509 in file "../main.c"
  7797 ;; Parameters:    Size  Location     Type
  7798 ;;  uc_duty_cycl    1    wreg     unsigned char 
  7799 ;; Auto vars:     Size  Location     Type
  7800 ;;  uc_duty_cycl    1    0[COMMON] unsigned char 
  7801 ;; Return value:  Size  Location     Type
  7802 ;;		None               void
  7803 ;; Registers used:
  7804 ;;		wreg
  7805 ;; Tracked objects:
  7806 ;;		On entry : 0/0
  7807 ;;		On exit  : 0/0
  7808 ;;		Unchanged: 0/0
  7809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7810 ;;      Params:         0       0       0       0       0
  7811 ;;      Locals:         1       0       0       0       0
  7812 ;;      Temps:          0       0       0       0       0
  7813 ;;      Totals:         1       0       0       0       0
  7814 ;;Total ram usage:        1 bytes
  7815 ;; Hardware stack levels used:    1
  7816 ;; This function calls:
  7817 ;;		Nothing
  7818 ;; This function is called by:
  7819 ;;		_motor
  7820 ;; This function uses a non-reentrant model
  7821 ;;
  7822                           psect	text917
  7823                           	file	"../main.c"
  7824                           	line	509
  7825                           	global	__size_of_set_pwmr
  7826  0006                     	__size_of_set_pwmr	equ	__end_of_set_pwmr-_set_pwmr
  7827                           	
  7828  0B35                     _set_pwmr:	
  7829                           	opt	stack 5
  7830                           ; Regs used in _set_pwmr: [wreg]
  7831                           ;set_pwmr@uc_duty_cycle stored from wreg
  7832  0B35  00F0               	movwf	(set_pwmr@uc_duty_cycle)
  7833                           	line	510
  7834                           	
  7835  0B36                     l4503:	
  7836                           ;main.c: 510: CCPR1L = uc_duty_cycle;
  7837  0B36  0870               	movf	(set_pwmr@uc_duty_cycle),w
  7838  0B37  1283               	bcf	status, 5	;RP0=0, select bank0
  7839  0B38  1303               	bcf	status, 6	;RP1=0, select bank0
  7840  0B39  0095               	movwf	(21)	;volatile
  7841                           	line	511
  7842                           	
  7843  0B3A                     l1250:	
  7844  0B3A  0008               	return
  7845                           	opt stack 0
  7846                           GLOBAL	__end_of_set_pwmr
  7847  0B3B                     	__end_of_set_pwmr:
  7848 ;; =============== function _set_pwmr ends ============
  7849                           
  7850                           	signat	_set_pwmr,4216
  7851                           	global	_PID_UPDATE
  7852                           psect	text918,local,class=CODE,delta=2
  7853                           global __ptext918
  7854  00B0                     __ptext918:
  7855                           
  7856 ;; *************** function _PID_UPDATE *****************
  7857 ;; Defined at:
  7858 ;;		line 427 in file "../main.c"
  7859 ;; Parameters:    Size  Location     Type
  7860 ;;  position        1    wreg     char 
  7861 ;; Auto vars:     Size  Location     Type
  7862 ;;  position        1    2[COMMON] char 
  7863 ;; Return value:  Size  Location     Type
  7864 ;;		None               void
  7865 ;; Registers used:
  7866 ;;		wreg, status,2, status,0, btemp+1
  7867 ;; Tracked objects:
  7868 ;;		On entry : 0/0
  7869 ;;		On exit  : 0/0
  7870 ;;		Unchanged: 0/0
  7871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7872 ;;      Params:         0       0       0       0       0
  7873 ;;      Locals:         1       0       0       0       0
  7874 ;;      Temps:          2       0       0       0       0
  7875 ;;      Totals:         3       0       0       0       0
  7876 ;;Total ram usage:        3 bytes
  7877 ;; Hardware stack levels used:    1
  7878 ;; This function calls:
  7879 ;;		Nothing
  7880 ;; This function is called by:
  7881 ;;		_line_follow
  7882 ;; This function uses a non-reentrant model
  7883 ;;
  7884                           psect	text918
  7885                           	file	"../main.c"
  7886                           	line	427
  7887                           	global	__size_of_PID_UPDATE
  7888  0087                     	__size_of_PID_UPDATE	equ	__end_of_PID_UPDATE-_PID_UPDATE
  7889                           	
  7890  00B0                     _PID_UPDATE:	
  7891                           	opt	stack 6
  7892                           ; Regs used in _PID_UPDATE: [wreg+status,2+status,0+btemp+1]
  7893                           ;PID_UPDATE@position stored from wreg
  7894                           	line	429
  7895  00B0  00F2               	movwf	(PID_UPDATE@position)
  7896                           	line	430
  7897                           	
  7898  00B1                     l4481:	
  7899                           ;main.c: 429: static signed short proportional0, proportional1,proportional2;
  7900                           ;main.c: 430: if(position==127){
  7901  00B1  0872               	movf	(PID_UPDATE@position),w
  7902  00B2  3A7F               	xorlw	07Fh
  7903  00B3  1D03               	skipz
  7904  00B4  28B6               	goto	u2831
  7905  00B5  28B7               	goto	u2830
  7906  00B6                     u2831:
  7907  00B6  28C6               	goto	l4485
  7908  00B7                     u2830:
  7909                           	line	431
  7910                           	
  7911  00B7                     l4483:	
  7912                           ;main.c: 431: proportional=proportional0;
  7913  00B7  1683               	bsf	status, 5	;RP0=1, select bank1
  7914  00B8  1303               	bcf	status, 6	;RP1=0, select bank1
  7915  00B9  0821               	movf	(PID_UPDATE@proportional0+1)^080h,w
  7916  00BA  1283               	bcf	status, 5	;RP0=0, select bank0
  7917  00BB  1303               	bcf	status, 6	;RP1=0, select bank0
  7918  00BC  01E5               	clrf	(_proportional+1)
  7919  00BD  07E5               	addwf	(_proportional+1)
  7920  00BE  1683               	bsf	status, 5	;RP0=1, select bank1
  7921  00BF  1303               	bcf	status, 6	;RP1=0, select bank1
  7922  00C0  0820               	movf	(PID_UPDATE@proportional0)^080h,w
  7923  00C1  1283               	bcf	status, 5	;RP0=0, select bank0
  7924  00C2  1303               	bcf	status, 6	;RP1=0, select bank0
  7925  00C3  01E4               	clrf	(_proportional)
  7926  00C4  07E4               	addwf	(_proportional)
  7927                           
  7928                           	line	432
  7929                           ;main.c: 432: }
  7930  00C5  2936               	goto	l1241
  7931                           	line	433
  7932                           	
  7933  00C6                     l1236:	
  7934                           	line	435
  7935                           	
  7936  00C6                     l4485:	
  7937                           ;main.c: 433: else{
  7938                           ;main.c: 435: proportional=(signed short) position;
  7939  00C6  0872               	movf	(PID_UPDATE@position),w
  7940  00C7  1283               	bcf	status, 5	;RP0=0, select bank0
  7941  00C8  1303               	bcf	status, 6	;RP1=0, select bank0
  7942  00C9  00E4               	movwf	(_proportional)
  7943  00CA  01E5               	clrf	(_proportional+1)
  7944  00CB  1BE4               	btfsc	(_proportional),7
  7945  00CC  03E5               	decf	(_proportional+1),f
  7946                           	line	436
  7947                           ;main.c: 436: derivative=proportional-proportional2;
  7948  00CD  1683               	bsf	status, 5	;RP0=1, select bank1
  7949  00CE  1303               	bcf	status, 6	;RP1=0, select bank1
  7950  00CF  0924               	comf	(PID_UPDATE@proportional2)^080h,w
  7951  00D0  00F0               	movwf	(??_PID_UPDATE+0)+0
  7952  00D1  0925               	comf	(PID_UPDATE@proportional2+1)^080h,w
  7953  00D2  00F1               	movwf	((??_PID_UPDATE+0)+0+1)
  7954  00D3  0AF0               	incf	(??_PID_UPDATE+0)+0,f
  7955  00D4  1903               	skipnz
  7956  00D5  0AF1               	incf	((??_PID_UPDATE+0)+0+1),f
  7957  00D6  1283               	bcf	status, 5	;RP0=0, select bank0
  7958  00D7  1303               	bcf	status, 6	;RP1=0, select bank0
  7959  00D8  0864               	movf	(_proportional),w
  7960  00D9  0770               	addwf	0+(??_PID_UPDATE+0)+0,w
  7961  00DA  1683               	bsf	status, 5	;RP0=1, select bank1
  7962  00DB  1303               	bcf	status, 6	;RP1=0, select bank1
  7963  00DC  00A6               	movwf	(_derivative)^080h
  7964  00DD  1283               	bcf	status, 5	;RP0=0, select bank0
  7965  00DE  1303               	bcf	status, 6	;RP1=0, select bank0
  7966  00DF  0865               	movf	(_proportional+1),w
  7967  00E0  1803               	skipnc
  7968  00E1  0A65               	incf	(_proportional+1),w
  7969  00E2  0771               	addwf	1+(??_PID_UPDATE+0)+0,w
  7970  00E3  1683               	bsf	status, 5	;RP0=1, select bank1
  7971  00E4  1303               	bcf	status, 6	;RP1=0, select bank1
  7972  00E5  00A7               	movwf	1+(_derivative)^080h
  7973                           	line	437
  7974                           	
  7975  00E6                     l4487:	
  7976                           ;main.c: 437: integral+=proportional;
  7977  00E6  1283               	bcf	status, 5	;RP0=0, select bank0
  7978  00E7  1303               	bcf	status, 6	;RP1=0, select bank0
  7979  00E8  0864               	movf	(_proportional),w
  7980  00E9  07E0               	addwf	(_integral),f
  7981  00EA  1803               	skipnc
  7982  00EB  0AE1               	incf	(_integral+1),f
  7983  00EC  0865               	movf	(_proportional+1),w
  7984  00ED  07E1               	addwf	(_integral+1),f
  7985                           	line	438
  7986                           	
  7987  00EE                     l4489:	
  7988                           ;main.c: 438: if(integral>5000) integral=5000;
  7989  00EE  0861               	movf	(_integral+1),w
  7990  00EF  3A80               	xorlw	80h
  7991  00F0  00FF               	movwf	btemp+1
  7992  00F1  3093               	movlw	(high(01389h))^80h
  7993  00F2  027F               	subwf	btemp+1,w
  7994  00F3  1D03               	skipz
  7995  00F4  28F7               	goto	u2845
  7996  00F5  3089               	movlw	low(01389h)
  7997  00F6  0260               	subwf	(_integral),w
  7998  00F7                     u2845:
  7999                           
  8000  00F7  1C03               	skipc
  8001  00F8  28FA               	goto	u2841
  8002  00F9  28FB               	goto	u2840
  8003  00FA                     u2841:
  8004  00FA  2902               	goto	l4493
  8005  00FB                     u2840:
  8006                           	
  8007  00FB                     l4491:	
  8008  00FB  3088               	movlw	low(01388h)
  8009  00FC  1283               	bcf	status, 5	;RP0=0, select bank0
  8010  00FD  1303               	bcf	status, 6	;RP1=0, select bank0
  8011  00FE  00E0               	movwf	(_integral)
  8012  00FF  3013               	movlw	high(01388h)
  8013  0100  00E1               	movwf	((_integral))+1
  8014  0101  2919               	goto	l4497
  8015                           	line	439
  8016                           	
  8017  0102                     l1238:	
  8018                           	
  8019  0102                     l4493:	
  8020                           ;main.c: 439: else if(integral<-5000) integral=-5000;
  8021  0102  1283               	bcf	status, 5	;RP0=0, select bank0
  8022  0103  1303               	bcf	status, 6	;RP1=0, select bank0
  8023  0104  0861               	movf	(_integral+1),w
  8024  0105  3A80               	xorlw	80h
  8025  0106  00FF               	movwf	btemp+1
  8026  0107  306C               	movlw	(high(-5000))^80h
  8027  0108  027F               	subwf	btemp+1,w
  8028  0109  1D03               	skipz
  8029  010A  290D               	goto	u2855
  8030  010B  3078               	movlw	low(-5000)
  8031  010C  0260               	subwf	(_integral),w
  8032  010D                     u2855:
  8033                           
  8034  010D  1803               	skipnc
  8035  010E  2910               	goto	u2851
  8036  010F  2911               	goto	u2850
  8037  0110                     u2851:
  8038  0110  2919               	goto	l4497
  8039  0111                     u2850:
  8040                           	
  8041  0111                     l4495:	
  8042  0111  3078               	movlw	low(-5000)
  8043  0112  1283               	bcf	status, 5	;RP0=0, select bank0
  8044  0113  1303               	bcf	status, 6	;RP1=0, select bank0
  8045  0114  00E0               	movwf	(_integral)
  8046  0115  30EC               	movlw	high(-5000)
  8047  0116  00E1               	movwf	((_integral))+1
  8048  0117  2919               	goto	l4497
  8049                           	
  8050  0118                     l1240:	
  8051  0118  2919               	goto	l4497
  8052                           	line	440
  8053                           	
  8054  0119                     l1239:	
  8055                           	
  8056  0119                     l4497:	
  8057                           ;main.c: 440: proportional2=proportional1;
  8058  0119  1683               	bsf	status, 5	;RP0=1, select bank1
  8059  011A  1303               	bcf	status, 6	;RP1=0, select bank1
  8060  011B  0823               	movf	(PID_UPDATE@proportional1+1)^080h,w
  8061  011C  01A5               	clrf	(PID_UPDATE@proportional2+1)^080h
  8062  011D  07A5               	addwf	(PID_UPDATE@proportional2+1)^080h
  8063  011E  0822               	movf	(PID_UPDATE@proportional1)^080h,w
  8064  011F  01A4               	clrf	(PID_UPDATE@proportional2)^080h
  8065  0120  07A4               	addwf	(PID_UPDATE@proportional2)^080h
  8066                           
  8067                           	line	441
  8068                           	
  8069  0121                     l4499:	
  8070                           ;main.c: 441: proportional1=proportional0;
  8071  0121  0821               	movf	(PID_UPDATE@proportional0+1)^080h,w
  8072  0122  01A3               	clrf	(PID_UPDATE@proportional1+1)^080h
  8073  0123  07A3               	addwf	(PID_UPDATE@proportional1+1)^080h
  8074  0124  0820               	movf	(PID_UPDATE@proportional0)^080h,w
  8075  0125  01A2               	clrf	(PID_UPDATE@proportional1)^080h
  8076  0126  07A2               	addwf	(PID_UPDATE@proportional1)^080h
  8077                           
  8078                           	line	442
  8079                           	
  8080  0127                     l4501:	
  8081                           ;main.c: 442: proportional0=proportional;
  8082  0127  1283               	bcf	status, 5	;RP0=0, select bank0
  8083  0128  1303               	bcf	status, 6	;RP1=0, select bank0
  8084  0129  0865               	movf	(_proportional+1),w
  8085  012A  1683               	bsf	status, 5	;RP0=1, select bank1
  8086  012B  1303               	bcf	status, 6	;RP1=0, select bank1
  8087  012C  01A1               	clrf	(PID_UPDATE@proportional0+1)^080h
  8088  012D  07A1               	addwf	(PID_UPDATE@proportional0+1)^080h
  8089  012E  1283               	bcf	status, 5	;RP0=0, select bank0
  8090  012F  1303               	bcf	status, 6	;RP1=0, select bank0
  8091  0130  0864               	movf	(_proportional),w
  8092  0131  1683               	bsf	status, 5	;RP0=1, select bank1
  8093  0132  1303               	bcf	status, 6	;RP1=0, select bank1
  8094  0133  01A0               	clrf	(PID_UPDATE@proportional0)^080h
  8095  0134  07A0               	addwf	(PID_UPDATE@proportional0)^080h
  8096                           
  8097  0135  2936               	goto	l1241
  8098                           	line	445
  8099                           	
  8100  0136                     l1237:	
  8101                           	line	447
  8102                           	
  8103  0136                     l1241:	
  8104  0136  0008               	return
  8105                           	opt stack 0
  8106                           GLOBAL	__end_of_PID_UPDATE
  8107  0137                     	__end_of_PID_UPDATE:
  8108 ;; =============== function _PID_UPDATE ends ============
  8109                           
  8110                           	signat	_PID_UPDATE,4216
  8111                           	global	_pwm_init
  8112                           psect	text919,local,class=CODE,delta=2
  8113                           global __ptext919
  8114  0C4E                     __ptext919:
  8115                           
  8116 ;; *************** function _pwm_init *****************
  8117 ;; Defined at:
  8118 ;;		line 473 in file "../main.c"
  8119 ;; Parameters:    Size  Location     Type
  8120 ;;		None
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;		None
  8123 ;; Return value:  Size  Location     Type
  8124 ;;		None               void
  8125 ;; Registers used:
  8126 ;;		wreg, status,2
  8127 ;; Tracked objects:
  8128 ;;		On entry : 0/0
  8129 ;;		On exit  : 0/0
  8130 ;;		Unchanged: 0/0
  8131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8132 ;;      Params:         0       0       0       0       0
  8133 ;;      Locals:         0       0       0       0       0
  8134 ;;      Temps:          0       0       0       0       0
  8135 ;;      Totals:         0       0       0       0       0
  8136 ;;Total ram usage:        0 bytes
  8137 ;; Hardware stack levels used:    1
  8138 ;; This function calls:
  8139 ;;		Nothing
  8140 ;; This function is called by:
  8141 ;;		_main
  8142 ;; This function uses a non-reentrant model
  8143 ;;
  8144                           psect	text919
  8145                           	file	"../main.c"
  8146                           	line	473
  8147                           	global	__size_of_pwm_init
  8148  001E                     	__size_of_pwm_init	equ	__end_of_pwm_init-_pwm_init
  8149                           	
  8150  0C4E                     _pwm_init:	
  8151                           	opt	stack 7
  8152                           ; Regs used in _pwm_init: [wreg+status,2]
  8153                           	line	475
  8154                           	
  8155  0C4E                     l4433:	
  8156                           ;main.c: 475: PR2 = 254;
  8157  0C4E  30FE               	movlw	(0FEh)
  8158  0C4F  1683               	bsf	status, 5	;RP0=1, select bank1
  8159  0C50  1303               	bcf	status, 6	;RP1=0, select bank1
  8160  0C51  0092               	movwf	(146)^080h	;volatile
  8161                           	line	476
  8162                           	
  8163  0C52                     l4435:	
  8164                           ;main.c: 476: T2CKPS1 = 0;
  8165  0C52  1283               	bcf	status, 5	;RP0=0, select bank0
  8166  0C53  1303               	bcf	status, 6	;RP1=0, select bank0
  8167  0C54  1092               	bcf	(145/8),(145)&7
  8168                           	line	477
  8169                           	
  8170  0C55                     l4437:	
  8171                           ;main.c: 477: T2CKPS0 = 1;
  8172  0C55  1412               	bsf	(144/8),(144)&7
  8173                           	line	479
  8174                           	
  8175  0C56                     l4439:	
  8176                           ;main.c: 479: CCPR1L = 0;
  8177  0C56  0195               	clrf	(21)	;volatile
  8178                           	line	480
  8179                           	
  8180  0C57                     l4441:	
  8181                           ;main.c: 480: CCPR2L = 0;
  8182  0C57  019B               	clrf	(27)	;volatile
  8183                           	line	481
  8184                           	
  8185  0C58                     l4443:	
  8186                           ;main.c: 481: TMR2ON = 1;
  8187  0C58  1512               	bsf	(146/8),(146)&7
  8188                           	line	484
  8189                           	
  8190  0C59                     l4445:	
  8191                           ;main.c: 484: P1M1 = 0;
  8192  0C59  1397               	bcf	(191/8),(191)&7
  8193                           	line	485
  8194                           	
  8195  0C5A                     l4447:	
  8196                           ;main.c: 485: P1M0 = 0;
  8197  0C5A  1317               	bcf	(190/8),(190)&7
  8198                           	line	487
  8199                           	
  8200  0C5B                     l4449:	
  8201                           ;main.c: 487: DC1B1 = 0;
  8202  0C5B  1297               	bcf	(189/8),(189)&7
  8203                           	line	488
  8204                           	
  8205  0C5C                     l4451:	
  8206                           ;main.c: 488: DC1B0 = 0;
  8207  0C5C  1217               	bcf	(188/8),(188)&7
  8208                           	line	490
  8209                           	
  8210  0C5D                     l4453:	
  8211                           ;main.c: 490: CCP1M3 = 1;
  8212  0C5D  1597               	bsf	(187/8),(187)&7
  8213                           	line	491
  8214                           	
  8215  0C5E                     l4455:	
  8216                           ;main.c: 491: CCP1M2 = 1;
  8217  0C5E  1517               	bsf	(186/8),(186)&7
  8218                           	line	492
  8219                           	
  8220  0C5F                     l4457:	
  8221                           ;main.c: 492: CCP1M1 = 0;
  8222  0C5F  1097               	bcf	(185/8),(185)&7
  8223                           	line	493
  8224                           	
  8225  0C60                     l4459:	
  8226                           ;main.c: 493: CCP1M0 = 0;
  8227  0C60  1017               	bcf	(184/8),(184)&7
  8228                           	line	496
  8229                           	
  8230  0C61                     l4461:	
  8231                           ;main.c: 496: CCP2X = 0;
  8232  0C61  129D               	bcf	(237/8),(237)&7
  8233                           	line	497
  8234                           	
  8235  0C62                     l4463:	
  8236                           ;main.c: 497: CCP2Y = 0;
  8237  0C62  121D               	bcf	(236/8),(236)&7
  8238                           	line	499
  8239                           	
  8240  0C63                     l4465:	
  8241                           ;main.c: 499: CCP2M3 = 1;
  8242  0C63  159D               	bsf	(235/8),(235)&7
  8243                           	line	500
  8244                           	
  8245  0C64                     l4467:	
  8246                           ;main.c: 500: CCP2M2 = 1;
  8247  0C64  151D               	bsf	(234/8),(234)&7
  8248                           	line	501
  8249                           	
  8250  0C65                     l4469:	
  8251                           ;main.c: 501: CCP2M1 = 0;
  8252  0C65  109D               	bcf	(233/8),(233)&7
  8253                           	line	502
  8254                           	
  8255  0C66                     l4471:	
  8256                           ;main.c: 502: CCP2M0 = 0;
  8257  0C66  101D               	bcf	(232/8),(232)&7
  8258                           	line	505
  8259                           	
  8260  0C67                     l4473:	
  8261                           ;main.c: 505: RB2 = 1; RB3 = 0; RB4 = 0; RB5 = 1;;
  8262  0C67  1506               	bsf	(50/8),(50)&7
  8263                           	
  8264  0C68                     l4475:	
  8265  0C68  1186               	bcf	(51/8),(51)&7
  8266                           	
  8267  0C69                     l4477:	
  8268  0C69  1206               	bcf	(52/8),(52)&7
  8269                           	
  8270  0C6A                     l4479:	
  8271  0C6A  1686               	bsf	(53/8),(53)&7
  8272                           	line	506
  8273                           	
  8274  0C6B                     l1247:	
  8275  0C6B  0008               	return
  8276                           	opt stack 0
  8277                           GLOBAL	__end_of_pwm_init
  8278  0C6C                     	__end_of_pwm_init:
  8279 ;; =============== function _pwm_init ends ============
  8280                           
  8281                           	signat	_pwm_init,88
  8282                           	global	_initIO
  8283                           psect	text920,local,class=CODE,delta=2
  8284                           global __ptext920
  8285  0C34                     __ptext920:
  8286                           
  8287 ;; *************** function _initIO *****************
  8288 ;; Defined at:
  8289 ;;		line 448 in file "../main.c"
  8290 ;; Parameters:    Size  Location     Type
  8291 ;;		None
  8292 ;; Auto vars:     Size  Location     Type
  8293 ;;		None
  8294 ;; Return value:  Size  Location     Type
  8295 ;;		None               void
  8296 ;; Registers used:
  8297 ;;		wreg, status,2
  8298 ;; Tracked objects:
  8299 ;;		On entry : 0/0
  8300 ;;		On exit  : 0/0
  8301 ;;		Unchanged: 0/0
  8302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8303 ;;      Params:         0       0       0       0       0
  8304 ;;      Locals:         0       0       0       0       0
  8305 ;;      Temps:          0       0       0       0       0
  8306 ;;      Totals:         0       0       0       0       0
  8307 ;;Total ram usage:        0 bytes
  8308 ;; Hardware stack levels used:    1
  8309 ;; This function calls:
  8310 ;;		Nothing
  8311 ;; This function is called by:
  8312 ;;		_main
  8313 ;; This function uses a non-reentrant model
  8314 ;;
  8315                           psect	text920
  8316                           	file	"../main.c"
  8317                           	line	448
  8318                           	global	__size_of_initIO
  8319  001A                     	__size_of_initIO	equ	__end_of_initIO-_initIO
  8320                           	
  8321  0C34                     _initIO:	
  8322                           	opt	stack 7
  8323                           ; Regs used in _initIO: [wreg+status,2]
  8324                           	line	451
  8325                           	
  8326  0C34                     l4419:	
  8327                           ;main.c: 451: PORTB = 0;
  8328  0C34  1283               	bcf	status, 5	;RP0=0, select bank0
  8329  0C35  1303               	bcf	status, 6	;RP1=0, select bank0
  8330  0C36  0186               	clrf	(6)	;volatile
  8331                           	line	452
  8332                           ;main.c: 452: PORTC = 0;
  8333  0C37  0187               	clrf	(7)	;volatile
  8334                           	line	453
  8335                           ;main.c: 453: PORTD = 0;
  8336  0C38  0188               	clrf	(8)	;volatile
  8337                           	line	454
  8338                           ;main.c: 454: PORTE = 0;
  8339  0C39  0189               	clrf	(9)	;volatile
  8340                           	line	457
  8341                           	
  8342  0C3A                     l4421:	
  8343                           ;main.c: 457: TRISA = 0b11111111;
  8344  0C3A  30FF               	movlw	(0FFh)
  8345  0C3B  1683               	bsf	status, 5	;RP0=1, select bank1
  8346  0C3C  1303               	bcf	status, 6	;RP1=0, select bank1
  8347  0C3D  0085               	movwf	(133)^080h	;volatile
  8348                           	line	458
  8349                           	
  8350  0C3E                     l4423:	
  8351                           ;main.c: 458: TRISB = 0b00000011;
  8352  0C3E  3003               	movlw	(03h)
  8353  0C3F  0086               	movwf	(134)^080h	;volatile
  8354                           	line	459
  8355                           	
  8356  0C40                     l4425:	
  8357                           ;main.c: 459: TRISC = 0b10011000;
  8358  0C40  3098               	movlw	(098h)
  8359  0C41  0087               	movwf	(135)^080h	;volatile
  8360                           	line	460
  8361                           	
  8362  0C42                     l4427:	
  8363                           ;main.c: 460: TRISD = 0;
  8364  0C42  0188               	clrf	(136)^080h	;volatile
  8365                           	line	461
  8366                           ;main.c: 461: TRISE = 0b00000011;
  8367  0C43  3003               	movlw	(03h)
  8368  0C44  0089               	movwf	(137)^080h	;volatile
  8369                           	line	463
  8370                           ;main.c: 463: ANSEL=0x01;
  8371  0C45  3001               	movlw	(01h)
  8372  0C46  1683               	bsf	status, 5	;RP0=1, select bank3
  8373  0C47  1703               	bsf	status, 6	;RP1=1, select bank3
  8374  0C48  0088               	movwf	(392)^0180h	;volatile
  8375                           	line	464
  8376                           	
  8377  0C49                     l4429:	
  8378                           ;main.c: 464: ANSELH=0x00;
  8379  0C49  0189               	clrf	(393)^0180h	;volatile
  8380                           	line	465
  8381                           	
  8382  0C4A                     l4431:	
  8383                           ;main.c: 465: RB7=0;
  8384  0C4A  1283               	bcf	status, 5	;RP0=0, select bank0
  8385  0C4B  1303               	bcf	status, 6	;RP1=0, select bank0
  8386  0C4C  1386               	bcf	(55/8),(55)&7
  8387                           	line	467
  8388                           	
  8389  0C4D                     l1244:	
  8390  0C4D  0008               	return
  8391                           	opt stack 0
  8392                           GLOBAL	__end_of_initIO
  8393  0C4E                     	__end_of_initIO:
  8394 ;; =============== function _initIO ends ============
  8395                           
  8396                           	signat	_initIO,88
  8397                           	global	_UART_INIT
  8398                           psect	text921,local,class=CODE,delta=2
  8399                           global __ptext921
  8400  0C1C                     __ptext921:
  8401                           
  8402 ;; *************** function _UART_INIT *****************
  8403 ;; Defined at:
  8404 ;;		line 651 in file "../main.c"
  8405 ;; Parameters:    Size  Location     Type
  8406 ;;		None
  8407 ;; Auto vars:     Size  Location     Type
  8408 ;;		None
  8409 ;; Return value:  Size  Location     Type
  8410 ;;		None               void
  8411 ;; Registers used:
  8412 ;;		wreg, status,2
  8413 ;; Tracked objects:
  8414 ;;		On entry : 0/0
  8415 ;;		On exit  : 0/0
  8416 ;;		Unchanged: 0/0
  8417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8418 ;;      Params:         0       0       0       0       0
  8419 ;;      Locals:         0       0       0       0       0
  8420 ;;      Temps:          0       0       0       0       0
  8421 ;;      Totals:         0       0       0       0       0
  8422 ;;Total ram usage:        0 bytes
  8423 ;; Hardware stack levels used:    1
  8424 ;; This function calls:
  8425 ;;		Nothing
  8426 ;; This function is called by:
  8427 ;;		_LSA08_Init
  8428 ;; This function uses a non-reentrant model
  8429 ;;
  8430                           psect	text921
  8431                           	file	"../main.c"
  8432                           	line	651
  8433                           	global	__size_of_UART_INIT
  8434  0018                     	__size_of_UART_INIT	equ	__end_of_UART_INIT-_UART_INIT
  8435                           	
  8436  0C1C                     _UART_INIT:	
  8437                           	opt	stack 6
  8438                           ; Regs used in _UART_INIT: [wreg+status,2]
  8439                           	line	654
  8440                           	
  8441  0C1C                     l4371:	
  8442                           ;main.c: 654: TRISCbits.TRISC7=1;
  8443  0C1C  1683               	bsf	status, 5	;RP0=1, select bank1
  8444  0C1D  1303               	bcf	status, 6	;RP1=0, select bank1
  8445  0C1E  1787               	bsf	(135)^080h,7	;volatile
  8446                           	line	655
  8447                           ;main.c: 655: TRISCbits.TRISC6=0;
  8448  0C1F  1307               	bcf	(135)^080h,6	;volatile
  8449                           	line	658
  8450                           ;main.c: 658: TRISCbits.TRISC0=0;
  8451  0C20  1007               	bcf	(135)^080h,0	;volatile
  8452                           	line	662
  8453                           ;main.c: 662: TXSTAbits.BRGH = 1;
  8454  0C21  1518               	bsf	(152)^080h,2	;volatile
  8455                           	line	663
  8456                           ;main.c: 663: BAUDCTLbits.BRG16=1;
  8457  0C22  1683               	bsf	status, 5	;RP0=1, select bank3
  8458  0C23  1703               	bsf	status, 6	;RP1=1, select bank3
  8459  0C24  1587               	bsf	(391)^0180h,3	;volatile
  8460                           	line	665
  8461                           	
  8462  0C25                     l4373:	
  8463                           ;main.c: 665: SPBRG =0x56; SPBRGH=0x00;
  8464  0C25  3056               	movlw	(056h)
  8465  0C26  1683               	bsf	status, 5	;RP0=1, select bank1
  8466  0C27  1303               	bcf	status, 6	;RP1=0, select bank1
  8467  0C28  0099               	movwf	(153)^080h	;volatile
  8468                           	
  8469  0C29                     l4375:	
  8470  0C29  019A               	clrf	(154)^080h	;volatile
  8471                           	line	666
  8472                           	
  8473  0C2A                     l4377:	
  8474                           ;main.c: 666: RCSTAbits.SPEN = 1;
  8475  0C2A  1283               	bcf	status, 5	;RP0=0, select bank0
  8476  0C2B  1303               	bcf	status, 6	;RP1=0, select bank0
  8477  0C2C  1798               	bsf	(24),7	;volatile
  8478                           	line	667
  8479                           	
  8480  0C2D                     l4379:	
  8481                           ;main.c: 667: TXSTAbits.TXEN = 1;
  8482  0C2D  1683               	bsf	status, 5	;RP0=1, select bank1
  8483  0C2E  1303               	bcf	status, 6	;RP1=0, select bank1
  8484  0C2F  1698               	bsf	(152)^080h,5	;volatile
  8485                           	line	668
  8486                           	
  8487  0C30                     l4381:	
  8488                           ;main.c: 668: RCSTAbits.CREN = 1;
  8489  0C30  1283               	bcf	status, 5	;RP0=0, select bank0
  8490  0C31  1303               	bcf	status, 6	;RP1=0, select bank0
  8491  0C32  1618               	bsf	(24),4	;volatile
  8492                           	line	670
  8493                           	
  8494  0C33                     l1311:	
  8495  0C33  0008               	return
  8496                           	opt stack 0
  8497                           GLOBAL	__end_of_UART_INIT
  8498  0C34                     	__end_of_UART_INIT:
  8499 ;; =============== function _UART_INIT ends ============
  8500                           
  8501                           	signat	_UART_INIT,88
  8502                           	global	_UART_SEND
  8503                           psect	text922,local,class=CODE,delta=2
  8504                           global __ptext922
  8505  0B89                     __ptext922:
  8506                           
  8507 ;; *************** function _UART_SEND *****************
  8508 ;; Defined at:
  8509 ;;		line 673 in file "../main.c"
  8510 ;; Parameters:    Size  Location     Type
  8511 ;;  data            1    wreg     unsigned char 
  8512 ;; Auto vars:     Size  Location     Type
  8513 ;;  data            1    0[COMMON] unsigned char 
  8514 ;; Return value:  Size  Location     Type
  8515 ;;		None               void
  8516 ;; Registers used:
  8517 ;;		wreg
  8518 ;; Tracked objects:
  8519 ;;		On entry : 0/0
  8520 ;;		On exit  : 0/0
  8521 ;;		Unchanged: 0/0
  8522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8523 ;;      Params:         0       0       0       0       0
  8524 ;;      Locals:         1       0       0       0       0
  8525 ;;      Temps:          0       0       0       0       0
  8526 ;;      Totals:         1       0       0       0       0
  8527 ;;Total ram usage:        1 bytes
  8528 ;; Hardware stack levels used:    1
  8529 ;; This function calls:
  8530 ;;		Nothing
  8531 ;; This function is called by:
  8532 ;;		_SEND_PACKET
  8533 ;; This function uses a non-reentrant model
  8534 ;;
  8535                           psect	text922
  8536                           	file	"../main.c"
  8537                           	line	673
  8538                           	global	__size_of_UART_SEND
  8539  000E                     	__size_of_UART_SEND	equ	__end_of_UART_SEND-_UART_SEND
  8540                           	
  8541  0B89                     _UART_SEND:	
  8542                           	opt	stack 3
  8543                           ; Regs used in _UART_SEND: [wreg]
  8544                           ;UART_SEND@data stored from wreg
  8545  0B89  00F0               	movwf	(UART_SEND@data)
  8546                           	line	674
  8547                           	
  8548  0B8A                     l4367:	
  8549                           ;main.c: 674: while(!TRMT) ;
  8550  0B8A  2B8B               	goto	l1314
  8551                           	
  8552  0B8B                     l1315:	
  8553                           	
  8554  0B8B                     l1314:	
  8555  0B8B  1683               	bsf	status, 5	;RP0=1, select bank1
  8556  0B8C  1303               	bcf	status, 6	;RP1=0, select bank1
  8557  0B8D  1C98               	btfss	(1217/8)^080h,(1217)&7
  8558  0B8E  2B90               	goto	u2781
  8559  0B8F  2B91               	goto	u2780
  8560  0B90                     u2781:
  8561  0B90  2B8B               	goto	l1314
  8562  0B91                     u2780:
  8563  0B91  2B92               	goto	l4369
  8564                           	
  8565  0B92                     l1316:	
  8566                           	line	675
  8567                           	
  8568  0B92                     l4369:	
  8569                           ;main.c: 675: TXREG=data;
  8570  0B92  0870               	movf	(UART_SEND@data),w
  8571  0B93  1283               	bcf	status, 5	;RP0=0, select bank0
  8572  0B94  1303               	bcf	status, 6	;RP1=0, select bank0
  8573  0B95  0099               	movwf	(25)	;volatile
  8574                           	line	677
  8575                           	
  8576  0B96                     l1317:	
  8577  0B96  0008               	return
  8578                           	opt stack 0
  8579                           GLOBAL	__end_of_UART_SEND
  8580  0B97                     	__end_of_UART_SEND:
  8581 ;; =============== function _UART_SEND ends ============
  8582                           
  8583                           	signat	_UART_SEND,4216
  8584                           	global	_UART_REC
  8585                           psect	text923,local,class=CODE,delta=2
  8586                           global __ptext923
  8587  0EAB                     __ptext923:
  8588                           
  8589 ;; *************** function _UART_REC *****************
  8590 ;; Defined at:
  8591 ;;		line 680 in file "../main.c"
  8592 ;; Parameters:    Size  Location     Type
  8593 ;;		None
  8594 ;; Auto vars:     Size  Location     Type
  8595 ;;  waitcount       4    1[COMMON] unsigned long 
  8596 ;;  rec_data        1    5[COMMON] unsigned char 
  8597 ;; Return value:  Size  Location     Type
  8598 ;;                  1    wreg      unsigned char 
  8599 ;; Registers used:
  8600 ;;		wreg, status,2, status,0
  8601 ;; Tracked objects:
  8602 ;;		On entry : 0/0
  8603 ;;		On exit  : 0/0
  8604 ;;		Unchanged: 0/0
  8605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8606 ;;      Params:         0       0       0       0       0
  8607 ;;      Locals:         5       0       0       0       0
  8608 ;;      Temps:          1       0       0       0       0
  8609 ;;      Totals:         6       0       0       0       0
  8610 ;;Total ram usage:        6 bytes
  8611 ;; Hardware stack levels used:    1
  8612 ;; This function calls:
  8613 ;;		Nothing
  8614 ;; This function is called by:
  8615 ;;		_UART_RESPONSE
  8616 ;;		_LSA08_GetPosition
  8617 ;;		_UART_DUMP
  8618 ;; This function uses a non-reentrant model
  8619 ;;
  8620                           psect	text923
  8621                           	file	"../main.c"
  8622                           	line	680
  8623                           	global	__size_of_UART_REC
  8624  0062                     	__size_of_UART_REC	equ	__end_of_UART_REC-_UART_REC
  8625                           	
  8626  0EAB                     _UART_REC:	
  8627                           	opt	stack 4
  8628                           ; Regs used in _UART_REC: [wreg+status,2+status,0]
  8629                           	line	681
  8630                           	
  8631  0EAB                     l4325:	
  8632                           ;main.c: 681: unsigned long waitcount=0;
  8633  0EAB  3000               	movlw	0
  8634  0EAC  00F4               	movwf	(UART_REC@waitcount+3)
  8635  0EAD  3000               	movlw	0
  8636  0EAE  00F3               	movwf	(UART_REC@waitcount+2)
  8637  0EAF  3000               	movlw	0
  8638  0EB0  00F2               	movwf	(UART_REC@waitcount+1)
  8639  0EB1  3000               	movlw	0
  8640  0EB2  00F1               	movwf	(UART_REC@waitcount)
  8641                           
  8642                           	line	684
  8643                           	
  8644  0EB3                     l4327:	
  8645                           ;main.c: 682: unsigned char rec_data;
  8646                           ;main.c: 684: if(RCSTAbits.OERR){
  8647  0EB3  1283               	bcf	status, 5	;RP0=0, select bank0
  8648  0EB4  1303               	bcf	status, 6	;RP1=0, select bank0
  8649  0EB5  1C98               	btfss	(24),1	;volatile
  8650  0EB6  2EB8               	goto	u2731
  8651  0EB7  2EB9               	goto	u2730
  8652  0EB8                     u2731:
  8653  0EB8  2EE8               	goto	l1322
  8654  0EB9                     u2730:
  8655                           	line	685
  8656                           	
  8657  0EB9                     l4329:	
  8658                           ;main.c: 685: RCSTAbits.CREN=0;
  8659  0EB9  1218               	bcf	(24),4	;volatile
  8660                           	line	686
  8661                           ;main.c: 686: RCSTAbits.CREN=1;
  8662  0EBA  1618               	bsf	(24),4	;volatile
  8663                           	line	687
  8664                           	
  8665  0EBB                     l4331:	
  8666                           ;main.c: 687: ERR_FLAG=1;
  8667  0EBB  01E8               	clrf	(_ERR_FLAG)
  8668  0EBC  1403               	bsf	status,0
  8669  0EBD  0DE8               	rlf	(_ERR_FLAG),f
  8670                           	line	688
  8671                           	
  8672  0EBE                     l4333:	
  8673                           ;main.c: 688: return(255);
  8674  0EBE  30FF               	movlw	(0FFh)
  8675  0EBF  2F0C               	goto	l1321
  8676                           	
  8677  0EC0                     l4335:	
  8678  0EC0  2F0C               	goto	l1321
  8679                           	line	689
  8680                           	
  8681  0EC1                     l1320:	
  8682                           	line	691
  8683                           ;main.c: 689: }
  8684                           ;main.c: 691: while (RCIF == 0)
  8685  0EC1  2EE8               	goto	l1322
  8686                           	
  8687  0EC2                     l1323:	
  8688                           	line	693
  8689                           	
  8690  0EC2                     l4337:	
  8691                           ;main.c: 692: {
  8692                           ;main.c: 693: waitcount++;
  8693  0EC2  3001               	movlw	01h
  8694  0EC3  07F1               	addwf	(UART_REC@waitcount),f
  8695  0EC4  3000               	movlw	0
  8696  0EC5  1803               	skipnc
  8697  0EC6  3001               movlw 1
  8698  0EC7  07F2               	addwf	(UART_REC@waitcount+1),f
  8699  0EC8  3000               	movlw	0
  8700  0EC9  1803               	skipnc
  8701  0ECA  3001               movlw 1
  8702  0ECB  07F3               	addwf	(UART_REC@waitcount+2),f
  8703  0ECC  3000               	movlw	0
  8704  0ECD  1803               	skipnc
  8705  0ECE  3001               movlw 1
  8706  0ECF  07F4               	addwf	(UART_REC@waitcount+3),f
  8707                           	line	694
  8708                           ;main.c: 694: if (waitcount > 15000){
  8709  0ED0  3000               	movlw	0
  8710  0ED1  0274               	subwf	(UART_REC@waitcount+3),w
  8711  0ED2  1D03               	skipz
  8712  0ED3  2EDE               	goto	u2745
  8713  0ED4  3000               	movlw	0
  8714  0ED5  0273               	subwf	(UART_REC@waitcount+2),w
  8715  0ED6  1D03               	skipz
  8716  0ED7  2EDE               	goto	u2745
  8717  0ED8  303A               	movlw	03Ah
  8718  0ED9  0272               	subwf	(UART_REC@waitcount+1),w
  8719  0EDA  1D03               	skipz
  8720  0EDB  2EDE               	goto	u2745
  8721  0EDC  3099               	movlw	099h
  8722  0EDD  0271               	subwf	(UART_REC@waitcount),w
  8723  0EDE                     u2745:
  8724  0EDE  1C03               	skipc
  8725  0EDF  2EE1               	goto	u2741
  8726  0EE0  2EE2               	goto	u2740
  8727  0EE1                     u2741:
  8728  0EE1  2EE8               	goto	l1322
  8729  0EE2                     u2740:
  8730                           	line	695
  8731                           	
  8732  0EE2                     l4339:	
  8733                           ;main.c: 695: ERR_FLAG=1;
  8734  0EE2  01E8               	clrf	(_ERR_FLAG)
  8735  0EE3  1403               	bsf	status,0
  8736  0EE4  0DE8               	rlf	(_ERR_FLAG),f
  8737                           	line	696
  8738                           	
  8739  0EE5                     l4341:	
  8740                           ;main.c: 696: return (255);
  8741  0EE5  30FF               	movlw	(0FFh)
  8742  0EE6  2F0C               	goto	l1321
  8743                           	
  8744  0EE7                     l4343:	
  8745  0EE7  2F0C               	goto	l1321
  8746                           	line	697
  8747                           	
  8748  0EE8                     l1324:	
  8749                           	line	699
  8750                           	
  8751  0EE8                     l1322:	
  8752                           	line	691
  8753  0EE8  1E8C               	btfss	(101/8),(101)&7
  8754  0EE9  2EEB               	goto	u2751
  8755  0EEA  2EEC               	goto	u2750
  8756  0EEB                     u2751:
  8757  0EEB  2EC2               	goto	l4337
  8758  0EEC                     u2750:
  8759  0EEC  2EED               	goto	l4345
  8760                           	
  8761  0EED                     l1325:	
  8762                           	line	701
  8763                           	
  8764  0EED                     l4345:	
  8765                           ;main.c: 697: }
  8766                           ;main.c: 699: }
  8767                           ;main.c: 701: rec_data = RCREG;
  8768  0EED  081A               	movf	(26),w	;volatile
  8769  0EEE  00F0               	movwf	(??_UART_REC+0)+0
  8770  0EEF  0870               	movf	(??_UART_REC+0)+0,w
  8771  0EF0  00F5               	movwf	(UART_REC@rec_data)
  8772                           	line	703
  8773                           	
  8774  0EF1                     l4347:	
  8775                           ;main.c: 703: if (FERR == 1) {
  8776  0EF1  1D18               	btfss	(194/8),(194)&7
  8777  0EF2  2EF4               	goto	u2761
  8778  0EF3  2EF5               	goto	u2760
  8779  0EF4                     u2761:
  8780  0EF4  2F08               	goto	l1326
  8781  0EF5                     u2760:
  8782  0EF5  2EFC               	goto	l4353
  8783                           	line	704
  8784                           	
  8785  0EF6                     l4349:	
  8786                           ;main.c: 704: while(RCIF) rec_data=RCREG;
  8787  0EF6  2EFC               	goto	l4353
  8788                           	
  8789  0EF7                     l1328:	
  8790                           	
  8791  0EF7                     l4351:	
  8792  0EF7  081A               	movf	(26),w	;volatile
  8793  0EF8  00F0               	movwf	(??_UART_REC+0)+0
  8794  0EF9  0870               	movf	(??_UART_REC+0)+0,w
  8795  0EFA  00F5               	movwf	(UART_REC@rec_data)
  8796  0EFB  2EFC               	goto	l4353
  8797                           	
  8798  0EFC                     l1327:	
  8799                           	
  8800  0EFC                     l4353:	
  8801  0EFC  1A8C               	btfsc	(101/8),(101)&7
  8802  0EFD  2EFF               	goto	u2771
  8803  0EFE  2F00               	goto	u2770
  8804  0EFF                     u2771:
  8805  0EFF  2EF7               	goto	l4351
  8806  0F00                     u2770:
  8807  0F00  2F01               	goto	l4355
  8808                           	
  8809  0F01                     l1329:	
  8810                           	line	705
  8811                           	
  8812  0F01                     l4355:	
  8813                           ;main.c: 705: ERR_FLAG=1;
  8814  0F01  01E8               	clrf	(_ERR_FLAG)
  8815  0F02  1403               	bsf	status,0
  8816  0F03  0DE8               	rlf	(_ERR_FLAG),f
  8817                           	line	706
  8818                           	
  8819  0F04                     l4357:	
  8820                           ;main.c: 706: return (255);
  8821  0F04  30FF               	movlw	(0FFh)
  8822  0F05  2F0C               	goto	l1321
  8823                           	
  8824  0F06                     l4359:	
  8825  0F06  2F0C               	goto	l1321
  8826                           	line	707
  8827                           	
  8828  0F07                     l4361:	
  8829                           ;main.c: 707: }
  8830  0F07  2F0C               	goto	l1321
  8831                           	line	708
  8832                           	
  8833  0F08                     l1326:	
  8834                           	line	709
  8835                           ;main.c: 708: else{
  8836                           ;main.c: 709: ERR_FLAG=0;
  8837  0F08  01E8               	clrf	(_ERR_FLAG)
  8838                           	line	710
  8839                           	
  8840  0F09                     l4363:	
  8841                           ;main.c: 710: return (rec_data);
  8842  0F09  0875               	movf	(UART_REC@rec_data),w
  8843  0F0A  2F0C               	goto	l1321
  8844                           	
  8845  0F0B                     l4365:	
  8846  0F0B  2F0C               	goto	l1321
  8847                           	line	711
  8848                           	
  8849  0F0C                     l1330:	
  8850                           	line	712
  8851                           	
  8852  0F0C                     l1321:	
  8853  0F0C  0008               	return
  8854                           	opt stack 0
  8855                           GLOBAL	__end_of_UART_REC
  8856  0F0D                     	__end_of_UART_REC:
  8857 ;; =============== function _UART_REC ends ============
  8858                           
  8859                           	signat	_UART_REC,89
  8860                           psect	text924,local,class=CODE,delta=2
  8861                           global __ptext924
  8862  0000                     __ptext924:
  8863                           	global	btemp
  8864  007E                     	btemp set 07Eh
  8865                           
  8866                           	DABS	1,126,2	;btemp
  8867                           	global	wtemp0
  8868  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Jul 05 14:56:07 2012

                 ?_LSA08_Init 0070   __end_of_LSA08_ClearJunction 0BCA                             pc 0002  
                ?_lcd_putchar 0070                            _RD 0C60                            _Kd 00AA  
                          _Ki 00AD                            _WR 0C61                            _Kp 00B0  
                          fsr 0004                  ___ftadd@exp1 004A                  ___ftadd@exp2 0049  
                ___ftadd@sign 0048                           _GIE 005F                           _RB0 0030  
                         _RB1 0031                           _RB2 0032                           _RB3 0033  
                         _RB4 0034                           _RB5 0035                           _RB6 0036  
                         _RB7 0037                           _RE2 004A                           _PR2 0092  
                         _rec 0066              ?_LSA08_Calibrate 0070                           _pos 006B  
                         fsr0 0004                           indf 0000         line_follow@rightspeed 004F  
           set_lcd_e@b_output 0070                  _proportional 0064                          l1103 0D70  
                        l1111 0CAF                          l1104 0D91                          l1120 0CFE  
                        l1105 0D8E                          l1106 0D8A                          l1114 0C04  
                        l1210 032A                          l1202 030A                          l1107 0D8D  
                        l1123 0C1B                          l1211 032A                          l1203 0324  
                        l1108 0D91                          l1220 0353                          l1212 032F  
                        l1204 0312                          l1117 0CD9                          l1301 0185  
                        l1221 03AB                          l1213 033D                          l1205 0312  
                        l1118 0CE8                          l1126 0BC9                          l1302 0145  
                        l1222 0366                          l1214 0330                          l1206 0317  
                        l1311 0C33                          l1119 0CF7                          l1303 017E  
                        l1223 037F                          l1215 03AD                          l1207 0323  
                        l1320 0EC1                          l1240 0118                          l1144 0C75  
                        l1304 018C                          l1224 0389                          l1208 034C  
                        l1216 0331                          l1160 0222                          l1321 0F0C  
                        l1241 0136                          l1145 0C8A                          l1129 0BDC  
                        l1305 01AB                          l1225 038A                          l1209 034B  
                        l1217 034A                          l1161 024C                          l1330 0F0C  
                        l1322 0EE8                          l1314 0B8B                          l1250 0B3A  
                        l1306 019E                          l1226 03AC                          l1218 0336  
                        l1170 003D                          l1162 0255                          l1323 0EC2  
                        l1315 0B8B                          l1307 01C6                          l1227 03AD  
                        l1219 039E                          l1171 0084                          l1163 024D  
                        l1155 0215                          l1324 0EE8                          l1316 0B92  
                        l1244 0C4D                          l1236 00C6                          l1308 01C6  
                        l1172 004F                          l1180 03EC                          l1164 0253  
                        l1156 0215                          l1325 0EED                          l1317 0B96  
                        l1237 0136                          l1253 0B40                          l1333 0BAF  
                        l1173 0065                          l1181 0412                          l1165 0254  
                        l1157 021C                          l1326 0F08                          l1238 0102  
                        l1334 0BA6                          l1262 0B59                          l1190 0678  
                        l1174 0092                          l1182 0424                          l1166 0255  
                        l1158 021D                          l1327 0EFC                          l1247 0C6B  
                        l1239 0119                          l1335 0BB6                          l1271 0CC3  
                        l1191 0682                          l1175 00AF                          l1183 0462  
                        l1159 021D                          l1328 0EF7                          l1336 0BB6  
                        l1256 0BA4                          l1272 0CD4                          l1280 0E5C  
                        l1192 0681                          l1184 0476                          l1329 0F01  
                        l1273 0CD4                          l1281 0E81                          l1193 06A5  
                        l1169 008A                          l1185 0495                          l1194 06AF  
                        l1186 0496                          l1178 03DC                          l2331 0E53  
                        l1259 0D5C                          l1283 0E7B                          l1195 06AE  
                        l1187 0496                          l1179 03DD                          l1292 0B70  
                        l2332 0E25                          l1276 0B88                          l1268 0B64  
                        l1284 0E92                          l1196 06B9                          l2333 0E19  
                        l2341 0E05                          l1285 0EAA                          l2334 0E2A  
                        l2342 0DDF                          l2430 0551                          l1286 0EAA  
                        l1295 0B7C                          l2335 0E2B                          l2343 0DD3  
                        l2431 0568                          l2423 04B2                          l1279 0E99  
                        l1199 0F84                          l2336 0E44                          l2344 0DE4  
                        l2440 02E4                          l2424 0584                          l2337 0E52  
                        l2345 0DE5                          l2441 02D0                          l1289 0D29  
                        l2425 04CB                          l5001 0664                          l1298 0B46  
                        l2338 0E5A                          l2346 0DF6                          l2442 02DD  
                        l2434 0275                          l2426 050B                          l2347 0E04  
                        l2443 02D1                          l2435 02FD                          l2371 06E9  
                        l2427 0520                          l5011 069E                          l5003 0671  
                        l2348 0E0C                          l2444 02E3                          l2436 02C0  
                        l2372 07FF                          l2428 0537                          l2445 02F4  
                        l2437 02AC                          l2381 0742                          l2373 0706  
                        l2429 053C                          l2461 0017                          l5013 06AB  
                        l5005 067E                          l5021 0C04                          l5101 030A  
                        l2438 02AD                          l2390 0779                          l2382 0743  
                        l2462 0032                          l2439 02BF                          l2391 077A  
                        l2383 0751                          l2375 0705                          l5015 06AF  
                        l5007 0682                          l5031 0161                          l5023 0137  
                        l5111 0329                          l5103 0311                          l2392 0788  
                        l2384 0744                          l2376 070F                          l2393 077B  
                        l2385 0758                          l2377 0714                          l2369 06F1  
                        l5009 0691                          l5017 0BF0                          l5041 018C  
                        l5033 0176                          l5025 013E                          l5113 0331  
                        l5121 034C                          l5105 0317                          l5201 0432  
                        l2394 078F                          l2378 0759                          l2386 0790  
                        l4331 0EBB                          l2395 07A5                          l2387 0790  
                        l2379 0729                          l5019 0BF5                          l5043 019A  
                        l5035 017D                          l5027 0143                          l5051 0F0D  
                        l5131 037F                          l5123 0353                          l5115 0336  
                        l5107 031B                          l5211 0447                          l5203 0435  
                        l2660 0FFF                          l2396 07BA                          l2388 0760  
                        l4341 0EE5                          l4333 0EBE                          l4325 0EAB  
                        l4421 0C3A                          l4501 0127                          l2661 0FA7  
                        l2397 07E3                          l5045 019E                          l5037 017E  
                        l5029 0145                          l5061 0F22                          l5053 0F12  
                        l5133 038A                          l5125 0366                          l5117 033C  
                        l5109 0321                          l5141 003D                          l5221 047A  
                        l5213 0448                          l5205 0442                          l2670 0FE6  
                        l2662 0F9A                          l4351 0EF7                          l4343 0EE7  
                        l4335 0EC0                          l4327 0EB3                          l4431 0C4A  
                        l4423 0C3E                          l4503 0B36                          l4511 0B72  
                        l2671 0FFF                          l2663 0FAE                          l5047 01A4  
                        l5039 0185                          l5071 0F37                          l5063 0F31  
                        l5055 0F15                          l5135 039D                          l5127 036F  
                        l5119 033D                          l5151 005E                          l5143 0041  
                        l5223 0484                          l5215 0462                          l5207 0445  
                        l5231 01F1                          l2664 0FC5                          l4361 0F07  
                        l4353 0EFC                          l4345 0EED                          l4337 0EC2  
                        l4329 0EB9                          l4425 0C40                          l4441 0C57  
                        l4433 0C4E                          l4505 0B3C                          l4513 0B42  
                        l4521 0E19                          l2665 0FAF                          l2657 0F99  
                        l5049 01AB                          l5081 0F58                          l5073 0F44  
                        l5065 0F34                          l5057 0F16                          l5129 0375  
                        l5137 039E                          l5161 0096                          l5153 0065  
                        l5145 0047                          l5225 0487                          l5217 0465  
                        l5209 0446                          l5241 0222                          l5233 01F6  
                        l2666 0FCC                          l4363 0F09                          l4355 0F01  
                        l4347 0EF1                          l4339 0EE2                          l4371 0C1C  
                        l4427 0C42                          l4419 0C34                          l4451 0C5C  
                        l4443 0C58                          l4435 0C52                          l4507 0B66  
                        l4531 0E42                          l4523 0E20                          l4515 0E0D  
                        l2667 0FD8                          l2659 0F91                          l5091 0F7D  
                        l5083 0F59                          l5075 0F53                          l5067 0F35  
                        l5059 0F17                          l5163 00A0                          l5155 0071  
                        l5147 0048                          l5139 0036                          l5219 046F  
                        l5171 03C7                          l5251 0240                          l5243 0227  
                        l5235 01FC                          l5227 01C7                          l2668 0FCD  
                        l4365 0F0B                          l4357 0F04                          l4349 0EF6  
                        l4381 0C30                          l4373 0C25                          l4429 0C49  
                        l4461 0C61                          l4453 0C5D                          l4445 0C59  
                        l4437 0C55                          l4533 0E44                          l4525 0E25  
                        l4517 0E0F                          l4541 0DC9                          l2669 0FDC  
                        l5093 0F7E                          l5085 0F72                          l5077 0F56  
                        l5069 0F36                          l5149 0059                          l5157 0084  
                        l5181 03F2                          l5173 03D6                          l5165 03AE  
                        l5253 0246                          l5245 022C                          l5237 0205  
                        l5229 01E2                          l4359 0F06                          l4367 0B8A  
                        l4375 0C29                          l4471 0C66                          l4463 0C62  
                        l4455 0C5E                          l4447 0C5A                          l4439 0C56  
                        l4535 0E4B                          l4527 0E2B                          l4519 0E15  
                        l4551 0DE5                          l4543 0DCF                          l5095 0F7F  
                        l5087 0F79                          l5079 0F57                          l5159 008A  
                        l5191 0402                          l5183 03F5                          l5175 03DD  
                        l5167 03B3                          l5255 024D                          l5247 0231  
                        l5239 020B                          l4369 0B92                          l4377 0C2A  
                        l4473 0C67                          l4465 0C63                          l4457 0C5F  
                        l4449 0C5B                          l4481 00B1                          l4529 0E3C  
                        l4537 0E53                          l4561 0E0C                          l4553 0DEF  
                        l4545 0DD3                          l4641 0274                          l4801 070E  
                        l5089 0F7C                          l5097 02FE                          l5193 0412  
                        l5185 03F6                          l5177 03E7                          l5169 03BE  
                        l5249 0237                          l4379 0C2D                          l4475 0C68  
                        l4467 0C64                          l4459 0C60                          l4491 00FB  
                        l4483 00B7                          l4539 0E5A                          l4555 0DF6  
                        l4547 0DDA                          l4571 0F9A                          l4563 0F85  
                        l4651 0295                          l4643 0275                          l4811 0733  
                        l4803 0713                          l5099 0301                          l5195 041C  
                        l5187 03F7                          l5179 03EC                          l4477 0C69  
                        l4469 0C65                          l4493 0102                          l4485 00C6  
                        l4557 0DFD                          l4549 0DDF                          l4581 0FCD  
                        l4573 0FA7                          l4565 0F89                          l4661 02AD  
                        l4653 0297                          l4645 0287                          l4637 0258  
                        l4741 0D68                          l4821 0760                          l4813 0739  
                        l4805 0715                          l4901 000E                          l5197 041D  
                        l5189 03F8                          l4479 0C6A                          l4495 0111  
                        l4487 00E6                          l4559 0E05                          l4591 0FFE  
                        l4583 0FD8                          l4575 0FAF                          l4567 0F91  
                        l4671 02DD                          l4655 029B                          l4663 02C0  
                        l4647 0288                          l4639 026B                          l4751 0D86  
                        l4743 0D6F                          l4831 0794                          l4823 076A  
                        l4815 0744                          l4807 071B                          l4903 0017  
                        l4911 0CD5                          l5199 0428                          l4497 0119  
                        l4489 00EE                          l4585 0FE0                          l4577 0FB3  
                        l4569 0F98                          l4665 02C6                          l4673 02E4  
                        l4657 02A2                          l4649 028E                          l4753 0D88  
                        l4761 0D8E                          l4745 0D70                          l4841 07CF  
                        l4833 07A5                          l4825 0770                          l4817 0751  
                        l4809 0729                          l4905 0032                          l4921 0CF4  
                        l4913 0CD9                          l4499 0121                          l4587 0FE8  
                        l4579 0FBD                          l4675 02E8                          l4667 02CF  
                        l4659 02AB                          l4763 0D90                          l4755 0D89  
                        l4747 0D7A                          l4739 0D5E                          l4771 0B98  
                        l4843 07DF                          l4835 07A9                          l4827 077B  
                        l4819 0759                          l4851 04AA                          l4907 0C8C  
                        l4923 0CF6                          l4915 0CE1                          l4931 0B50  
                        l4589 0FFA                          l4677 02F4                          l4669 02D1  
                        l4757 0D8A                          l4749 0D80                          l4765 0BA5  
                        l4773 0D00                          l4845 07E3                          l4837 07BA  
                        l4829 0788                          l4781 06D4                          l4861 04CB  
                        l4853 04B1                          l4909 0CAF                          l4925 0CF7  
                        l4917 0CE9                          l4933 0CB1                          l4941 0B7E  
                        l4679 02FD                          l4759 0D8C                          l4767 0BA6  
                        l4775 0D12                          l4847 07FF                          l4839 07CB  
                        l4791 06F1                          l4783 06D8                          l4871 0506  
                        l4863 04F8                          l4855 04B2                          l4927 0CFC  
                        l4919 0CEE                          l4935 0CB7                          l4943 0B5A  
                        l4951 0C73                          l4769 0BAF                          l4777 0D1B  
                        l4793 06F5                          l4785 06DE                          l4881 0530  
                        l4873 050B                          l4865 04F9                          l4857 04C3  
                        l4849 0497                          l4929 0CFE                          l4937 0CC3  
                        l4945 0BB7                          l4953 0C75                          l4961 0C1B  
                        l4795 06FB                          l4787 06E9                          l4779 06BA  
                        l4891 0559                          l4883 0537                          l4875 050F  
                        l4867 04FA                          l4859 04CA                          l4939 0CC8  
                        l4947 0BC9                          l4955 0C8A                          l4963 0BCA  
                        l4971 0D39                          l4797 0706                          l4789 06F0  
                        l4893 0561                          l4885 053C                          l4877 0520  
                        l4869 0500                          l4949 0C6D                          l4957 0C05  
                        l4965 0BDC                          l4973 0D43                          l4981 0E5C  
                        l4799 070A                          l4895 0568                          l4887 0540  
                        l4879 0528                          l4959 0C17                          l4975 0D4D  
                        l4967 0D2A                          l4983 0E6C                          l4991 0E99  
                        l4897 0584                          l4889 0551                          l4977 0D57  
                        l4969 0D30                          l4985 0E7B                          l4993 0585  
                        l4899 0007                          l4987 0E81                          l4979 0E5B  
                        l4995 058F                          l4989 0E92                          l4997 0595  
                        l4999 065C                          _P1M0 00BE                          _P1M1 00BF  
                        STR_1 085B                          STR_2 0861                          STR_3 081F  
                        STR_4 0810                          STR_5 0854                          STR_6 082B  
                        STR_7 084D                          STR_8 0834                          STR_9 083D  
                        _FERR 00C2                          u3000 0DEF                          u3001 0DEE  
                        u3020 0E03                          u3100 0FDC                          u3021 0E02  
                        u3005 0DEB                          u3101 0FDB                          u3110 0FE0  
                        u3030 0F89                          u3015 0DF7                          u3111 0FDF  
                        u3120 0FF1                          u3040 0F90                          u4000 032E  
                        u3041 0F8F                          u4001 032D                          u3130 0FFE  
                        u4010 0375                          u3060 0FAD                          u3300 02E2  
                        u3220 026B                          u4020 0047                          u4100 0221  
                        u3125 0FED                          u3061 0FAC                          u3301 02E1  
                        u3221 026A                          u4021 0046                          u4101 0220  
                        u3310 02E8                          u3230 0280                          u4030 005E  
                        u4110 0246                          u3055 0F9F                          u4031 005D  
                        u3080 0FCB                          u3240 029B                          u3400 0D80  
                        u4040 0064                          u3081 0FCA                          u3241 029A  
                        u3401 0D7F                          u4041 0063                          u3250 02A2  
                        u3410 0D86                          u4050 0092                          u3075 0FBE  
                        u3251 02A1                          u3235 027C                          u3411 0D85  
                        u4051 0091                          u3420 0BB5                          u3500 0713  
                        u4060 03EB                          u3421 0BB4                          u3501 0712  
                        u3270 02BE                          u3510 0728                          u3430 06D8  
                        u4070 0424                          u3095 0FD0                          u3271 02BD  
                        u3511 0727                          u4207 0F3D                          u4071 0423  
                        u4127 01EA                          u3280 02C6                          u3600 0778  
                        u3440 06DE                          u4080 0476                          u3281 02C5  
                        u3265 02AE                          u3601 0777                          u3441 06DD  
                        u4217 0F4C                          u4081 0475                          u4137 03CF  
                        u2730 0EB9                          u3530 0739                          u3450 06E8  
                        u4090 021B                          u2731 0EB8                          u3531 0738  
                        u3451 06E7                          u4227 0F6B                          u4147 040A  
                        u4091 021A                          u2740 0EE2                          u2900 0E15  
                        u3620 078E                          u3540 0741                          u3460 06F5  
                        u3700 04ED                          u2741 0EE1                          u2901 0E14  
                        u3621 078D                          u3541 0740                          u3525 072A  
                        u4237 0D34                          u4157 043B                          u2750 0EEC  
                        u2830 00B7                          u3390 0D6E                          u3630 0794  
                        u3470 06FB                          u3710 050F                          u2751 0EEB  
                        u2831 00B6                          u3295 02D3                          u3391 0D6D  
                        u4247 0D16                          u3631 0793                          u3615 077C  
                        u3471 06FA                          u3711 050E                          u4167 045A  
                        u2760 0EF5                          u2840 00FB                          u2920 0E29  
                        u3640 07A9                          u3560 0757                          u3480 0705  
                        u3800 0567                          u2761 0EF4                          u2745 0EDE  
                        u2841 00FA                          u2921 0E28                          u4257 0D25  
                        u3641 07A8                          u3561 0756                          u3481 0704  
                        u3801 0566                          u3721 0518                          u3705 04E9  
                        u4177 048D                          u2770 0F00                          u2850 0111  
                        u3570 075F                          u3490 070E                          u3722 051F  
                        u3810 000E                          u2771 0EFF                          u2851 0110  
                        u2915 0E1A                          u3651 07C4                          u3571 075E  
                        u3555 0745                          u3491 070D                          u3811 000D  
                        u4187 00A8                          u2780 0B91                          u2860 0B6D  
                        u2940 0E3C                          u3660 07CF                          u3652 07CB  
                        u3820 0CE8                          u3900 067E                          u2781 0B90  
                        u2845 00F7                          u2861 0B69                          u2941 0E3B  
                        u3661 07CE                          u3821 0CE7                          u3901 067D  
                        u4197 0F2A                          u3590 0770                          u3750 0536  
                        u3670 04AA                          u3830 0CF4                          u3910 069E  
                        u2855 010D                          u2935 0E2C                          u3591 076F  
                        u3751 0535                          u3735 0521                          u3671 04A9  
                        u3831 0CF3                          u3911 069D                          u2880 0B79  
                        u2960 0E51                          u3760 0540                          u3680 04C3  
                        u3840 0CB7                          u3920 06AB                          u2881 0B75  
                        u2961 0E50                          u2945 0E38                          u3585 0761  
                        u3761 053F                          u3745 0529                          u3681 04C2  
                        u3841 0CB6                          u3921 06AA                          u2874 0B70  
                        u2970 0DCF                          u3690 04DB                          u3850 0C73  
                        u3930 017C                          u2955 0E45                          u2971 0DCE  
                        u3771 0549                          u3851 0C72                          u3915 069A  
                        u3931 017B                          u3772 0550                          u3860 0E6C  
                        u3940 018B                          _RCIF 0065                          u3861 0E6B  
                        u3941 018A                          u2894 0B7C                          u2990 0DE3  
                        u3870 0E7A                          u3950 01C5                          u2991 0DE2  
                        u3695 04D7                          u3871 0E79                          u3951 01C4  
                        u3880 0EA9                          u3960 0310                          u2985 0DD4  
                        u3785 0552                          u3881 0EA8                          u3961 030F  
                        u3890 0671                          u3970 0316                          u3795 055A  
                        u3891 0670                          u3955 01C1                          u3971 0315  
                        u3980 0321                          u3981 0320                          u3990 0328  
                        u3895 066D                          u3991 0327                          _TRMT 04C1  
                        _WREN 0C62                          _main 01C7                  ___ftpack@arg 0070  
                        _mode 006A                  ___ftpack@exp 0073                          btemp 007E  
                 ?_PID_UPDATE 0070                          start 0000                  ___ftmul@cntr 003C  
                ___ftmul@sign 003D                  ___fttol@exp1 0029                  ___fttol@lval 0025  
                lcd_num@digit 007B              SEND_PACKET@value 0079                         _DC1B0 00BC  
                       _DC1B1 00BD                         ?_main 0070                         _CCP2X 00ED  
                       _CCP2Y 00EC                         _EEADR 010D               __end_of___ftadd 0800  
                       STR_10 0846                         STR_11 082B                         _CARRY 0018  
                       _ANSEL 0188               __end_of___ftmul 0585               __end_of___fttol 02FE  
             __end_of___lwdiv 0E5B              __end_of_PID_MENU 03AE               __end_of___lwmod 0E0D  
                ?_line_follow 0070                         _RCREG 001A                         _SPBRG 0099  
                       _PORTB 0006                         _PORTC 0007                         _PORTD 0008  
                       _PORTE 0009                         _TRISA 0085                         _TRISB 0086  
                       _TRISC 0087                         _TRISD 0088                         _TRISE 0089  
                       _TXREG 0019            __size_of_UART_DUMP 0012          send_lcd_data@uc_data 0071  
          __size_of_UART_INIT 0018            __size_of_UART_SEND 000E              __end_of_UART_REC 0F0D  
             __end_of_lcd_clr 0B5A               __end_of_lcd_num 01C7                 ___awtoft@sign 002D  
                       _jfolo 0033     LSA08_GetPosition@linepost 007A           __size_of_LSA08_Init 0015  
               ___ftpack@sign 0074                         _motor 0B97                         pclath 000A  
                       status 0003                         wtemp0 007E                  ?_SEND_PACKET 0078  
           UART_REC@waitcount 0071             send_lcd_data@b_rs 0074            __size_of_Calibrate 0078  
                __end_of_main 0258          __size_of_lcd_2ndline 000B         __end_of_send_lcd_data 0D2A  
                      ??_main 005D                 ___fttol@sign1 0024           __size_of_PID_UPDATE 0087  
               lcd_num@number 0079                        _CCP1M0 00B8                        _CCP1M1 00B9  
                      _CCP1M2 00BA                        _CCP1M3 00BB                        _CCP2M0 00E8  
                      _CCP2M1 00E9                        _CCP2M2 00EA                        _CCP2M3 00EB  
                      ?_jfolo 0070                        _EEDATA 010C                        _CCPR1L 0015  
                      _CCPR2L 001B                        _EECON1 018C                        _EECON2 018D  
                      ?_motor 0071              __end_of___awtoft 0033              __end_of___ftpack 1000  
                      _ANSELH 0189         __end_of_UART_RESPONSE 0D92                        _SPBRGH 009A  
                      _TMR2ON 0092      __size_of_junction_follow 00E9             _LSA08_GetJunction 0C05  
          ?_LSA08_GetJunction 0070             __end_of_UART_DUMP 0BB7             __end_of_UART_INIT 0C34  
           __end_of_UART_SEND 0B97             _LSA08_GetPosition 0CD5              __end_of_lcd_init 0D5D  
            __end_of_lcd_goto 0CD5                     ??___ftadd 0044            ?_LSA08_GetPosition 0070  
                   ??___ftmul 0034                     ??___fttol 0020                     ??___lwdiv 0074  
                   ??___lwmod 0074                        _m_diff 0062                        _initIO 0C34  
         ??_LSA08_GetJunction 007D          __size_of_lcd_putchar 000C                     ??_lcd_clr 0075  
                   ??_lcd_num 0020         ___ftmul@f3_as_product 0039           ??_LSA08_GetPosition 0078  
            __end_of_set_pwml 0B41              __end_of_set_pwmr 0B3B              __end_of_pwm_init 0C6C  
         jfolo@junction_count 0056             __end_of_Calibrate 0F85              ??_LSA08_UARTMode 0020  
   __end_of_LSA08_GetJunction 0C1C                    ___ftadd@f1 003E                    ___ftadd@f2 0041  
   __end_of_LSA08_GetPosition 0CFF                    ___awtoft@c 002A                     ?_PID_MENU 0070  
                  ___ftmul@f1 002E                    ___ftmul@f2 0031                    ___fttol@f1 0078  
                ??_LSA08_Init 007E                __pcstackCOMMON 0070                SEND_PACKET@add 007C  
                __pidataBANK0 0004                  __pidataBANK1 0B47                     ?_UART_REC 0070  
               __end_of_jfolo 00B0                 __end_of_motor 0BA5             _last_proportional 00A8  
        __size_of_line_follow 0135                       ??_jfolo 0051                       ??_motor 0072  
          __end_of_LSA08_Init 0C05                    __pbssBANK0 0060                    __pbssBANK1 00A0  
          SEND_PACKET@com_dat 007A            SEND_PACKET@command 0078                  ??_PID_UPDATE 0070  
                  ??_PID_MENU 007D                    __pmaintext 01C7          __size_of_SEND_PACKET 0025  
           ??_junction_follow 0057                    ??_UART_REC 0070      motor@uc_left_motor_speed 0072  
                     ?_initIO 0070                     ?___awtoft 002A                     ?___ftpack 0070  
          __size_of_set_lcd_e 000C                    _derivative 00A6                       _T2CKPS0 0090  
                     _T2CKPS1 0091  __size_of_LSA08_ClearJunction 0013            __end_of_PID_UPDATE 0137  
                  _lcd_putstr 0E5B                     ?_lcd_init 0070                     ?_lcd_goto 0070  
    __size_of_LSA08_Calibrate 0013    __size_of_LSA08_GetJunction 0017            PID_UPDATE@position 0072  
               ?_set_lcd_data 0070    __size_of_LSA08_GetPosition 002A         junction_follow@status 005B  
                   ?_set_pwml 0070                     ?_set_pwmr 0070                       ___ftadd 06BA  
                     ___ftmul 0497                       ___fttol 0258                     ?_pwm_init 0070  
                     ___lwdiv 0E0D                       ___lwmod 0DC9               __size_of_initIO 001A  
                  ??___awtoft 007C                    ??___ftpack 0075                       _lcd_clr 0B50  
                     _lcd_num 0137         set_pwmr@uc_duty_cycle 0070                     _LSA08_ADD 006E  
      UART_RESPONSE@rec_bytes 0077                    ??_lcd_init 0075                    ??_lcd_goto 0075  
        end_of_initialization 0DC5       PID_UPDATE@proportional0 00A0       PID_UPDATE@proportional1 00A2  
     PID_UPDATE@proportional2 00A4                       init_ram 0BE1                ??_set_lcd_data 0070  
           __end_of_set_lcd_e 0B71            LSA08_UARTMode@mode 007D                    _set_lcd_rs 0B71  
                  ??_set_pwml 0070                    ??_set_pwmr 0070                 ??_lcd_2ndline 0075  
                   _RCSTAbits 0018                    ??_pwm_init 0070                     _UART_DUMP 0BA5  
                   _UART_INIT 0C1C                     _UART_SEND 0B89              junction_follow@i 005A  
                   _PORTCbits 0007                  PID_MENU@mode 0029     motor@uc_right_motor_speed 0071  
                   _TRISCbits 0087                   ?_lcd_putstr 0077                     _Calibrate 0F0D  
                  lcd_num@num 0024        __size_of_send_lcd_data 002B                     _TXSTAbits 0098  
           ??_LSA08_Calibrate 0020         LSA08_GetPosition@post 0079                   ___ftmul@exp 0038  
           __size_of_PID_MENU 00B0                 ??_lcd_putchar 0075                    ?_UART_DUMP 0070  
                  ?_UART_INIT 0070                    ?_UART_SEND 0070              UART_REC@rec_data 0075  
           __size_of_UART_REC 0062                   _BAUDCTLbits 0187                 UART_DUMP@dump 0077  
              __end_of_initIO 0C4E             lcd_putchar@c_data 0076           __end_of_lcd_2ndline 0B65  
      __size_of_UART_RESPONSE 0035           start_initialization 0D92                    jfolo@count 0054  
          set_lcd_rs@b_output 0070                    jfolo@timer 0055          lcd_putstr@csz_string 0077  
               UART_SEND@data 0070           lcd_goto@uc_position 0076               _junction_follow 03AE  
                  ?_Calibrate 0070           _LSA08_ClearJunction 0BB7                   ?_set_lcd_rs 0070  
                 __pdataBANK0 006C                   __pdataBANK1 00AA           __size_of_lcd_putstr 0050  
                    ??_initIO 0070                 _send_lcd_data 0CFF          __end_of_set_lcd_data 0B47  
               ??_line_follow 004B          ?_LSA08_ClearJunction 0070             __size_of___awtoft 002C  
           __size_of___ftpack 007B           __end_of_lcd_putchar 0B89                 __pcstackBANK0 0020  
               _junction_mode 0069             __size_of_lcd_init 0033             __size_of_lcd_goto 0025  
               _UART_RESPONSE 0D5D                 ??_SEND_PACKET 007B              ___lwdiv@dividend 0072  
     __size_of_LSA08_UARTMode 001F                   _lcd_2ndline 0B5A                      ?___ftadd 003E  
                   __ptext900 0CD5                     __ptext901 0C8B                     __ptext910 0F85  
                   __ptext902 0007                     __ptext911 0DC9                     __ptext903 0497  
                   __ptext920 0C34                     __ptext912 0E0D                     __ptext904 06BA  
                   __ptext921 0C1C                     __ptext913 0B41                     __ptext905 0CFF  
                   __ptext922 0B89                     __ptext914 0B71                     __ptext906 0B97  
                   __ptext923 0EAB                     __ptext915 0B65                     __ptext907 0BA5  
                   __ptext924 0000                     __ptext916 0B3B                     __ptext908 0D5D  
                   __ptext917 0B35                     __ptext909 0258                     __ptext918 00B0  
                   __ptext919 0C4E                     __ptext890 0E5B                     __ptext891 0D2A  
                   __ptext883 03AE                     __ptext892 0BCA                     __ptext884 0033  
                   __ptext893 0C05                     __ptext885 02FE                     __ptext894 0C6C  
                   __ptext886 0F0D                     __ptext895 0BB7                     __ptext887 0137  
                   __ptext896 0B5A                     __ptext888 0BF0                     __ptext897 0B7D  
                   __ptext889 0585                     __ptext898 0CB0                     __ptext899 0B50  
                    ?___ftmul 002E                      ?___fttol 0078                      ?___lwdiv 0070  
                    ?___lwmod 0070                   ??_UART_DUMP 0076                   ??_UART_INIT 0070  
                 ??_UART_SEND 0070             __size_of_set_pwml 0006             __size_of_set_pwmr 0006  
              ?_send_lcd_data 0071                     __pstrings 0800             __size_of_pwm_init 001E  
       ??_LSA08_ClearJunction 0020                      ?_lcd_clr 0070                      ?_lcd_num 0079  
     __end_of_junction_follow 0497           __size_of_set_lcd_rs 000C              ___lwdiv@quotient 0075  
         __end_of_line_follow 06BA                __size_of_jfolo 007D           set_lcd_data@uc_data 0070  
              __size_of_motor 000E                   ??_Calibrate 0022                ?_UART_RESPONSE 0070  
                    _ERR_FLAG 0068                      _PID_MENU 02FE                     _set_lcd_e 0B65  
                    _UART_REC 0EAB           __end_of_SEND_PACKET 0CB0                   _lcd_putchar 0B7D  
                 __stringbase 080F                  ??_lcd_putstr 0079               _LSA08_Calibrate 0BCA  
                  ?_set_lcd_e 0070         set_pwml@uc_duty_cycle 0070                     init_fetch 0BDD  
       __size_of_set_lcd_data 0006               ??_send_lcd_data 0072              __size_of___ftadd 0146  
            __size_of___ftmul 00EE              __size_of___fttol 00A6   junction_follow@lineposition 005C  
            __size_of___lwdiv 004E            __end_of_lcd_putstr 0EAB              __size_of___lwmod 0044  
                    ___awtoft 0007                      ___ftpack 0F85                   _line_follow 0585  
            __size_of_lcd_clr 000A              __size_of_lcd_num 0090              ?_junction_follow 0070  
             ___lwdiv@divisor 0070               ___lwdiv@counter 0077                      _lcd_init 0D2A  
                    _lcd_goto 0CB0               ??_UART_RESPONSE 0076                 __size_of_main 0091  
                    _integral 0060                  _set_lcd_data 0B41                   _SEND_PACKET 0C8B  
                ??_set_lcd_rs 0070                      _set_pwml 0B3B                      _set_pwmr 0B35  
              _LSA08_UARTMode 0C6C                    _LSA08_Init 0BF0                      _pwm_init 0C4E  
                    lcd_num@i 0036                      lcd_num@j 0034                      lcd_num@k 0035  
     __end_of_LSA08_Calibrate 0BDD            __end_of_set_lcd_rs 0B7D              ___lwmod@dividend 0072  
                  _PID_UPDATE 00B0        __end_of_LSA08_UARTMode 0C8B                     stringcode 080A  
                 ??_set_lcd_e 0070                  ?_lcd_2ndline 0070                   _motor_speed 006C  
             ___lwmod@divisor 0070               ___lwmod@counter 0075                      stringdir 080A  
                    stringtab 0800                 PID_MENU@count 0025          line_follow@leftspeed 004D  
             ?_LSA08_UARTMode 0070  
